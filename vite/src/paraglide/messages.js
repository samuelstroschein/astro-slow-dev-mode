// @ts-nocheck
/* eslint-disable */
import { getLocale } from "./runtime.js";
import * as en from "./messages/en.js";
import * as de from "./messages/de.js";
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const site_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.site_title(inputs);
  if (locale === "de") return de.site_title(inputs);
  return "site_title";
};

export { site_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const site_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.site_description(inputs);
  if (locale === "de") return de.site_description(inputs);
  return "site_description";
};

export { site_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{ site: NonNullable<unknown> }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const follow_us_on = (inputs, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.follow_us_on(inputs);
  if (locale === "de") return de.follow_us_on(inputs);
  return "follow_us_on";
};

export { follow_us_on };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{ site: NonNullable<unknown> }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const view_on = (inputs, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.view_on(inputs);
  if (locale === "de") return de.view_on(inputs);
  return "view_on";
};

export { view_on };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const all_rights_reserved = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.all_rights_reserved(inputs);
  if (locale === "de") return de.all_rights_reserved(inputs);
  return "all_rights_reserved";
};

export { all_rights_reserved };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{ count: NonNullable<unknown> }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const count = (inputs, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.count(inputs);
  if (locale === "de") return de.count(inputs);
  return "count";
};

export { count };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const english = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.english(inputs);
  if (locale === "de") return de.english(inputs);
  return "english";
};

export { english };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const german = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.german(inputs);
  if (locale === "de") return de.german(inputs);
  return "german";
};

export { german };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const page_not_found = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.page_not_found(inputs);
  if (locale === "de") return de.page_not_found(inputs);
  return "page_not_found";
};

export { page_not_found };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{ locale: NonNullable<unknown> }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const switch_locale = (inputs, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.switch_locale(inputs);
  if (locale === "de") return de.switch_locale(inputs);
  return "switch_locale";
};

export { switch_locale };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const home = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.home(inputs);
  if (locale === "de") return de.home(inputs);
  return "home";
};

export { home };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const pricing = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.pricing(inputs);
  if (locale === "de") return de.pricing(inputs);
  return "pricing";
};

export { pricing };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const pricing_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.pricing_description(inputs);
  if (locale === "de") return de.pricing_description(inputs);
  return "pricing_description";
};

export { pricing_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const blog = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.blog(inputs);
  if (locale === "de") return de.blog(inputs);
  return "blog";
};

export { blog };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const documentation = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.documentation(inputs);
  if (locale === "de") return de.documentation(inputs);
  return "documentation";
};

export { documentation };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const login = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.login(inputs);
  if (locale === "de") return de.login(inputs);
  return "login";
};

export { login };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const register = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.register(inputs);
  if (locale === "de") return de.register(inputs);
  return "register";
};

export { register };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const solutions = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.solutions(inputs);
  if (locale === "de") return de.solutions(inputs);
  return "solutions";
};

export { solutions };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support(inputs);
  if (locale === "de") return de.support(inputs);
  return "support";
};

export { support };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const turn_off_adblock = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.turn_off_adblock(inputs);
  if (locale === "de") return de.turn_off_adblock(inputs);
  return "turn_off_adblock";
};

export { turn_off_adblock };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const making_world_better = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.making_world_better(inputs);
  if (locale === "de") return de.making_world_better(inputs);
  return "making_world_better";
};

export { making_world_better };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const carbon_removal = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.carbon_removal(inputs);
  if (locale === "de") return de.carbon_removal(inputs);
  return "carbon_removal";
};

export { carbon_removal };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const open_source = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.open_source(inputs);
  if (locale === "de") return de.open_source(inputs);
  return "open_source";
};

export { open_source };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const built_with_supabase = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.built_with_supabase(inputs);
  if (locale === "de") return de.built_with_supabase(inputs);
  return "built_with_supabase";
};

export { built_with_supabase };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const build_in_public_on_twitter = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.build_in_public_on_twitter(inputs);
  if (locale === "de") return de.build_in_public_on_twitter(inputs);
  return "build_in_public_on_twitter";
};

export { build_in_public_on_twitter };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const footer = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.footer(inputs);
  if (locale === "de") return de.footer(inputs);
  return "footer";
};

export { footer };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const company = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.company(inputs);
  if (locale === "de") return de.company(inputs);
  return "company";
};

export { company };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const legal = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.legal(inputs);
  if (locale === "de") return de.legal(inputs);
  return "legal";
};

export { legal };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const copyright = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.copyright(inputs);
  if (locale === "de") return de.copyright(inputs);
  return "copyright";
};

export { copyright };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust(inputs);
  if (locale === "de") return de.trust(inputs);
  return "trust";
};

export { trust };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const app_mobile = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.app_mobile(inputs);
  if (locale === "de") return de.app_mobile(inputs);
  return "app_mobile";
};

export { app_mobile };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const plugins = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.plugins(inputs);
  if (locale === "de") return de.plugins(inputs);
  return "plugins";
};

export { plugins };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const disclaimer = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.disclaimer(inputs);
  if (locale === "de") return de.disclaimer(inputs);
  return "disclaimer";
};

export { disclaimer };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const read_our_disclaimer = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.read_our_disclaimer(inputs);
  if (locale === "de") return de.read_our_disclaimer(inputs);
  return "read_our_disclaimer";
};

export { read_our_disclaimer };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const plugins_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.plugins_description(inputs);
  if (locale === "de") return de.plugins_description(inputs);
  return "plugins_description";
};

export { plugins_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const awesome_capacitor = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.awesome_capacitor(inputs);
  if (locale === "de") return de.awesome_capacitor(inputs);
  return "awesome_capacitor";
};

export { awesome_capacitor };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const top_app_by_framework = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.top_app_by_framework(inputs);
  if (locale === "de") return de.top_app_by_framework(inputs);
  return "top_app_by_framework";
};

export { top_app_by_framework };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const community = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.community(inputs);
  if (locale === "de") return de.community(inputs);
  return "community";
};

export { community };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const guides = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.guides(inputs);
  if (locale === "de") return de.guides(inputs);
  return "guides";
};

export { guides };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const status = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.status(inputs);
  if (locale === "de") return de.status(inputs);
  return "status";
};

export { status };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const chat = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.chat(inputs);
  if (locale === "de") return de.chat(inputs);
  return "chat";
};

export { chat };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const sponsor = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.sponsor(inputs);
  if (locale === "de") return de.sponsor(inputs);
  return "sponsor";
};

export { sponsor };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const about = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.about(inputs);
  if (locale === "de") return de.about(inputs);
  return "about";
};

export { about };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const imprint = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.imprint(inputs);
  if (locale === "de") return de.imprint(inputs);
  return "imprint";
};

export { imprint };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const imprint_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.imprint_description(inputs);
  if (locale === "de") return de.imprint_description(inputs);
  return "imprint_description";
};

export { imprint_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const jobs = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.jobs(inputs);
  if (locale === "de") return de.jobs(inputs);
  return "jobs";
};

export { jobs };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const contributing = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.contributing(inputs);
  if (locale === "de") return de.contributing(inputs);
  return "contributing";
};

export { contributing };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const contributing_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.contributing_description(inputs);
  if (locale === "de") return de.contributing_description(inputs);
  return "contributing_description";
};

export { contributing_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const consulting_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.consulting_description(inputs);
  if (locale === "de") return de.consulting_description(inputs);
  return "consulting_description";
};

export { consulting_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security(inputs);
  if (locale === "de") return de.security(inputs);
  return "security";
};

export { security };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const consulting = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.consulting(inputs);
  if (locale === "de") return de.consulting(inputs);
  return "consulting";
};

export { consulting };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const affiliate = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.affiliate(inputs);
  if (locale === "de") return de.affiliate(inputs);
  return "affiliate";
};

export { affiliate };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy(inputs);
  if (locale === "de") return de.privacy(inputs);
  return "privacy";
};

export { privacy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy(inputs);
  if (locale === "de") return de.support_policy(inputs);
  return "support_policy";
};

export { support_policy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const read_our_support_policy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.read_our_support_policy(inputs);
  if (locale === "de") return de.read_our_support_policy(inputs);
  return "read_our_support_policy";
};

export { read_our_support_policy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_policy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_policy(inputs);
  if (locale === "de") return de.privacy_policy(inputs);
  return "privacy_policy";
};

export { privacy_policy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const read_our_privacy_policy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.read_our_privacy_policy(inputs);
  if (locale === "de") return de.read_our_privacy_policy(inputs);
  return "read_our_privacy_policy";
};

export { read_our_privacy_policy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const sla = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.sla(inputs);
  if (locale === "de") return de.sla(inputs);
  return "sla";
};

export { sla };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const sla_policy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.sla_policy(inputs);
  if (locale === "de") return de.sla_policy(inputs);
  return "sla_policy";
};

export { sla_policy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const read_our_sla_policy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.read_our_sla_policy(inputs);
  if (locale === "de") return de.read_our_sla_policy(inputs);
  return "read_our_sla_policy";
};

export { read_our_sla_policy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_policy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_policy(inputs);
  if (locale === "de") return de.security_policy(inputs);
  return "security_policy";
};

export { security_policy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const read_our_security_policy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.read_our_security_policy(inputs);
  if (locale === "de") return de.read_our_security_policy(inputs);
  return "read_our_security_policy";
};

export { read_our_security_policy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const return_policy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.return_policy(inputs);
  if (locale === "de") return de.return_policy(inputs);
  return "return_policy";
};

export { return_policy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const read_our_return_policy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.read_our_return_policy(inputs);
  if (locale === "de") return de.read_our_return_policy(inputs);
  return "read_our_return_policy";
};

export { read_our_return_policy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const aup = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.aup(inputs);
  if (locale === "de") return de.aup(inputs);
  return "aup";
};

export { aup };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const read_our_aup = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.read_our_aup(inputs);
  if (locale === "de") return de.read_our_aup(inputs);
  return "read_our_aup";
};

export { read_our_aup };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const Capacitor_Sanbox_App = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.Capacitor_Sanbox_App(inputs);
  if (locale === "de") return de.Capacitor_Sanbox_App(inputs);
  return "Capacitor_Sanbox_App";
};

export { Capacitor_Sanbox_App };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const Capacitor_Sanbox_App_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.Capacitor_Sanbox_App_description(inputs);
  if (locale === "de") return de.Capacitor_Sanbox_App_description(inputs);
  return "Capacitor_Sanbox_App_description";
};

export { Capacitor_Sanbox_App_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula(inputs);
  if (locale === "de") return de.eula(inputs);
  return "eula";
};

export { eula };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const read_our_eula = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.read_our_eula(inputs);
  if (locale === "de") return de.read_our_eula(inputs);
  return "read_our_eula";
};

export { read_our_eula };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_processing_agreement = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_processing_agreement(inputs);
  if (locale === "de") return de.data_processing_agreement(inputs);
  return "data_processing_agreement";
};

export { data_processing_agreement };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const read_our_data_processing_agreement = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.read_our_data_processing_agreement(inputs);
  if (locale === "de") return de.read_our_data_processing_agreement(inputs);
  return "read_our_data_processing_agreement";
};

export { read_our_data_processing_agreement };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const terms = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.terms(inputs);
  if (locale === "de") return de.terms(inputs);
  return "terms";
};

export { terms };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const read_our_terms_of_service = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.read_our_terms_of_service(inputs);
  if (locale === "de") return de.read_our_terms_of_service(inputs);
  return "read_our_terms_of_service";
};

export { read_our_terms_of_service };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_txt = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_txt(inputs);
  if (locale === "de") return de.security_txt(inputs);
  return "security_txt";
};

export { security_txt };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dp = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dp(inputs);
  if (locale === "de") return de.dp(inputs);
  return "dp";
};

export { dp };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa(inputs);
  if (locale === "de") return de.dpa(inputs);
  return "dpa";
};

export { dpa };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const instant_updates_for_capacitor = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.instant_updates_for_capacitor(inputs);
  if (locale === "de") return de.instant_updates_for_capacitor(inputs);
  return "instant_updates_for_capacitor";
};

export { instant_updates_for_capacitor };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const ship_updates_fixes_changes_and_features = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.ship_updates_fixes_changes_and_features(inputs);
  if (locale === "de")
    return de.ship_updates_fixes_changes_and_features(inputs);
  return "ship_updates_fixes_changes_and_features";
};

export { ship_updates_fixes_changes_and_features };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const within_minutes = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.within_minutes(inputs);
  if (locale === "de") return de.within_minutes(inputs);
  return "within_minutes";
};

export { within_minutes };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const no_credit_card_required = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.no_credit_card_required(inputs);
  if (locale === "de") return de.no_credit_card_required(inputs);
  return "no_credit_card_required";
};

export { no_credit_card_required };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const try_for_free = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.try_for_free(inputs);
  if (locale === "de") return de.try_for_free(inputs);
  return "try_for_free";
};

export { try_for_free };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const instant_updates = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.instant_updates(inputs);
  if (locale === "de") return de.instant_updates(inputs);
  return "instant_updates";
};

export { instant_updates };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const reach_users_now_not_weeks_later = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.reach_users_now_not_weeks_later(inputs);
  if (locale === "de") return de.reach_users_now_not_weeks_later(inputs);
  return "reach_users_now_not_weeks_later";
};

export { reach_users_now_not_weeks_later };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const app_store_compliant = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.app_store_compliant(inputs);
  if (locale === "de") return de.app_store_compliant(inputs);
  return "app_store_compliant";
};

export { app_store_compliant };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const compliant_with_apple_and_android_requirements = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.compliant_with_apple_and_android_requirements(inputs);
  if (locale === "de")
    return de.compliant_with_apple_and_android_requirements(inputs);
  return "compliant_with_apple_and_android_requirements";
};

export { compliant_with_apple_and_android_requirements };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const end_to_end_encryption = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.end_to_end_encryption(inputs);
  if (locale === "de") return de.end_to_end_encryption(inputs);
  return "end_to_end_encryption";
};

export { end_to_end_encryption };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const only_your_users_can_decrypt_your_updates_no_one_else = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.only_your_users_can_decrypt_your_updates_no_one_else(inputs);
  if (locale === "de")
    return de.only_your_users_can_decrypt_your_updates_no_one_else(inputs);
  return "only_your_users_can_decrypt_your_updates_no_one_else";
};

export { only_your_users_can_decrypt_your_updates_no_one_else };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const no_more_wait = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.no_more_wait(inputs);
  if (locale === "de") return de.no_more_wait(inputs);
  return "no_more_wait";
};

export { no_more_wait };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const for_apple_and_google_app_updates_distribution = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.for_apple_and_google_app_updates_distribution(inputs);
  if (locale === "de")
    return de.for_apple_and_google_app_updates_distribution(inputs);
  return "for_apple_and_google_app_updates_distribution";
};

export { for_apple_and_google_app_updates_distribution };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const youre_in_good_company = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.youre_in_good_company(inputs);
  if (locale === "de") return de.youre_in_good_company(inputs);
  return "youre_in_good_company";
};

export { youre_in_good_company };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const capgo_enables_development_teams_at_some_of_the_most_innovative_companies =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.capgo_enables_development_teams_at_some_of_the_most_innovative_companies(
        inputs
      );
    if (locale === "de")
      return de.capgo_enables_development_teams_at_some_of_the_most_innovative_companies(
        inputs
      );
    return "capgo_enables_development_teams_at_some_of_the_most_innovative_companies";
  };

export { capgo_enables_development_teams_at_some_of_the_most_innovative_companies };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const apps_with_20m_users = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.apps_with_20m_users(inputs);
  if (locale === "de") return de.apps_with_20m_users(inputs);
  return "apps_with_20m_users";
};

export { apps_with_20m_users };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const use_capgo = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.use_capgo(inputs);
  if (locale === "de") return de.use_capgo(inputs);
  return "use_capgo";
};

export { use_capgo };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const our_numbers_are_shared_transparently_since_december_2021 = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.our_numbers_are_shared_transparently_since_december_2021(inputs);
  if (locale === "de")
    return de.our_numbers_are_shared_transparently_since_december_2021(inputs);
  return "our_numbers_are_shared_transparently_since_december_2021";
};

export { our_numbers_are_shared_transparently_since_december_2021 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const last_update = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.last_update(inputs);
  if (locale === "de") return de.last_update(inputs);
  return "last_update";
};

export { last_update };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const updates_delivered = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.updates_delivered(inputs);
  if (locale === "de") return de.updates_delivered(inputs);
  return "updates_delivered";
};

export { updates_delivered };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const all_around_the_globe = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.all_around_the_globe(inputs);
  if (locale === "de") return de.all_around_the_globe(inputs);
  return "all_around_the_globe";
};

export { all_around_the_globe };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const apps = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.apps(inputs);
  if (locale === "de") return de.apps(inputs);
  return "apps";
};

export { apps };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const using_us_in_production = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.using_us_in_production(inputs);
  if (locale === "de") return de.using_us_in_production(inputs);
  return "using_us_in_production";
};

export { using_us_in_production };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const stars_in_github = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.stars_in_github(inputs);
  if (locale === "de") return de.stars_in_github(inputs);
  return "stars_in_github";
};

export { stars_in_github };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const how_it_work = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.how_it_work(inputs);
  if (locale === "de") return de.how_it_work(inputs);
  return "how_it_work";
};

export { how_it_work };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const ship_your_first_update_in_less_than_15_minutes = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.ship_your_first_update_in_less_than_15_minutes(inputs);
  if (locale === "de")
    return de.ship_your_first_update_in_less_than_15_minutes(inputs);
  return "ship_your_first_update_in_less_than_15_minutes";
};

export { ship_your_first_update_in_less_than_15_minutes };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const install_the_plugin = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.install_the_plugin(inputs);
  if (locale === "de") return de.install_the_plugin(inputs);
  return "install_the_plugin";
};

export { install_the_plugin };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const send_your_first_update = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.send_your_first_update(inputs);
  if (locale === "de") return de.send_your_first_update(inputs);
  return "send_your_first_update";
};

export { send_your_first_update };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const build_your_app_as_usual_then_send_with_the_cli = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.build_your_app_as_usual_then_send_with_the_cli(inputs);
  if (locale === "de")
    return de.build_your_app_as_usual_then_send_with_the_cli(inputs);
  return "build_your_app_as_usual_then_send_with_the_cli";
};

export { build_your_app_as_usual_then_send_with_the_cli };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const get_the_update = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.get_the_update(inputs);
  if (locale === "de") return de.get_the_update(inputs);
  return "get_the_update";
};

export { get_the_update };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const open_the_app_it_update_in_the_background = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.open_the_app_it_update_in_the_background(inputs);
  if (locale === "de")
    return de.open_the_app_it_update_in_the_background(inputs);
  return "open_the_app_it_update_in_the_background";
};

export { open_the_app_it_update_in_the_background };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const start_now = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.start_now(inputs);
  if (locale === "de") return de.start_now(inputs);
  return "start_now";
};

export { start_now };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const faster_releases = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.faster_releases(inputs);
  if (locale === "de") return de.faster_releases(inputs);
  return "faster_releases";
};

export { faster_releases };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const integration = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.integration(inputs);
  if (locale === "de") return de.integration(inputs);
  return "integration";
};

export { integration };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const goodbye_bugs = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.goodbye_bugs(inputs);
  if (locale === "de") return de.goodbye_bugs(inputs);
  return "goodbye_bugs";
};

export { goodbye_bugs };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const manage_updates_effortlessly = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.manage_updates_effortlessly(inputs);
  if (locale === "de") return de.manage_updates_effortlessly(inputs);
  return "manage_updates_effortlessly";
};

export { manage_updates_effortlessly };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const user_assignment = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.user_assignment(inputs);
  if (locale === "de") return de.user_assignment(inputs);
  return "user_assignment";
};

export { user_assignment };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const easily_assign_users_and_send_the_latest_update_to_your_private_or_public_testers =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.easily_assign_users_and_send_the_latest_update_to_your_private_or_public_testers(
        inputs
      );
    if (locale === "de")
      return de.easily_assign_users_and_send_the_latest_update_to_your_private_or_public_testers(
        inputs
      );
    return "easily_assign_users_and_send_the_latest_update_to_your_private_or_public_testers";
  };

export { easily_assign_users_and_send_the_latest_update_to_your_private_or_public_testers };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const seamless_deployment_process = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.seamless_deployment_process(inputs);
  if (locale === "de") return de.seamless_deployment_process(inputs);
  return "seamless_deployment_process";
};

export { seamless_deployment_process };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const when_your_update_is_ready_deploy_it_seamlessly_to_all_your_users = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.when_your_update_is_ready_deploy_it_seamlessly_to_all_your_users(
      inputs
    );
  if (locale === "de")
    return de.when_your_update_is_ready_deploy_it_seamlessly_to_all_your_users(
      inputs
    );
  return "when_your_update_is_ready_deploy_it_seamlessly_to_all_your_users";
};

export { when_your_update_is_ready_deploy_it_seamlessly_to_all_your_users };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const simple_configuration_management = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.simple_configuration_management(inputs);
  if (locale === "de") return de.simple_configuration_management(inputs);
  return "simple_configuration_management";
};

export { simple_configuration_management };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const manage_all_your_configurations_conveniently_through_our_user_friendly_web_interface =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.manage_all_your_configurations_conveniently_through_our_user_friendly_web_interface(
        inputs
      );
    if (locale === "de")
      return de.manage_all_your_configurations_conveniently_through_our_user_friendly_web_interface(
        inputs
      );
    return "manage_all_your_configurations_conveniently_through_our_user_friendly_web_interface";
  };

export { manage_all_your_configurations_conveniently_through_our_user_friendly_web_interface };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const try_risk_free_with_a_15_days_free_trial = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.try_risk_free_with_a_15_days_free_trial(inputs);
  if (locale === "de")
    return de.try_risk_free_with_a_15_days_free_trial(inputs);
  return "try_risk_free_with_a_15_days_free_trial";
};

export { try_risk_free_with_a_15_days_free_trial };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const get_started = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.get_started(inputs);
  if (locale === "de") return de.get_started(inputs);
  return "get_started";
};

export { get_started };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const they_love_capgo = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.they_love_capgo(inputs);
  if (locale === "de") return de.they_love_capgo(inputs);
  return "they_love_capgo";
};

export { they_love_capgo };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const flexible_organization_management_for_your_team = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.flexible_organization_management_for_your_team(inputs);
  if (locale === "de")
    return de.flexible_organization_management_for_your_team(inputs);
  return "flexible_organization_management_for_your_team";
};

export { flexible_organization_management_for_your_team };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const create_manage_organizations_with_ease = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.create_manage_organizations_with_ease(inputs);
  if (locale === "de") return de.create_manage_organizations_with_ease(inputs);
  return "create_manage_organizations_with_ease";
};

export { create_manage_organizations_with_ease };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const multiple_organizations = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.multiple_organizations(inputs);
  if (locale === "de") return de.multiple_organizations(inputs);
  return "multiple_organizations";
};

export { multiple_organizations };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const manage_various_teams = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.manage_various_teams(inputs);
  if (locale === "de") return de.manage_various_teams(inputs);
  return "manage_various_teams";
};

export { manage_various_teams };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const create_oversee_organizations_from_single_account = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.create_oversee_organizations_from_single_account(inputs);
  if (locale === "de")
    return de.create_oversee_organizations_from_single_account(inputs);
  return "create_oversee_organizations_from_single_account";
};

export { create_oversee_organizations_from_single_account };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const granular_permissions = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.granular_permissions(inputs);
  if (locale === "de") return de.granular_permissions(inputs);
  return "granular_permissions";
};

export { granular_permissions };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const control_access_levels = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.control_access_levels(inputs);
  if (locale === "de") return de.control_access_levels(inputs);
  return "control_access_levels";
};

export { control_access_levels };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const assign_specific_rights_and_access_levels_to_each_user_within_your_organizations =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.assign_specific_rights_and_access_levels_to_each_user_within_your_organizations(
        inputs
      );
    if (locale === "de")
      return de.assign_specific_rights_and_access_levels_to_each_user_within_your_organizations(
        inputs
      );
    return "assign_specific_rights_and_access_levels_to_each_user_within_your_organizations";
  };

export { assign_specific_rights_and_access_levels_to_each_user_within_your_organizations };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const flexible_management = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.flexible_management(inputs);
  if (locale === "de") return de.flexible_management(inputs);
  return "flexible_management";
};

export { flexible_management };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const adapt_as_you_grow = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.adapt_as_you_grow(inputs);
  if (locale === "de") return de.adapt_as_you_grow(inputs);
  return "adapt_as_you_grow";
};

export { adapt_as_you_grow };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const easily_adjust_user_roles_and_permissions_as_your_team_and_projects_evolve_maintaining_optimal_organization_structure =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.easily_adjust_user_roles_and_permissions_as_your_team_and_projects_evolve_maintaining_optimal_organization_structure(
        inputs
      );
    if (locale === "de")
      return de.easily_adjust_user_roles_and_permissions_as_your_team_and_projects_evolve_maintaining_optimal_organization_structure(
        inputs
      );
    return "easily_adjust_user_roles_and_permissions_as_your_team_and_projects_evolve_maintaining_optimal_organization_structure";
  };

export { easily_adjust_user_roles_and_permissions_as_your_team_and_projects_evolve_maintaining_optimal_organization_structure };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const effortless_ci_cd_solutions = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.effortless_ci_cd_solutions(inputs);
  if (locale === "de") return de.effortless_ci_cd_solutions(inputs);
  return "effortless_ci_cd_solutions";
};

export { effortless_ci_cd_solutions };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const we_configure_your_ci_cd_pipeline_directly_in_your_preferred_platform_whether_its_github_actions_gitlab_ci_or_others_we_dont_host_ci_cd_or_charge_you_to_maintain_it =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.we_configure_your_ci_cd_pipeline_directly_in_your_preferred_platform_whether_its_github_actions_gitlab_ci_or_others_we_dont_host_ci_cd_or_charge_you_to_maintain_it(
        inputs
      );
    if (locale === "de")
      return de.we_configure_your_ci_cd_pipeline_directly_in_your_preferred_platform_whether_its_github_actions_gitlab_ci_or_others_we_dont_host_ci_cd_or_charge_you_to_maintain_it(
        inputs
      );
    return "we_configure_your_ci_cd_pipeline_directly_in_your_preferred_platform_whether_its_github_actions_gitlab_ci_or_others_we_dont_host_ci_cd_or_charge_you_to_maintain_it";
  };

export { we_configure_your_ci_cd_pipeline_directly_in_your_preferred_platform_whether_its_github_actions_gitlab_ci_or_others_we_dont_host_ci_cd_or_charge_you_to_maintain_it };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const seamless_integration = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.seamless_integration(inputs);
  if (locale === "de") return de.seamless_integration(inputs);
  return "seamless_integration";
};

export { seamless_integration };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const we_set_up_your_ci_cd_workflow_to_work_seamlessly_with_your_current_development_process_no_need_to_switch_platforms_or_learn_new_tools =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.we_set_up_your_ci_cd_workflow_to_work_seamlessly_with_your_current_development_process_no_need_to_switch_platforms_or_learn_new_tools(
        inputs
      );
    if (locale === "de")
      return de.we_set_up_your_ci_cd_workflow_to_work_seamlessly_with_your_current_development_process_no_need_to_switch_platforms_or_learn_new_tools(
        inputs
      );
    return "we_set_up_your_ci_cd_workflow_to_work_seamlessly_with_your_current_development_process_no_need_to_switch_platforms_or_learn_new_tools";
  };

export { we_set_up_your_ci_cd_workflow_to_work_seamlessly_with_your_current_development_process_no_need_to_switch_platforms_or_learn_new_tools };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tailored_configuration = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tailored_configuration(inputs);
  if (locale === "de") return de.tailored_configuration(inputs);
  return "tailored_configuration";
};

export { tailored_configuration };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const our_team_customizes_the_ci_cd_setup_to_match_your_specific_project_requirements_ensuring_optimal_performance_and_efficiency =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.our_team_customizes_the_ci_cd_setup_to_match_your_specific_project_requirements_ensuring_optimal_performance_and_efficiency(
        inputs
      );
    if (locale === "de")
      return de.our_team_customizes_the_ci_cd_setup_to_match_your_specific_project_requirements_ensuring_optimal_performance_and_efficiency(
        inputs
      );
    return "our_team_customizes_the_ci_cd_setup_to_match_your_specific_project_requirements_ensuring_optimal_performance_and_efficiency";
  };

export { our_team_customizes_the_ci_cd_setup_to_match_your_specific_project_requirements_ensuring_optimal_performance_and_efficiency };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const platform_independence = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.platform_independence(inputs);
  if (locale === "de") return de.platform_independence(inputs);
  return "platform_independence";
};

export { platform_independence };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const whether_you_use_github_gitlab_or_another_version_control_system_we_adapt_our_configuration_to_fit_your_existing_infrastructure =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.whether_you_use_github_gitlab_or_another_version_control_system_we_adapt_our_configuration_to_fit_your_existing_infrastructure(
        inputs
      );
    if (locale === "de")
      return de.whether_you_use_github_gitlab_or_another_version_control_system_we_adapt_our_configuration_to_fit_your_existing_infrastructure(
        inputs
      );
    return "whether_you_use_github_gitlab_or_another_version_control_system_we_adapt_our_configuration_to_fit_your_existing_infrastructure";
  };

export { whether_you_use_github_gitlab_or_another_version_control_system_we_adapt_our_configuration_to_fit_your_existing_infrastructure };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const expert_guidance = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.expert_guidance(inputs);
  if (locale === "de") return de.expert_guidance(inputs);
  return "expert_guidance";
};

export { expert_guidance };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const benefit_from_our_deep_expertise_in_mobile_app_ci_cd_best_practices_without_the_need_to_build_and_maintain_a_complex_system_yourself =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.benefit_from_our_deep_expertise_in_mobile_app_ci_cd_best_practices_without_the_need_to_build_and_maintain_a_complex_system_yourself(
        inputs
      );
    if (locale === "de")
      return de.benefit_from_our_deep_expertise_in_mobile_app_ci_cd_best_practices_without_the_need_to_build_and_maintain_a_complex_system_yourself(
        inputs
      );
    return "benefit_from_our_deep_expertise_in_mobile_app_ci_cd_best_practices_without_the_need_to_build_and_maintain_a_complex_system_yourself";
  };

export { benefit_from_our_deep_expertise_in_mobile_app_ci_cd_best_practices_without_the_need_to_build_and_maintain_a_complex_system_yourself };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const we_already_setup_ci_cd_for_50_apps = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.we_already_setup_ci_cd_for_50_apps(inputs);
  if (locale === "de") return de.we_already_setup_ci_cd_for_50_apps(inputs);
  return "we_already_setup_ci_cd_for_50_apps";
};

export { we_already_setup_ci_cd_for_50_apps };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const running_your_ci_cd_costs_300 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.running_your_ci_cd_costs_300(inputs);
  if (locale === "de") return de.running_your_ci_cd_costs_300(inputs);
  return "running_your_ci_cd_costs_300";
};

export { running_your_ci_cd_costs_300 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const appflow_6000_annually = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.appflow_6000_annually(inputs);
  if (locale === "de") return de.appflow_6000_annually(inputs);
  return "appflow_6000_annually";
};

export { appflow_6000_annually };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const our_one_time_setup_fee_of_2600_combined_with_ci_cd_results_in_less_than_half_the_first_year_fee_of_appflow =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.our_one_time_setup_fee_of_2600_combined_with_ci_cd_results_in_less_than_half_the_first_year_fee_of_appflow(
        inputs
      );
    if (locale === "de")
      return de.our_one_time_setup_fee_of_2600_combined_with_ci_cd_results_in_less_than_half_the_first_year_fee_of_appflow(
        inputs
      );
    return "our_one_time_setup_fee_of_2600_combined_with_ci_cd_results_in_less_than_half_the_first_year_fee_of_appflow";
  };

export { our_one_time_setup_fee_of_2600_combined_with_ci_cd_results_in_less_than_half_the_first_year_fee_of_appflow };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const in_5_years_you_save_26100 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.in_5_years_you_save_26100(inputs);
  if (locale === "de") return de.in_5_years_you_save_26100(inputs);
  return "in_5_years_you_save_26100";
};

export { in_5_years_you_save_26100 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const setup_ci_cd_now = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.setup_ci_cd_now(inputs);
  if (locale === "de") return de.setup_ci_cd_now(inputs);
  return "setup_ci_cd_now";
};

export { setup_ci_cd_now };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const push_updates_like_your_commits = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.push_updates_like_your_commits(inputs);
  if (locale === "de") return de.push_updates_like_your_commits(inputs);
  return "push_updates_like_your_commits";
};

export { push_updates_like_your_commits };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const its_compatible_with_azure_devops_gitlab_github_jenkins_cloudbees_travis_azure_devops_gitlab_github_circleci_and_many_more =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.its_compatible_with_azure_devops_gitlab_github_jenkins_cloudbees_travis_azure_devops_gitlab_github_circleci_and_many_more(
        inputs
      );
    if (locale === "de")
      return de.its_compatible_with_azure_devops_gitlab_github_jenkins_cloudbees_travis_azure_devops_gitlab_github_circleci_and_many_more(
        inputs
      );
    return "its_compatible_with_azure_devops_gitlab_github_jenkins_cloudbees_travis_azure_devops_gitlab_github_circleci_and_many_more";
  };

export { its_compatible_with_azure_devops_gitlab_github_jenkins_cloudbees_travis_azure_devops_gitlab_github_circleci_and_many_more };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const launch_multiple_releases_per_week = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.launch_multiple_releases_per_week(inputs);
  if (locale === "de") return de.launch_multiple_releases_per_week(inputs);
  return "launch_multiple_releases_per_week";
};

export { launch_multiple_releases_per_week };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const easily_combine_features_ci_cd = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.easily_combine_features_ci_cd(inputs);
  if (locale === "de") return de.easily_combine_features_ci_cd(inputs);
  return "easily_combine_features_ci_cd";
};

export { easily_combine_features_ci_cd };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const about_capgo = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.about_capgo(inputs);
  if (locale === "de") return de.about_capgo(inputs);
  return "about_capgo";
};

export { about_capgo };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const your_live_update_solution_for_capacitor_apps = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.your_live_update_solution_for_capacitor_apps(inputs);
  if (locale === "de")
    return de.your_live_update_solution_for_capacitor_apps(inputs);
  return "your_live_update_solution_for_capacitor_apps";
};

export { your_live_update_solution_for_capacitor_apps };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const welcome_to_capgo = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.welcome_to_capgo(inputs);
  if (locale === "de") return de.welcome_to_capgo(inputs);
  return "welcome_to_capgo";
};

export { welcome_to_capgo };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const capgo_is_the_cutting_edge_live_update_system_designed_specifically_for_capacitor_applications =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.capgo_is_the_cutting_edge_live_update_system_designed_specifically_for_capacitor_applications(
        inputs
      );
    if (locale === "de")
      return de.capgo_is_the_cutting_edge_live_update_system_designed_specifically_for_capacitor_applications(
        inputs
      );
    return "capgo_is_the_cutting_edge_live_update_system_designed_specifically_for_capacitor_applications";
  };

export { capgo_is_the_cutting_edge_live_update_system_designed_specifically_for_capacitor_applications };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const we_empower_developers_to_push_updates_instantly_ensuring_your_users_always_have_the_latest_version_of_your_app_without_the_hassle_of_app_store_approvals =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.we_empower_developers_to_push_updates_instantly_ensuring_your_users_always_have_the_latest_version_of_your_app_without_the_hassle_of_app_store_approvals(
        inputs
      );
    if (locale === "de")
      return de.we_empower_developers_to_push_updates_instantly_ensuring_your_users_always_have_the_latest_version_of_your_app_without_the_hassle_of_app_store_approvals(
        inputs
      );
    return "we_empower_developers_to_push_updates_instantly_ensuring_your_users_always_have_the_latest_version_of_your_app_without_the_hassle_of_app_store_approvals";
  };

export { we_empower_developers_to_push_updates_instantly_ensuring_your_users_always_have_the_latest_version_of_your_app_without_the_hassle_of_app_store_approvals };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const our_story = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.our_story(inputs);
  if (locale === "de") return de.our_story(inputs);
  return "our_story";
};

export { our_story };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const capgo_was_born_from_a_real_need_in_the_developer_community = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.capgo_was_born_from_a_real_need_in_the_developer_community(
      inputs
    );
  if (locale === "de")
    return de.capgo_was_born_from_a_real_need_in_the_developer_community(
      inputs
    );
  return "capgo_was_born_from_a_real_need_in_the_developer_community";
};

export { capgo_was_born_from_a_real_need_in_the_developer_community };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const it_all_started_with_a_github_issue_where_many_developers_voiced_their_frustration_with_the_high_costs_of_existing_solutions_like_appflow =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.it_all_started_with_a_github_issue_where_many_developers_voiced_their_frustration_with_the_high_costs_of_existing_solutions_like_appflow(
        inputs
      );
    if (locale === "de")
      return de.it_all_started_with_a_github_issue_where_many_developers_voiced_their_frustration_with_the_high_costs_of_existing_solutions_like_appflow(
        inputs
      );
    return "it_all_started_with_a_github_issue_where_many_developers_voiced_their_frustration_with_the_high_costs_of_existing_solutions_like_appflow";
  };

export { it_all_started_with_a_github_issue_where_many_developers_voiced_their_frustration_with_the_high_costs_of_existing_solutions_like_appflow };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const this_inspired_me_to_create_an_affordable_efficient_alternative = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.this_inspired_me_to_create_an_affordable_efficient_alternative(
      inputs
    );
  if (locale === "de")
    return de.this_inspired_me_to_create_an_affordable_efficient_alternative(
      inputs
    );
  return "this_inspired_me_to_create_an_affordable_efficient_alternative";
};

export { this_inspired_me_to_create_an_affordable_efficient_alternative };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const read_the_full_story_of_capgos_challenging_birth_as_a_solo_maker_project =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.read_the_full_story_of_capgos_challenging_birth_as_a_solo_maker_project(
        inputs
      );
    if (locale === "de")
      return de.read_the_full_story_of_capgos_challenging_birth_as_a_solo_maker_project(
        inputs
      );
    return "read_the_full_story_of_capgos_challenging_birth_as_a_solo_maker_project";
  };

export { read_the_full_story_of_capgos_challenging_birth_as_a_solo_maker_project };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const key_features = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.key_features(inputs);
  if (locale === "de") return de.key_features(inputs);
  return "key_features";
};

export { key_features };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const deploy_changes_in_real_time = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.deploy_changes_in_real_time(inputs);
  if (locale === "de") return de.deploy_changes_in_real_time(inputs);
  return "deploy_changes_in_real_time";
};

export { deploy_changes_in_real_time };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const version_control = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.version_control(inputs);
  if (locale === "de") return de.version_control(inputs);
  return "version_control";
};

export { version_control };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const manage_multiple_app_versions_effortlessly = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.manage_multiple_app_versions_effortlessly(inputs);
  if (locale === "de")
    return de.manage_multiple_app_versions_effortlessly(inputs);
  return "manage_multiple_app_versions_effortlessly";
};

export { manage_multiple_app_versions_effortlessly };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const rollback_capability = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.rollback_capability(inputs);
  if (locale === "de") return de.rollback_capability(inputs);
  return "rollback_capability";
};

export { rollback_capability };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const revert_to_previous_versions_if_needed = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.revert_to_previous_versions_if_needed(inputs);
  if (locale === "de") return de.revert_to_previous_versions_if_needed(inputs);
  return "revert_to_previous_versions_if_needed";
};

export { revert_to_previous_versions_if_needed };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const analytics = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.analytics(inputs);
  if (locale === "de") return de.analytics(inputs);
  return "analytics";
};

export { analytics };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const track_update_performance_and_user_adoption = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.track_update_performance_and_user_adoption(inputs);
  if (locale === "de")
    return de.track_update_performance_and_user_adoption(inputs);
  return "track_update_performance_and_user_adoption";
};

export { track_update_performance_and_user_adoption };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const organization_and_app_management = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.organization_and_app_management(inputs);
  if (locale === "de") return de.organization_and_app_management(inputs);
  return "organization_and_app_management";
};

export { organization_and_app_management };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const thanks_to_our_open_source_nature = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.thanks_to_our_open_source_nature(inputs);
  if (locale === "de") return de.thanks_to_our_open_source_nature(inputs);
  return "thanks_to_our_open_source_nature";
};

export { thanks_to_our_open_source_nature };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const our_commitment = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.our_commitment(inputs);
  if (locale === "de") return de.our_commitment(inputs);
  return "our_commitment";
};

export { our_commitment };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const as_the_largest_ecosystem_of_open_source_plugins_for_capacitor_we_re_committed_to_innovation_transparency_and_community_driven_development =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.as_the_largest_ecosystem_of_open_source_plugins_for_capacitor_we_re_committed_to_innovation_transparency_and_community_driven_development(
        inputs
      );
    if (locale === "de")
      return de.as_the_largest_ecosystem_of_open_source_plugins_for_capacitor_we_re_committed_to_innovation_transparency_and_community_driven_development(
        inputs
      );
    return "as_the_largest_ecosystem_of_open_source_plugins_for_capacitor_we_re_committed_to_innovation_transparency_and_community_driven_development";
  };

export { as_the_largest_ecosystem_of_open_source_plugins_for_capacitor_we_re_committed_to_innovation_transparency_and_community_driven_development };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const practicing_what_we_preach = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.practicing_what_we_preach(inputs);
  if (locale === "de") return de.practicing_what_we_preach(inputs);
  return "practicing_what_we_preach";
};

export { practicing_what_we_preach };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const we_practice_what_we_preach = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.we_practice_what_we_preach(inputs);
  if (locale === "de") return de.we_practice_what_we_preach(inputs);
  return "we_practice_what_we_preach";
};

export { we_practice_what_we_preach };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const capgo_is_used_to_update_its_own_apps_allowing_us_to_continuously_improve_and_refine_our_product_through_real_world_usage =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.capgo_is_used_to_update_its_own_apps_allowing_us_to_continuously_improve_and_refine_our_product_through_real_world_usage(
        inputs
      );
    if (locale === "de")
      return de.capgo_is_used_to_update_its_own_apps_allowing_us_to_continuously_improve_and_refine_our_product_through_real_world_usage(
        inputs
      );
    return "capgo_is_used_to_update_its_own_apps_allowing_us_to_continuously_improve_and_refine_our_product_through_real_world_usage";
  };

export { capgo_is_used_to_update_its_own_apps_allowing_us_to_continuously_improve_and_refine_our_product_through_real_world_usage };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const our_dedication = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.our_dedication(inputs);
  if (locale === "de") return de.our_dedication(inputs);
  return "our_dedication";
};

export { our_dedication };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const since_2023_capgo_has_been_my_full_time_focus_ensuring_dedicated_development_and_support_for_our_growing_community_of_users =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.since_2023_capgo_has_been_my_full_time_focus_ensuring_dedicated_development_and_support_for_our_growing_community_of_users(
        inputs
      );
    if (locale === "de")
      return de.since_2023_capgo_has_been_my_full_time_focus_ensuring_dedicated_development_and_support_for_our_growing_community_of_users(
        inputs
      );
    return "since_2023_capgo_has_been_my_full_time_focus_ensuring_dedicated_development_and_support_for_our_growing_community_of_users";
  };

export { since_2023_capgo_has_been_my_full_time_focus_ensuring_dedicated_development_and_support_for_our_growing_community_of_users };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const hi_there_im_martin_donadieu = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.hi_there_im_martin_donadieu(inputs);
  if (locale === "de") return de.hi_there_im_martin_donadieu(inputs);
  return "hi_there_im_martin_donadieu";
};

export { hi_there_im_martin_donadieu };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const run_your_projects_on_your_own_device_faster_than_ever_and_share_those_projects_across_your_whole_team =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.run_your_projects_on_your_own_device_faster_than_ever_and_share_those_projects_across_your_whole_team(
        inputs
      );
    if (locale === "de")
      return de.run_your_projects_on_your_own_device_faster_than_ever_and_share_those_projects_across_your_whole_team(
        inputs
      );
    return "run_your_projects_on_your_own_device_faster_than_ever_and_share_those_projects_across_your_whole_team";
  };

export { run_your_projects_on_your_own_device_faster_than_ever_and_share_those_projects_across_your_whole_team };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const test_version_in_the_sandbox_app_manage_version_and_channel = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.test_version_in_the_sandbox_app_manage_version_and_channel(
      inputs
    );
  if (locale === "de")
    return de.test_version_in_the_sandbox_app_manage_version_and_channel(
      inputs
    );
  return "test_version_in_the_sandbox_app_manage_version_and_channel";
};

export { test_version_in_the_sandbox_app_manage_version_and_channel };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const speed = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.speed(inputs);
  if (locale === "de") return de.speed(inputs);
  return "speed";
};

export { speed };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const simplicity = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.simplicity(inputs);
  if (locale === "de") return de.simplicity(inputs);
  return "simplicity";
};

export { simplicity };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const start_building_rich_experiences_with_your_device_and_your_computer = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.start_building_rich_experiences_with_your_device_and_your_computer(
      inputs
    );
  if (locale === "de")
    return de.start_building_rich_experiences_with_your_device_and_your_computer(
      inputs
    );
  return "start_building_rich_experiences_with_your_device_and_your_computer";
};

export { start_building_rich_experiences_with_your_device_and_your_computer };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const confirm_email = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.confirm_email(inputs);
  if (locale === "de") return de.confirm_email(inputs);
  return "confirm_email";
};

export { confirm_email };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const please_open_your_mailbox_to_verify = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.please_open_your_mailbox_to_verify(inputs);
  if (locale === "de") return de.please_open_your_mailbox_to_verify(inputs);
  return "please_open_your_mailbox_to_verify";
};

export { please_open_your_mailbox_to_verify };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const didnt_receive_confirmation_email = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.didnt_receive_confirmation_email(inputs);
  if (locale === "de") return de.didnt_receive_confirmation_email(inputs);
  return "didnt_receive_confirmation_email";
};

export { didnt_receive_confirmation_email };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const resend = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.resend(inputs);
  if (locale === "de") return de.resend(inputs);
  return "resend";
};

export { resend };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const resending = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.resending(inputs);
  if (locale === "de") return de.resending(inputs);
  return "resending";
};

export { resending };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const open_mailbox = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.open_mailbox(inputs);
  if (locale === "de") return de.open_mailbox(inputs);
  return "open_mailbox";
};

export { open_mailbox };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const thank_you_for_choosing_capgo = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.thank_you_for_choosing_capgo(inputs);
  if (locale === "de") return de.thank_you_for_choosing_capgo(inputs);
  return "thank_you_for_choosing_capgo";
};

export { thank_you_for_choosing_capgo };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const code_review = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.code_review(inputs);
  if (locale === "de") return de.code_review(inputs);
  return "code_review";
};

export { code_review };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const code_review_and_consulting = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.code_review_and_consulting(inputs);
  if (locale === "de") return de.code_review_and_consulting(inputs);
  return "code_review_and_consulting";
};

export { code_review_and_consulting };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const consult_your_capacitor_apps_and_review_the_code_with_us_to_deliver_bug_free_apps =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.consult_your_capacitor_apps_and_review_the_code_with_us_to_deliver_bug_free_apps(
        inputs
      );
    if (locale === "de")
      return de.consult_your_capacitor_apps_and_review_the_code_with_us_to_deliver_bug_free_apps(
        inputs
      );
    return "consult_your_capacitor_apps_and_review_the_code_with_us_to_deliver_bug_free_apps";
  };

export { consult_your_capacitor_apps_and_review_the_code_with_us_to_deliver_bug_free_apps };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const book_a_consultation = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.book_a_consultation(inputs);
  if (locale === "de") return de.book_a_consultation(inputs);
  return "book_a_consultation";
};

export { book_a_consultation };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const testimonial_consulting = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.testimonial_consulting(inputs);
  if (locale === "de") return de.testimonial_consulting(inputs);
  return "testimonial_consulting";
};

export { testimonial_consulting };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const testimonial_consulting_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.testimonial_consulting_2(inputs);
  if (locale === "de") return de.testimonial_consulting_2(inputs);
  return "testimonial_consulting_2";
};

export { testimonial_consulting_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const when_its_good_to_ask_for_cordova_and_capacitorjs_consulting_services = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.when_its_good_to_ask_for_cordova_and_capacitorjs_consulting_services(
      inputs
    );
  if (locale === "de")
    return de.when_its_good_to_ask_for_cordova_and_capacitorjs_consulting_services(
      inputs
    );
  return "when_its_good_to_ask_for_cordova_and_capacitorjs_consulting_services";
};

export { when_its_good_to_ask_for_cordova_and_capacitorjs_consulting_services };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const review_before_passing_the_code_to_the_production = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.review_before_passing_the_code_to_the_production(inputs);
  if (locale === "de")
    return de.review_before_passing_the_code_to_the_production(inputs);
  return "review_before_passing_the_code_to_the_production";
};

export { review_before_passing_the_code_to_the_production };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const find_and_fix_bugs_during_the_coding_process = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.find_and_fix_bugs_during_the_coding_process(inputs);
  if (locale === "de")
    return de.find_and_fix_bugs_during_the_coding_process(inputs);
  return "find_and_fix_bugs_during_the_coding_process";
};

export { find_and_fix_bugs_during_the_coding_process };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const it_s_faster_cheaper_and_requires_fewer_developers_to_do_it = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.it_s_faster_cheaper_and_requires_fewer_developers_to_do_it(
      inputs
    );
  if (locale === "de")
    return de.it_s_faster_cheaper_and_requires_fewer_developers_to_do_it(
      inputs
    );
  return "it_s_faster_cheaper_and_requires_fewer_developers_to_do_it";
};

export { it_s_faster_cheaper_and_requires_fewer_developers_to_do_it };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const optimization_of_the_existing_app = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.optimization_of_the_existing_app(inputs);
  if (locale === "de") return de.optimization_of_the_existing_app(inputs);
  return "optimization_of_the_existing_app";
};

export { optimization_of_the_existing_app };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const little_experience_with_capacitorjs = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.little_experience_with_capacitorjs(inputs);
  if (locale === "de") return de.little_experience_with_capacitorjs(inputs);
  return "little_experience_with_capacitorjs";
};

export { little_experience_with_capacitorjs };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const when_developing_a_capacitorjs_app_as_a_beginner_it_s_good_to_have_an_experienced_consultant_by_your_side =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.when_developing_a_capacitorjs_app_as_a_beginner_it_s_good_to_have_an_experienced_consultant_by_your_side(
        inputs
      );
    if (locale === "de")
      return de.when_developing_a_capacitorjs_app_as_a_beginner_it_s_good_to_have_an_experienced_consultant_by_your_side(
        inputs
      );
    return "when_developing_a_capacitorjs_app_as_a_beginner_it_s_good_to_have_an_experienced_consultant_by_your_side";
  };

export { when_developing_a_capacitorjs_app_as_a_beginner_it_s_good_to_have_an_experienced_consultant_by_your_side };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const let_them_review_your_work_and_give_your_team_an_opportunity_to_learn_from_the_experts =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.let_them_review_your_work_and_give_your_team_an_opportunity_to_learn_from_the_experts(
        inputs
      );
    if (locale === "de")
      return de.let_them_review_your_work_and_give_your_team_an_opportunity_to_learn_from_the_experts(
        inputs
      );
    return "let_them_review_your_work_and_give_your_team_an_opportunity_to_learn_from_the_experts";
  };

export { let_them_review_your_work_and_give_your_team_an_opportunity_to_learn_from_the_experts };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const poor_app_quality = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.poor_app_quality(inputs);
  if (locale === "de") return de.poor_app_quality(inputs);
  return "poor_app_quality";
};

export { poor_app_quality };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const somebody_developed_an_app_for_you_but_it_doesn_t_meet_your_expectations_and_the_quality_of_the_final_product_is_really_low =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.somebody_developed_an_app_for_you_but_it_doesn_t_meet_your_expectations_and_the_quality_of_the_final_product_is_really_low(
        inputs
      );
    if (locale === "de")
      return de.somebody_developed_an_app_for_you_but_it_doesn_t_meet_your_expectations_and_the_quality_of_the_final_product_is_really_low(
        inputs
      );
    return "somebody_developed_an_app_for_you_but_it_doesn_t_meet_your_expectations_and_the_quality_of_the_final_product_is_really_low";
  };

export { somebody_developed_an_app_for_you_but_it_doesn_t_meet_your_expectations_and_the_quality_of_the_final_product_is_really_low };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const something_doesn_t_work_but_you_don_t_know_why = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.something_doesn_t_work_but_you_don_t_know_why(inputs);
  if (locale === "de")
    return de.something_doesn_t_work_but_you_don_t_know_why(inputs);
  return "something_doesn_t_work_but_you_don_t_know_why";
};

export { something_doesn_t_work_but_you_don_t_know_why };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const a_specific_element_of_your_app_doesn_t_work_and_you_don_t_know_where_the_problem_is_and_how_to_fix_it =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.a_specific_element_of_your_app_doesn_t_work_and_you_don_t_know_where_the_problem_is_and_how_to_fix_it(
        inputs
      );
    if (locale === "de")
      return de.a_specific_element_of_your_app_doesn_t_work_and_you_don_t_know_where_the_problem_is_and_how_to_fix_it(
        inputs
      );
    return "a_specific_element_of_your_app_doesn_t_work_and_you_don_t_know_where_the_problem_is_and_how_to_fix_it";
  };

export { a_specific_element_of_your_app_doesn_t_work_and_you_don_t_know_where_the_problem_is_and_how_to_fix_it };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const plugin_is_missing = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.plugin_is_missing(inputs);
  if (locale === "de") return de.plugin_is_missing(inputs);
  return "plugin_is_missing";
};

export { plugin_is_missing };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const you_need_a_to_access_to_specific_native_api_and_the_right_plugin_don_t_exist_we_can_develop_it_for_you_or_support_you_with_it =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.you_need_a_to_access_to_specific_native_api_and_the_right_plugin_don_t_exist_we_can_develop_it_for_you_or_support_you_with_it(
        inputs
      );
    if (locale === "de")
      return de.you_need_a_to_access_to_specific_native_api_and_the_right_plugin_don_t_exist_we_can_develop_it_for_you_or_support_you_with_it(
        inputs
      );
    return "you_need_a_to_access_to_specific_native_api_and_the_right_plugin_don_t_exist_we_can_develop_it_for_you_or_support_you_with_it";
  };

export { you_need_a_to_access_to_specific_native_api_and_the_right_plugin_don_t_exist_we_can_develop_it_for_you_or_support_you_with_it };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const ci_cd_setup = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.ci_cd_setup(inputs);
  if (locale === "de") return de.ci_cd_setup(inputs);
  return "ci_cd_setup";
};

export { ci_cd_setup };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const our_team_helps_you_with_configuring_and_managing_automated_builds_tests_and_app_deployments_to_app_stores_through_fastlane_and_voltbuilder_in_your_cicd_environment =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.our_team_helps_you_with_configuring_and_managing_automated_builds_tests_and_app_deployments_to_app_stores_through_fastlane_and_voltbuilder_in_your_cicd_environment(
        inputs
      );
    if (locale === "de")
      return de.our_team_helps_you_with_configuring_and_managing_automated_builds_tests_and_app_deployments_to_app_stores_through_fastlane_and_voltbuilder_in_your_cicd_environment(
        inputs
      );
    return "our_team_helps_you_with_configuring_and_managing_automated_builds_tests_and_app_deployments_to_app_stores_through_fastlane_and_voltbuilder_in_your_cicd_environment";
  };

export { our_team_helps_you_with_configuring_and_managing_automated_builds_tests_and_app_deployments_to_app_stores_through_fastlane_and_voltbuilder_in_your_cicd_environment };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const why_is_it_important = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.why_is_it_important(inputs);
  if (locale === "de") return de.why_is_it_important(inputs);
  return "why_is_it_important";
};

export { why_is_it_important };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const code_consulting_and_review_is_more_than_just_a_bug_check_it_helps_to = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.code_consulting_and_review_is_more_than_just_a_bug_check_it_helps_to(
      inputs
    );
  if (locale === "de")
    return de.code_consulting_and_review_is_more_than_just_a_bug_check_it_helps_to(
      inputs
    );
  return "code_consulting_and_review_is_more_than_just_a_bug_check_it_helps_to";
};

export { code_consulting_and_review_is_more_than_just_a_bug_check_it_helps_to };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const minimize_mistakes_and_their_impact_on_the_project = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.minimize_mistakes_and_their_impact_on_the_project(inputs);
  if (locale === "de")
    return de.minimize_mistakes_and_their_impact_on_the_project(inputs);
  return "minimize_mistakes_and_their_impact_on_the_project";
};

export { minimize_mistakes_and_their_impact_on_the_project };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const ensure_that_the_project_requirements_are_fulfilled = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.ensure_that_the_project_requirements_are_fulfilled(inputs);
  if (locale === "de")
    return de.ensure_that_the_project_requirements_are_fulfilled(inputs);
  return "ensure_that_the_project_requirements_are_fulfilled";
};

export { ensure_that_the_project_requirements_are_fulfilled };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const improve_overall_code_quality = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.improve_overall_code_quality(inputs);
  if (locale === "de") return de.improve_overall_code_quality(inputs);
  return "improve_overall_code_quality";
};

export { improve_overall_code_quality };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const achieve_consistent_design_and_implementation = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.achieve_consistent_design_and_implementation(inputs);
  if (locale === "de")
    return de.achieve_consistent_design_and_implementation(inputs);
  return "achieve_consistent_design_and_implementation";
};

export { achieve_consistent_design_and_implementation };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const technological_benefits = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.technological_benefits(inputs);
  if (locale === "de") return de.technological_benefits(inputs);
  return "technological_benefits";
};

export { technological_benefits };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const better_code_quality = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.better_code_quality(inputs);
  if (locale === "de") return de.better_code_quality(inputs);
  return "better_code_quality";
};

export { better_code_quality };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const let_more_experienced_people_review_your_work_and_give_your_team_an_opportunity_to_learn_from_the_experts =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.let_more_experienced_people_review_your_work_and_give_your_team_an_opportunity_to_learn_from_the_experts(
        inputs
      );
    if (locale === "de")
      return de.let_more_experienced_people_review_your_work_and_give_your_team_an_opportunity_to_learn_from_the_experts(
        inputs
      );
    return "let_more_experienced_people_review_your_work_and_give_your_team_an_opportunity_to_learn_from_the_experts";
  };

export { let_more_experienced_people_review_your_work_and_give_your_team_an_opportunity_to_learn_from_the_experts };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const improved_code_readability = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.improved_code_readability(inputs);
  if (locale === "de") return de.improved_code_readability(inputs);
  return "improved_code_readability";
};

export { improved_code_readability };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const it_s_possible_that_different_developers_will_read_your_code_in_the_future_reduce_unnecessary_pieces_of_it_to_make_it_shorter_and_more_expressive =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.it_s_possible_that_different_developers_will_read_your_code_in_the_future_reduce_unnecessary_pieces_of_it_to_make_it_shorter_and_more_expressive(
        inputs
      );
    if (locale === "de")
      return de.it_s_possible_that_different_developers_will_read_your_code_in_the_future_reduce_unnecessary_pieces_of_it_to_make_it_shorter_and_more_expressive(
        inputs
      );
    return "it_s_possible_that_different_developers_will_read_your_code_in_the_future_reduce_unnecessary_pieces_of_it_to_make_it_shorter_and_more_expressive";
  };

export { it_s_possible_that_different_developers_will_read_your_code_in_the_future_reduce_unnecessary_pieces_of_it_to_make_it_shorter_and_more_expressive };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const bugs_reduction = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.bugs_reduction(inputs);
  if (locale === "de") return de.bugs_reduction(inputs);
  return "bugs_reduction";
};

export { bugs_reduction };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eliminate_the_number_of_bugs_before_passing_the_code_to_production = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.eliminate_the_number_of_bugs_before_passing_the_code_to_production(
      inputs
    );
  if (locale === "de")
    return de.eliminate_the_number_of_bugs_before_passing_the_code_to_production(
      inputs
    );
  return "eliminate_the_number_of_bugs_before_passing_the_code_to_production";
};

export { eliminate_the_number_of_bugs_before_passing_the_code_to_production };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const hire_capacitorjs_consultants = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.hire_capacitorjs_consultants(inputs);
  if (locale === "de") return de.hire_capacitorjs_consultants(inputs);
  return "hire_capacitorjs_consultants";
};

export { hire_capacitorjs_consultants };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const business_benefits = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.business_benefits(inputs);
  if (locale === "de") return de.business_benefits(inputs);
  return "business_benefits";
};

export { business_benefits };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const lower_cost_of_fixing_bugs = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.lower_cost_of_fixing_bugs(inputs);
  if (locale === "de") return de.lower_cost_of_fixing_bugs(inputs);
  return "lower_cost_of_fixing_bugs";
};

export { lower_cost_of_fixing_bugs };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const the_faster_you_find_the_bug_the_cheaper_you_can_fix_it_if_the_bug_is_spotted_during_the_development_process_it_s_easier_and_cheaper_to_remove_it =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.the_faster_you_find_the_bug_the_cheaper_you_can_fix_it_if_the_bug_is_spotted_during_the_development_process_it_s_easier_and_cheaper_to_remove_it(
        inputs
      );
    if (locale === "de")
      return de.the_faster_you_find_the_bug_the_cheaper_you_can_fix_it_if_the_bug_is_spotted_during_the_development_process_it_s_easier_and_cheaper_to_remove_it(
        inputs
      );
    return "the_faster_you_find_the_bug_the_cheaper_you_can_fix_it_if_the_bug_is_spotted_during_the_development_process_it_s_easier_and_cheaper_to_remove_it";
  };

export { the_faster_you_find_the_bug_the_cheaper_you_can_fix_it_if_the_bug_is_spotted_during_the_development_process_it_s_easier_and_cheaper_to_remove_it };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const opportunity_for_juniors_to_develop_skills = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.opportunity_for_juniors_to_develop_skills(inputs);
  if (locale === "de")
    return de.opportunity_for_juniors_to_develop_skills(inputs);
  return "opportunity_for_juniors_to_develop_skills";
};

export { opportunity_for_juniors_to_develop_skills };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const help_your_junior_developers_extend_their_knowledge_by_giving_them_the_opportunity_to_cooperate_with_more_experienced_developers =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.help_your_junior_developers_extend_their_knowledge_by_giving_them_the_opportunity_to_cooperate_with_more_experienced_developers(
        inputs
      );
    if (locale === "de")
      return de.help_your_junior_developers_extend_their_knowledge_by_giving_them_the_opportunity_to_cooperate_with_more_experienced_developers(
        inputs
      );
    return "help_your_junior_developers_extend_their_knowledge_by_giving_them_the_opportunity_to_cooperate_with_more_experienced_developers";
  };

export { help_your_junior_developers_extend_their_knowledge_by_giving_them_the_opportunity_to_cooperate_with_more_experienced_developers };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const community_trusted = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.community_trusted(inputs);
  if (locale === "de") return de.community_trusted(inputs);
  return "community_trusted";
};

export { community_trusted };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const cordova_and_capacitorjs_expert = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.cordova_and_capacitorjs_expert(inputs);
  if (locale === "de") return de.cordova_and_capacitorjs_expert(inputs);
  return "cordova_and_capacitorjs_expert";
};

export { cordova_and_capacitorjs_expert };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const experienced_in_working_on_demanding = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.experienced_in_working_on_demanding(inputs);
  if (locale === "de") return de.experienced_in_working_on_demanding(inputs);
  return "experienced_in_working_on_demanding";
};

export { experienced_in_working_on_demanding };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const cordova_capacitorjs_projects = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.cordova_capacitorjs_projects(inputs);
  if (locale === "de") return de.cordova_capacitorjs_projects(inputs);
  return "cordova_capacitorjs_projects";
};

export { cordova_capacitorjs_projects };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const creators_and_maintainers_of_many_open_source_libraries_used_by_millions =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.creators_and_maintainers_of_many_open_source_libraries_used_by_millions(
        inputs
      );
    if (locale === "de")
      return de.creators_and_maintainers_of_many_open_source_libraries_used_by_millions(
        inputs
      );
    return "creators_and_maintainers_of_many_open_source_libraries_used_by_millions";
  };

export { creators_and_maintainers_of_many_open_source_libraries_used_by_millions };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const core_contributors_to_capacitorjs_and_ionic = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.core_contributors_to_capacitorjs_and_ionic(inputs);
  if (locale === "de")
    return de.core_contributors_to_capacitorjs_and_ionic(inputs);
  return "core_contributors_to_capacitorjs_and_ionic";
};

export { core_contributors_to_capacitorjs_and_ionic };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const need_help_with_cordova_or_capacitorjs_let_us_know = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.need_help_with_cordova_or_capacitorjs_let_us_know(inputs);
  if (locale === "de")
    return de.need_help_with_cordova_or_capacitorjs_let_us_know(inputs);
  return "need_help_with_cordova_or_capacitorjs_let_us_know";
};

export { need_help_with_cordova_or_capacitorjs_let_us_know };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const im_a_french_software_engineer = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.im_a_french_software_engineer(inputs);
  if (locale === "de") return de.im_a_french_software_engineer(inputs);
  return "im_a_french_software_engineer";
};

export { im_a_french_software_engineer };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const living_best_life = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.living_best_life(inputs);
  if (locale === "de") return de.living_best_life(inputs);
  return "living_best_life";
};

export { living_best_life };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const made_capgo_with_passion = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.made_capgo_with_passion(inputs);
  if (locale === "de") return de.made_capgo_with_passion(inputs);
  return "made_capgo_with_passion";
};

export { made_capgo_with_passion };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const i_m_a_huge_believer_in_open_source = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.i_m_a_huge_believer_in_open_source(inputs);
  if (locale === "de") return de.i_m_a_huge_believer_in_open_source(inputs);
  return "i_m_a_huge_believer_in_open_source";
};

export { i_m_a_huge_believer_in_open_source };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const capgo_proudly_stands_as_the_largest_ecosystem_of_open_source_plugins_for_capacitor =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.capgo_proudly_stands_as_the_largest_ecosystem_of_open_source_plugins_for_capacitor(
        inputs
      );
    if (locale === "de")
      return de.capgo_proudly_stands_as_the_largest_ecosystem_of_open_source_plugins_for_capacitor(
        inputs
      );
    return "capgo_proudly_stands_as_the_largest_ecosystem_of_open_source_plugins_for_capacitor";
  };

export { capgo_proudly_stands_as_the_largest_ecosystem_of_open_source_plugins_for_capacitor };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const we_re_committed_to_fostering_a_community_where_developers_can_learn_contribute_and_grow_together =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.we_re_committed_to_fostering_a_community_where_developers_can_learn_contribute_and_grow_together(
        inputs
      );
    if (locale === "de")
      return de.we_re_committed_to_fostering_a_community_where_developers_can_learn_contribute_and_grow_together(
        inputs
      );
    return "we_re_committed_to_fostering_a_community_where_developers_can_learn_contribute_and_grow_together";
  };

export { we_re_committed_to_fostering_a_community_where_developers_can_learn_contribute_and_grow_together };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const each_time_you_contact_capgo_you_re_reaching_out_to_me_directly = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.each_time_you_contact_capgo_you_re_reaching_out_to_me_directly(
      inputs
    );
  if (locale === "de")
    return de.each_time_you_contact_capgo_you_re_reaching_out_to_me_directly(
      inputs
    );
  return "each_time_you_contact_capgo_you_re_reaching_out_to_me_directly";
};

export { each_time_you_contact_capgo_you_re_reaching_out_to_me_directly };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const i_personally_handle_all_support_through_email_chat_or_discord_because_i_believe_in_real_connections =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.i_personally_handle_all_support_through_email_chat_or_discord_because_i_believe_in_real_connections(
        inputs
      );
    if (locale === "de")
      return de.i_personally_handle_all_support_through_email_chat_or_discord_because_i_believe_in_real_connections(
        inputs
      );
    return "i_personally_handle_all_support_through_email_chat_or_discord_because_i_believe_in_real_connections";
  };

export { i_personally_handle_all_support_through_email_chat_or_discord_because_i_believe_in_real_connections };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const your_challenges_are_my_challenges = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.your_challenges_are_my_challenges(inputs);
  if (locale === "de") return de.your_challenges_are_my_challenges(inputs);
  return "your_challenges_are_my_challenges";
};

export { your_challenges_are_my_challenges };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const my_commitment_to_transparency_extends_to_everything_i_do = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.my_commitment_to_transparency_extends_to_everything_i_do(inputs);
  if (locale === "de")
    return de.my_commitment_to_transparency_extends_to_everything_i_do(inputs);
  return "my_commitment_to_transparency_extends_to_everything_i_do";
};

export { my_commitment_to_transparency_extends_to_everything_i_do };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const when_im_not_working_on_capgo_you_ll_find_me_scaling_climbing_walls_dancing_to_zouk_rhythms_or_exploring_madeiras_stunning_nature =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.when_im_not_working_on_capgo_you_ll_find_me_scaling_climbing_walls_dancing_to_zouk_rhythms_or_exploring_madeiras_stunning_nature(
        inputs
      );
    if (locale === "de")
      return de.when_im_not_working_on_capgo_you_ll_find_me_scaling_climbing_walls_dancing_to_zouk_rhythms_or_exploring_madeiras_stunning_nature(
        inputs
      );
    return "when_im_not_working_on_capgo_you_ll_find_me_scaling_climbing_walls_dancing_to_zouk_rhythms_or_exploring_madeiras_stunning_nature";
  };

export { when_im_not_working_on_capgo_you_ll_find_me_scaling_climbing_walls_dancing_to_zouk_rhythms_or_exploring_madeiras_stunning_nature };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const lets_make_app_development_amazing_together = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.lets_make_app_development_amazing_together(inputs);
  if (locale === "de")
    return de.lets_make_app_development_amazing_together(inputs);
  return "lets_make_app_development_amazing_together";
};

export { lets_make_app_development_amazing_together };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const martin_donadieu_on_a_motorcycle_with_a_rainbow_in_the_background = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.martin_donadieu_on_a_motorcycle_with_a_rainbow_in_the_background(
      inputs
    );
  if (locale === "de")
    return de.martin_donadieu_on_a_motorcycle_with_a_rainbow_in_the_background(
      inputs
    );
  return "martin_donadieu_on_a_motorcycle_with_a_rainbow_in_the_background";
};

export { martin_donadieu_on_a_motorcycle_with_a_rainbow_in_the_background };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const get_quote_now = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.get_quote_now(inputs);
  if (locale === "de") return de.get_quote_now(inputs);
  return "get_quote_now";
};

export { get_quote_now };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const you_can_see_my_entire_process_unfold_on_twitter = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.you_can_see_my_entire_process_unfold_on_twitter(inputs);
  if (locale === "de")
    return de.you_can_see_my_entire_process_unfold_on_twitter(inputs);
  return "you_can_see_my_entire_process_unfold_on_twitter";
};

export { you_can_see_my_entire_process_unfold_on_twitter };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const and_hear_more_about_my_journey_on_the = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.and_hear_more_about_my_journey_on_the(inputs);
  if (locale === "de") return de.and_hear_more_about_my_journey_on_the(inputs);
  return "and_hear_more_about_my_journey_on_the";
};

export { and_hear_more_about_my_journey_on_the };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const read_more = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.read_more(inputs);
  if (locale === "de") return de.read_more(inputs);
  return "read_more";
};

export { read_more };
/**
 * This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
 *
 * - Changing this function will be over-written by the next build.
 *
 * - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
 * use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
 *
 * @param {{  }} inputs
 * @param {{ locale?: "en" | "de" }} options
 * @returns {string}
 */

/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const services = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.services(inputs);
  if (locale === "de") return de.services(inputs);
  return "services";
};

export { services };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const case_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.case_1(inputs);
  if (locale === "de") return de.case_1(inputs);
  return "case_1";
};

export { case_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const case_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.case_2(inputs);
  if (locale === "de") return de.case_2(inputs);
  return "case_2";
};

export { case_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const case_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.case_3(inputs);
  if (locale === "de") return de.case_3(inputs);
  return "case_3";
};

export { case_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const case_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.case_4(inputs);
  if (locale === "de") return de.case_4(inputs);
  return "case_4";
};

export { case_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const case_5 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.case_5(inputs);
  if (locale === "de") return de.case_5(inputs);
  return "case_5";
};

export { case_5 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const case_6 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.case_6(inputs);
  if (locale === "de") return de.case_6(inputs);
  return "case_6";
};

export { case_6 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const case_7 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.case_7(inputs);
  if (locale === "de") return de.case_7(inputs);
  return "case_7";
};

export { case_7 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const email_is_required = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.email_is_required(inputs);
  if (locale === "de") return de.email_is_required(inputs);
  return "email_is_required";
};

export { email_is_required };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const when_down_review = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.when_down_review(inputs);
  if (locale === "de") return de.when_down_review(inputs);
  return "when_down_review";
};

export { when_down_review };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const why_work = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.why_work(inputs);
  if (locale === "de") return de.why_work(inputs);
  return "why_work";
};

export { why_work };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const with_us = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.with_us(inputs);
  if (locale === "de") return de.with_us(inputs);
  return "with_us";
};

export { with_us };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const consulting_forged_plugins_community_embraced = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.consulting_forged_plugins_community_embraced(inputs);
  if (locale === "de")
    return de.consulting_forged_plugins_community_embraced(inputs);
  return "consulting_forged_plugins_community_embraced";
};

export { consulting_forged_plugins_community_embraced };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const consulting_forged_plugins_community_embraced_description = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.consulting_forged_plugins_community_embraced_description(inputs);
  if (locale === "de")
    return de.consulting_forged_plugins_community_embraced_description(inputs);
  return "consulting_forged_plugins_community_embraced_description";
};

export { consulting_forged_plugins_community_embraced_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const each_solution_represents_a_consulting_success_story_battle_tested_and_refined_for_the_community =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.each_solution_represents_a_consulting_success_story_battle_tested_and_refined_for_the_community(
        inputs
      );
    if (locale === "de")
      return de.each_solution_represents_a_consulting_success_story_battle_tested_and_refined_for_the_community(
        inputs
      );
    return "each_solution_represents_a_consulting_success_story_battle_tested_and_refined_for_the_community";
  };

export { each_solution_represents_a_consulting_success_story_battle_tested_and_refined_for_the_community };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const get_your_custom_plugin_built = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.get_your_custom_plugin_built(inputs);
  if (locale === "de") return de.get_your_custom_plugin_built(inputs);
  return "get_your_custom_plugin_built";
};

export { get_your_custom_plugin_built };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const contact = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.contact(inputs);
  if (locale === "de") return de.contact(inputs);
  return "contact";
};

export { contact };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const lets_work_together = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.lets_work_together(inputs);
  if (locale === "de") return de.lets_work_together(inputs);
  return "lets_work_together";
};

export { lets_work_together };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const we_welcome_and_appreciate_all_contributions_to_capgo = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.we_welcome_and_appreciate_all_contributions_to_capgo(inputs);
  if (locale === "de")
    return de.we_welcome_and_appreciate_all_contributions_to_capgo(inputs);
  return "we_welcome_and_appreciate_all_contributions_to_capgo";
};

export { we_welcome_and_appreciate_all_contributions_to_capgo };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const this_page_serves_as_a_helper_to_get_you_started_on_contributing = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.this_page_serves_as_a_helper_to_get_you_started_on_contributing(
      inputs
    );
  if (locale === "de")
    return de.this_page_serves_as_a_helper_to_get_you_started_on_contributing(
      inputs
    );
  return "this_page_serves_as_a_helper_to_get_you_started_on_contributing";
};

export { this_page_serves_as_a_helper_to_get_you_started_on_contributing };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const projects = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.projects(inputs);
  if (locale === "de") return de.projects(inputs);
  return "projects";
};

export { projects };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const there_are_numerous_repositories_in_the_capgo_organization_that_are_part_of_the_capgo =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.there_are_numerous_repositories_in_the_capgo_organization_that_are_part_of_the_capgo(
        inputs
      );
    if (locale === "de")
      return de.there_are_numerous_repositories_in_the_capgo_organization_that_are_part_of_the_capgo(
        inputs
      );
    return "there_are_numerous_repositories_in_the_capgo_organization_that_are_part_of_the_capgo";
  };

export { there_are_numerous_repositories_in_the_capgo_organization_that_are_part_of_the_capgo };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const repositories_have_different_scopes_use_different_programming_languages_and_have_varying_level_when_it_comes_to_contributions =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.repositories_have_different_scopes_use_different_programming_languages_and_have_varying_level_when_it_comes_to_contributions(
        inputs
      );
    if (locale === "de")
      return de.repositories_have_different_scopes_use_different_programming_languages_and_have_varying_level_when_it_comes_to_contributions(
        inputs
      );
    return "repositories_have_different_scopes_use_different_programming_languages_and_have_varying_level_when_it_comes_to_contributions";
  };

export { repositories_have_different_scopes_use_different_programming_languages_and_have_varying_level_when_it_comes_to_contributions };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const to_help_you_decide_which_repository_might_be_the_best_to_start_contributing_and_or_falls_into_your_interest_here_s_a_short_comparison_languages_in_bold_comprise_most_of_the_codebase =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.to_help_you_decide_which_repository_might_be_the_best_to_start_contributing_and_or_falls_into_your_interest_here_s_a_short_comparison_languages_in_bold_comprise_most_of_the_codebase(
        inputs
      );
    if (locale === "de")
      return de.to_help_you_decide_which_repository_might_be_the_best_to_start_contributing_and_or_falls_into_your_interest_here_s_a_short_comparison_languages_in_bold_comprise_most_of_the_codebase(
        inputs
      );
    return "to_help_you_decide_which_repository_might_be_the_best_to_start_contributing_and_or_falls_into_your_interest_here_s_a_short_comparison_languages_in_bold_comprise_most_of_the_codebase";
  };

export { to_help_you_decide_which_repository_might_be_the_best_to_start_contributing_and_or_falls_into_your_interest_here_s_a_short_comparison_languages_in_bold_comprise_most_of_the_codebase };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const main_repository_that_provides_the_capacitor_updater_plugin = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.main_repository_that_provides_the_capacitor_updater_plugin(
      inputs
    );
  if (locale === "de")
    return de.main_repository_that_provides_the_capacitor_updater_plugin(
      inputs
    );
  return "main_repository_that_provides_the_capacitor_updater_plugin";
};

export { main_repository_that_provides_the_capacitor_updater_plugin };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const you_want_to_fix_a_bug_or_add_a_new_feature_to_capacitor_updater_this_is_the_repository_you_want_to_contribute_to =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.you_want_to_fix_a_bug_or_add_a_new_feature_to_capacitor_updater_this_is_the_repository_you_want_to_contribute_to(
        inputs
      );
    if (locale === "de")
      return de.you_want_to_fix_a_bug_or_add_a_new_feature_to_capacitor_updater_this_is_the_repository_you_want_to_contribute_to(
        inputs
      );
    return "you_want_to_fix_a_bug_or_add_a_new_feature_to_capacitor_updater_this_is_the_repository_you_want_to_contribute_to";
  };

export { you_want_to_fix_a_bug_or_add_a_new_feature_to_capacitor_updater_this_is_the_repository_you_want_to_contribute_to };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const the_webapp_and_serverless_functions_that_make_up_the_capgo_cloud_platform =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.the_webapp_and_serverless_functions_that_make_up_the_capgo_cloud_platform(
        inputs
      );
    if (locale === "de")
      return de.the_webapp_and_serverless_functions_that_make_up_the_capgo_cloud_platform(
        inputs
      );
    return "the_webapp_and_serverless_functions_that_make_up_the_capgo_cloud_platform";
  };

export { the_webapp_and_serverless_functions_that_make_up_the_capgo_cloud_platform };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const thare_where_you_want_to_contribute_to_fix_the_backend_of_capgo = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.thare_where_you_want_to_contribute_to_fix_the_backend_of_capgo(
      inputs
    );
  if (locale === "de")
    return de.thare_where_you_want_to_contribute_to_fix_the_backend_of_capgo(
      inputs
    );
  return "thare_where_you_want_to_contribute_to_fix_the_backend_of_capgo";
};

export { thare_where_you_want_to_contribute_to_fix_the_backend_of_capgo };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const frontend_for_official_deno_webpage = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.frontend_for_official_deno_webpage(inputs);
  if (locale === "de") return de.frontend_for_official_deno_webpage(inputs);
  return "frontend_for_official_deno_webpage";
};

export { frontend_for_official_deno_webpage };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const documentation_in_markdown_that_powers = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.documentation_in_markdown_that_powers(inputs);
  if (locale === "de") return de.documentation_in_markdown_that_powers(inputs);
  return "documentation_in_markdown_that_powers";
};

export { documentation_in_markdown_that_powers };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const version_manager_that_power_ci_cd_to_update_apps = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.version_manager_that_power_ci_cd_to_update_apps(inputs);
  if (locale === "de")
    return de.version_manager_that_power_ci_cd_to_update_apps(inputs);
  return "version_manager_that_power_ci_cd_to_update_apps";
};

export { version_manager_that_power_ci_cd_to_update_apps };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const read_the_style_guide = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.read_the_style_guide(inputs);
  if (locale === "de") return de.read_the_style_guide(inputs);
  return "read_the_style_guide";
};

export { read_the_style_guide };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const ask_for_help_in_the_community_chat_room = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.ask_for_help_in_the_community_chat_room(inputs);
  if (locale === "de")
    return de.ask_for_help_in_the_community_chat_room(inputs);
  return "ask_for_help_in_the_community_chat_room";
};

export { ask_for_help_in_the_community_chat_room };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const mention_issue_before_working = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.mention_issue_before_working(inputs);
  if (locale === "de") return de.mention_issue_before_working(inputs);
  return "mention_issue_before_working";
};

export { mention_issue_before_working };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const create_an_issue_and_discuss_before_working_on_a_new_feature = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.create_an_issue_and_discuss_before_working_on_a_new_feature(
      inputs
    );
  if (locale === "de")
    return de.create_an_issue_and_discuss_before_working_on_a_new_feature(
      inputs
    );
  return "create_an_issue_and_discuss_before_working_on_a_new_feature";
};

export { create_an_issue_and_discuss_before_working_on_a_new_feature };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const please_be_professional_in_the_forums = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.please_be_professional_in_the_forums(inputs);
  if (locale === "de") return de.please_be_professional_in_the_forums(inputs);
  return "please_be_professional_in_the_forums";
};

export { please_be_professional_in_the_forums };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const submitting_a_pull_request = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.submitting_a_pull_request(inputs);
  if (locale === "de") return de.submitting_a_pull_request(inputs);
  return "submitting_a_pull_request";
};

export { submitting_a_pull_request };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const before_submitting_a_pr = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.before_submitting_a_pr(inputs);
  if (locale === "de") return de.before_submitting_a_pr(inputs);
  return "before_submitting_a_pr";
};

export { before_submitting_a_pr };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const give_pr_a_descriptive_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.give_pr_a_descriptive_title(inputs);
  if (locale === "de") return de.give_pr_a_descriptive_title(inputs);
  return "give_pr_a_descriptive_title";
};

export { give_pr_a_descriptive_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const examples_of_good_pr_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.examples_of_good_pr_title(inputs);
  if (locale === "de") return de.examples_of_good_pr_title(inputs);
  return "examples_of_good_pr_title";
};

export { examples_of_good_pr_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const examples_of_bad_pr_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.examples_of_bad_pr_title(inputs);
  if (locale === "de") return de.examples_of_bad_pr_title(inputs);
  return "examples_of_bad_pr_title";
};

export { examples_of_bad_pr_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const submitting_a_pr_to_capgo = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.submitting_a_pr_to_capgo(inputs);
  if (locale === "de") return de.submitting_a_pr_to_capgo(inputs);
  return "submitting_a_pr_to_capgo";
};

export { submitting_a_pr_to_capgo };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const additionally_make_sure_that = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.additionally_make_sure_that(inputs);
  if (locale === "de") return de.additionally_make_sure_that(inputs);
  return "additionally_make_sure_that";
};

export { additionally_make_sure_that };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const npm_run_lint_passes = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.npm_run_lint_passes(inputs);
  if (locale === "de") return de.npm_run_lint_passes(inputs);
  return "npm_run_lint_passes";
};

export { npm_run_lint_passes };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const documenting_apis = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.documenting_apis(inputs);
  if (locale === "de") return de.documenting_apis(inputs);
  return "documenting_apis";
};

export { documenting_apis };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const importance_of_documenting_apis = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.importance_of_documenting_apis(inputs);
  if (locale === "de") return de.importance_of_documenting_apis(inputs);
  return "importance_of_documenting_apis";
};

export { importance_of_documenting_apis };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const javascript_and_typescript = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.javascript_and_typescript(inputs);
  if (locale === "de") return de.javascript_and_typescript(inputs);
  return "javascript_and_typescript";
};

export { javascript_and_typescript };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const jsdoc_documentation = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.jsdoc_documentation(inputs);
  if (locale === "de") return de.jsdoc_documentation(inputs);
  return "jsdoc_documentation";
};

export { jsdoc_documentation };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const jsdoc_example = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.jsdoc_example(inputs);
  if (locale === "de") return de.jsdoc_example(inputs);
  return "jsdoc_example";
};

export { jsdoc_example };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const find_more_at = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.find_more_at(inputs);
  if (locale === "de") return de.find_more_at(inputs);
  return "find_more_at";
};

export { find_more_at };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const get_in_touch = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.get_in_touch(inputs);
  if (locale === "de") return de.get_in_touch(inputs);
  return "get_in_touch";
};

export { get_in_touch };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const company_name = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.company_name(inputs);
  if (locale === "de") return de.company_name(inputs);
  return "company_name";
};

export { company_name };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const register_code = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.register_code(inputs);
  if (locale === "de") return de.register_code(inputs);
  return "register_code";
};

export { register_code };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const address = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.address(inputs);
  if (locale === "de") return de.address(inputs);
  return "address";
};

export { address };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const hosting = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.hosting(inputs);
  if (locale === "de") return de.hosting(inputs);
  return "hosting";
};

export { hosting };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_storage = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_storage(inputs);
  if (locale === "de") return de.data_storage(inputs);
  return "data_storage";
};

export { data_storage };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_processing = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_processing(inputs);
  if (locale === "de") return de.data_processing(inputs);
  return "data_processing";
};

export { data_processing };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const powerful_app_plugins = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.powerful_app_plugins(inputs);
  if (locale === "de") return de.powerful_app_plugins(inputs);
  return "powerful_app_plugins";
};

export { powerful_app_plugins };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const powerful_app_plugins_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.powerful_app_plugins_description(inputs);
  if (locale === "de") return de.powerful_app_plugins_description(inputs);
  return "powerful_app_plugins_description";
};

export { powerful_app_plugins_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const plans_that_scale_with_your_business = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.plans_that_scale_with_your_business(inputs);
  if (locale === "de") return de.plans_that_scale_with_your_business(inputs);
  return "plans_that_scale_with_your_business";
};

export { plans_that_scale_with_your_business };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const plans_that_scale_with_your_business_description = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.plans_that_scale_with_your_business_description(inputs);
  if (locale === "de")
    return de.plans_that_scale_with_your_business_description(inputs);
  return "plans_that_scale_with_your_business_description";
};

export { plans_that_scale_with_your_business_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const monthly_plan = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.monthly_plan(inputs);
  if (locale === "de") return de.monthly_plan(inputs);
  return "monthly_plan";
};

export { monthly_plan };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const yearly_plan = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.yearly_plan(inputs);
  if (locale === "de") return de.yearly_plan(inputs);
  return "yearly_plan";
};

export { yearly_plan };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const save = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.save(inputs);
  if (locale === "de") return de.save(inputs);
  return "save";
};

export { save };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const we_don_t_bill_you_automatically_until_your_confirmation = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.we_don_t_bill_you_automatically_until_your_confirmation(inputs);
  if (locale === "de")
    return de.we_don_t_bill_you_automatically_until_your_confirmation(inputs);
  return "we_don_t_bill_you_automatically_until_your_confirmation";
};

export { we_don_t_bill_you_automatically_until_your_confirmation };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const we_don_t_store_or_sell_your_data_to_anyone = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.we_don_t_store_or_sell_your_data_to_anyone(inputs);
  if (locale === "de")
    return de.we_don_t_store_or_sell_your_data_to_anyone(inputs);
  return "we_don_t_store_or_sell_your_data_to_anyone";
};

export { we_don_t_store_or_sell_your_data_to_anyone };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const top_100_app_using_different_framworks_on_android_store = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.top_100_app_using_different_framworks_on_android_store(inputs);
  if (locale === "de")
    return de.top_100_app_using_different_framworks_on_android_store(inputs);
  return "top_100_app_using_different_framworks_on_android_store";
};

export { top_100_app_using_different_framworks_on_android_store };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const top_apps_by_framework = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.top_apps_by_framework(inputs);
  if (locale === "de") return de.top_apps_by_framework(inputs);
  return "top_apps_by_framework";
};

export { top_apps_by_framework };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const top_100_app_using_capacitor_on_android_play_store = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.top_100_app_using_capacitor_on_android_play_store(inputs);
  if (locale === "de")
    return de.top_100_app_using_capacitor_on_android_play_store(inputs);
  return "top_100_app_using_capacitor_on_android_play_store";
};

export { top_100_app_using_capacitor_on_android_play_store };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const top_capacitor_apps = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.top_capacitor_apps(inputs);
  if (locale === "de") return de.top_capacitor_apps(inputs);
  return "top_capacitor_apps";
};

export { top_capacitor_apps };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const capacitor_power_aproximately_1_of_apps_on_google_play_store = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.capacitor_power_aproximately_1_of_apps_on_google_play_store(
      inputs
    );
  if (locale === "de")
    return de.capacitor_power_aproximately_1_of_apps_on_google_play_store(
      inputs
    );
  return "capacitor_power_aproximately_1_of_apps_on_google_play_store";
};

export { capacitor_power_aproximately_1_of_apps_on_google_play_store };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const downloads = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.downloads(inputs);
  if (locale === "de") return de.downloads(inputs);
  return "downloads";
};

export { downloads };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const see_in_play_store = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.see_in_play_store(inputs);
  if (locale === "de") return de.see_in_play_store(inputs);
  return "see_in_play_store";
};

export { see_in_play_store };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const top_app_using_capgo_cloud_or_self_hosted = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.top_app_using_capgo_cloud_or_self_hosted(inputs);
  if (locale === "de")
    return de.top_app_using_capgo_cloud_or_self_hosted(inputs);
  return "top_app_using_capgo_cloud_or_self_hosted";
};

export { top_app_using_capgo_cloud_or_self_hosted };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const top_cordova_apps = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.top_cordova_apps(inputs);
  if (locale === "de") return de.top_cordova_apps(inputs);
  return "top_cordova_apps";
};

export { top_cordova_apps };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const top_cordova_apps_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.top_cordova_apps_title(inputs);
  if (locale === "de") return de.top_cordova_apps_title(inputs);
  return "top_cordova_apps_title";
};

export { top_cordova_apps_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const top_capgo_apps_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.top_capgo_apps_title(inputs);
  if (locale === "de") return de.top_capgo_apps_title(inputs);
  return "top_capgo_apps_title";
};

export { top_capgo_apps_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const top_capgo_apps = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.top_capgo_apps(inputs);
  if (locale === "de") return de.top_capgo_apps(inputs);
  return "top_capgo_apps";
};

export { top_capgo_apps };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const cordova_power_aproximately_1_of_apps_on_google_play_store = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.cordova_power_aproximately_1_of_apps_on_google_play_store(inputs);
  if (locale === "de")
    return de.cordova_power_aproximately_1_of_apps_on_google_play_store(inputs);
  return "cordova_power_aproximately_1_of_apps_on_google_play_store";
};

export { cordova_power_aproximately_1_of_apps_on_google_play_store };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const top_flutter_apps = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.top_flutter_apps(inputs);
  if (locale === "de") return de.top_flutter_apps(inputs);
  return "top_flutter_apps";
};

export { top_flutter_apps };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const top_kotlin_apps = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.top_kotlin_apps(inputs);
  if (locale === "de") return de.top_kotlin_apps(inputs);
  return "top_kotlin_apps";
};

export { top_kotlin_apps };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const top_native_script_apps = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.top_native_script_apps(inputs);
  if (locale === "de") return de.top_native_script_apps(inputs);
  return "top_native_script_apps";
};

export { top_native_script_apps };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const top_react_native_apps = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.top_react_native_apps(inputs);
  if (locale === "de") return de.top_react_native_apps(inputs);
  return "top_react_native_apps";
};

export { top_react_native_apps };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const top_flutter_apps_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.top_flutter_apps_title(inputs);
  if (locale === "de") return de.top_flutter_apps_title(inputs);
  return "top_flutter_apps_title";
};

export { top_flutter_apps_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const flutter_power_aproximately_1_of_apps_on_google_play_store = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.flutter_power_aproximately_1_of_apps_on_google_play_store(inputs);
  if (locale === "de")
    return de.flutter_power_aproximately_1_of_apps_on_google_play_store(inputs);
  return "flutter_power_aproximately_1_of_apps_on_google_play_store";
};

export { flutter_power_aproximately_1_of_apps_on_google_play_store };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const top_kotlin_apps_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.top_kotlin_apps_title(inputs);
  if (locale === "de") return de.top_kotlin_apps_title(inputs);
  return "top_kotlin_apps_title";
};

export { top_kotlin_apps_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const kotlin_power_aproximately_1_of_apps_on_google_play_store = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.kotlin_power_aproximately_1_of_apps_on_google_play_store(inputs);
  if (locale === "de")
    return de.kotlin_power_aproximately_1_of_apps_on_google_play_store(inputs);
  return "kotlin_power_aproximately_1_of_apps_on_google_play_store";
};

export { kotlin_power_aproximately_1_of_apps_on_google_play_store };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const top_native_script_apps_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.top_native_script_apps_title(inputs);
  if (locale === "de") return de.top_native_script_apps_title(inputs);
  return "top_native_script_apps_title";
};

export { top_native_script_apps_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const native_script_power_aproximately_1_of_apps_on_google_play_store = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.native_script_power_aproximately_1_of_apps_on_google_play_store(
      inputs
    );
  if (locale === "de")
    return de.native_script_power_aproximately_1_of_apps_on_google_play_store(
      inputs
    );
  return "native_script_power_aproximately_1_of_apps_on_google_play_store";
};

export { native_script_power_aproximately_1_of_apps_on_google_play_store };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const top_react_native_apps_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.top_react_native_apps_title(inputs);
  if (locale === "de") return de.top_react_native_apps_title(inputs);
  return "top_react_native_apps_title";
};

export { top_react_native_apps_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const react_native_power_aproximately_1_of_apps_on_google_play_store = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.react_native_power_aproximately_1_of_apps_on_google_play_store(
      inputs
    );
  if (locale === "de")
    return de.react_native_power_aproximately_1_of_apps_on_google_play_store(
      inputs
    );
  return "react_native_power_aproximately_1_of_apps_on_google_play_store";
};

export { react_native_power_aproximately_1_of_apps_on_google_play_store };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const table_of_contents = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.table_of_contents(inputs);
  if (locale === "de") return de.table_of_contents(inputs);
  return "table_of_contents";
};

export { table_of_contents };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const latest_from_news = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.latest_from_news(inputs);
  if (locale === "de") return de.latest_from_news(inputs);
  return "latest_from_news";
};

export { latest_from_news };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const capgo_gives_you_the_best_insights_you_need_to_create_a_truly_professional_mobile_app =
  (inputs = {}, options = {}) => {
    const locale = options.locale ?? getLocale();
    if (locale === "en")
      return en.capgo_gives_you_the_best_insights_you_need_to_create_a_truly_professional_mobile_app(
        inputs
      );
    if (locale === "de")
      return de.capgo_gives_you_the_best_insights_you_need_to_create_a_truly_professional_mobile_app(
        inputs
      );
    return "capgo_gives_you_the_best_insights_you_need_to_create_a_truly_professional_mobile_app";
  };

export { capgo_gives_you_the_best_insights_you_need_to_create_a_truly_professional_mobile_app };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const see_all_from_our_blog = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.see_all_from_our_blog(inputs);
  if (locale === "de") return de.see_all_from_our_blog(inputs);
  return "see_all_from_our_blog";
};

export { see_all_from_our_blog };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const latest_from_the_blog = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.latest_from_the_blog(inputs);
  if (locale === "de") return de.latest_from_the_blog(inputs);
  return "latest_from_the_blog";
};

export { latest_from_the_blog };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const calculate_your_usage = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.calculate_your_usage(inputs);
  if (locale === "de") return de.calculate_your_usage(inputs);
  return "calculate_your_usage";
};

export { calculate_your_usage };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const monthly_active_users = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.monthly_active_users(inputs);
  if (locale === "de") return de.monthly_active_users(inputs);
  return "monthly_active_users";
};

export { monthly_active_users };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const enter_your_estimated_monthly_active_users = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.enter_your_estimated_monthly_active_users(inputs);
  if (locale === "de")
    return de.enter_your_estimated_monthly_active_users(inputs);
  return "enter_your_estimated_monthly_active_users";
};

export { enter_your_estimated_monthly_active_users };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const updates_by_month = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.updates_by_month(inputs);
  if (locale === "de") return de.updates_by_month(inputs);
  return "updates_by_month";
};

export { updates_by_month };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const updates_size = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.updates_size(inputs);
  if (locale === "de") return de.updates_size(inputs);
  return "updates_size";
};

export { updates_size };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const updates_total = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.updates_total(inputs);
  if (locale === "de") return de.updates_total(inputs);
  return "updates_total";
};

export { updates_total };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const bandwidth_gb = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.bandwidth_gb(inputs);
  if (locale === "de") return de.bandwidth_gb(inputs);
  return "bandwidth_gb";
};

export { bandwidth_gb };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const storage = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.storage(inputs);
  if (locale === "de") return de.storage(inputs);
  return "storage";
};

export { storage };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const yearly = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.yearly(inputs);
  if (locale === "de") return de.yearly(inputs);
  return "yearly";
};

export { yearly };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const monthly = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.monthly(inputs);
  if (locale === "de") return de.monthly(inputs);
  return "monthly";
};

export { monthly };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const we_suggest_you_to_choose_the = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.we_suggest_you_to_choose_the(inputs);
  if (locale === "de") return de.we_suggest_you_to_choose_the(inputs);
  return "we_suggest_you_to_choose_the";
};

export { we_suggest_you_to_choose_the };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const plan = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.plan(inputs);
  if (locale === "de") return de.plan(inputs);
  return "plan";
};

export { plan };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const questions_and_answers = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.questions_and_answers(inputs);
  if (locale === "de") return de.questions_and_answers(inputs);
  return "questions_and_answers";
};

export { questions_and_answers };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const explore_common_questions = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.explore_common_questions(inputs);
  if (locale === "de") return de.explore_common_questions(inputs);
  return "explore_common_questions";
};

export { explore_common_questions };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const how_are_mau_counted = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.how_are_mau_counted(inputs);
  if (locale === "de") return de.how_are_mau_counted(inputs);
  return "how_are_mau_counted";
};

export { how_are_mau_counted };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const mau_counting_explanation = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.mau_counting_explanation(inputs);
  if (locale === "de") return de.mau_counting_explanation(inputs);
  return "mau_counting_explanation";
};

export { mau_counting_explanation };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const capgo_usage_explanation = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.capgo_usage_explanation(inputs);
  if (locale === "de") return de.capgo_usage_explanation(inputs);
  return "capgo_usage_explanation";
};

export { capgo_usage_explanation };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const here = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.here(inputs);
  if (locale === "de") return de.here(inputs);
  return "here";
};

export { here };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const what_does_storage_mean = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.what_does_storage_mean(inputs);
  if (locale === "de") return de.what_does_storage_mean(inputs);
  return "what_does_storage_mean";
};

export { what_does_storage_mean };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const storage_explanation = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.storage_explanation(inputs);
  if (locale === "de") return de.storage_explanation(inputs);
  return "storage_explanation";
};

export { storage_explanation };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const how_is_bandwidth_counted = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.how_is_bandwidth_counted(inputs);
  if (locale === "de") return de.how_is_bandwidth_counted(inputs);
  return "how_is_bandwidth_counted";
};

export { how_is_bandwidth_counted };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const bandwidth_explanation = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.bandwidth_explanation(inputs);
  if (locale === "de") return de.bandwidth_explanation(inputs);
  return "bandwidth_explanation";
};

export { bandwidth_explanation };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const unsure_about_active_users = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.unsure_about_active_users(inputs);
  if (locale === "de") return de.unsure_about_active_users(inputs);
  return "unsure_about_active_users";
};

export { unsure_about_active_users };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const free_trial_explanation = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.free_trial_explanation(inputs);
  if (locale === "de") return de.free_trial_explanation(inputs);
  return "free_trial_explanation";
};

export { free_trial_explanation };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const didnt_find_answer = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.didnt_find_answer(inputs);
  if (locale === "de") return de.didnt_find_answer(inputs);
  return "didnt_find_answer";
};

export { didnt_find_answer };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const contact_support = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.contact_support(inputs);
  if (locale === "de") return de.contact_support(inputs);
  return "contact_support";
};

export { contact_support };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const pay_as_you_go = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.pay_as_you_go(inputs);
  if (locale === "de") return de.pay_as_you_go(inputs);
  return "pay_as_you_go";
};

export { pay_as_you_go };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const pay_as_you_go_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.pay_as_you_go_description(inputs);
  if (locale === "de") return de.pay_as_you_go_description(inputs);
  return "pay_as_you_go_description";
};

export { pay_as_you_go_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const users_included = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.users_included(inputs);
  if (locale === "de") return de.users_included(inputs);
  return "users_included";
};

export { users_included };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const then = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.then(inputs);
  if (locale === "de") return de.then(inputs);
  return "then";
};

export { then };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const bandwidth = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.bandwidth(inputs);
  if (locale === "de") return de.bandwidth(inputs);
  return "bandwidth";
};

export { bandwidth };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const TB_included = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.TB_included(inputs);
  if (locale === "de") return de.TB_included(inputs);
  return "TB_included";
};

export { TB_included };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const per_GB = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.per_GB(inputs);
  if (locale === "de") return de.per_GB(inputs);
  return "per_GB";
};

export { per_GB };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const cloud_storage = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.cloud_storage(inputs);
  if (locale === "de") return de.cloud_storage(inputs);
  return "cloud_storage";
};

export { cloud_storage };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const GB_included = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.GB_included(inputs);
  if (locale === "de") return de.GB_included(inputs);
  return "GB_included";
};

export { GB_included };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const API_access = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.API_access(inputs);
  if (locale === "de") return de.API_access(inputs);
  return "API_access";
};

export { API_access };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const create_anything_you_want = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.create_anything_you_want(inputs);
  if (locale === "de") return de.create_anything_you_want(inputs);
  return "create_anything_you_want";
};

export { create_anything_you_want };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dedicated_support = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dedicated_support(inputs);
  if (locale === "de") return de.dedicated_support(inputs);
  return "dedicated_support";
};

export { dedicated_support };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const get_an_answer_in_less_than_6h = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.get_an_answer_in_less_than_6h(inputs);
  if (locale === "de") return de.get_an_answer_in_less_than_6h(inputs);
  return "get_an_answer_in_less_than_6h";
};

export { get_an_answer_in_less_than_6h };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const custom_domain = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.custom_domain(inputs);
  if (locale === "de") return de.custom_domain(inputs);
  return "custom_domain";
};

export { custom_domain };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const add_your_own_domain = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.add_your_own_domain(inputs);
  if (locale === "de") return de.add_your_own_domain(inputs);
  return "add_your_own_domain";
};

export { add_your_own_domain };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const all_our_features_are_available_to_all_users = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.all_our_features_are_available_to_all_users(inputs);
  if (locale === "de")
    return de.all_our_features_are_available_to_all_users(inputs);
  return "all_our_features_are_available_to_all_users";
};

export { all_our_features_are_available_to_all_users };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const month = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.month(inputs);
  if (locale === "de") return de.month(inputs);
  return "month";
};

export { month };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const user = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.user(inputs);
  if (locale === "de") return de.user(inputs);
  return "user";
};

export { user };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const get_started_for_free = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.get_started_for_free(inputs);
  if (locale === "de") return de.get_started_for_free(inputs);
  return "get_started_for_free";
};

export { get_started_for_free };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const most_popular = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.most_popular(inputs);
  if (locale === "de") return de.most_popular(inputs);
  return "most_popular";
};

export { most_popular };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const days_free_trial = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.days_free_trial(inputs);
  if (locale === "de") return de.days_free_trial(inputs);
  return "days_free_trial";
};

export { days_free_trial };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const billed_annually_at = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.billed_annually_at(inputs);
  if (locale === "de") return de.billed_annually_at(inputs);
  return "billed_annually_at";
};

export { billed_annually_at };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const you_get = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.you_get(inputs);
  if (locale === "de") return de.you_get(inputs);
  return "you_get";
};

export { you_get };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const live_updates_per_month = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.live_updates_per_month(inputs);
  if (locale === "de") return de.live_updates_per_month(inputs);
  return "live_updates_per_month";
};

export { live_updates_per_month };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const of_bandwidth = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.of_bandwidth(inputs);
  if (locale === "de") return de.of_bandwidth(inputs);
  return "of_bandwidth";
};

export { of_bandwidth };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const of_storage = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.of_storage(inputs);
  if (locale === "de") return de.of_storage(inputs);
  return "of_storage";
};

export { of_storage };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const priority_support_for_all_capgo_plugins = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.priority_support_for_all_capgo_plugins(inputs);
  if (locale === "de") return de.priority_support_for_all_capgo_plugins(inputs);
  return "priority_support_for_all_capgo_plugins";
};

export { priority_support_for_all_capgo_plugins };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const for_the_pay_as_you_go_plan = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.for_the_pay_as_you_go_plan(inputs);
  if (locale === "de") return de.for_the_pay_as_you_go_plan(inputs);
  return "for_the_pay_as_you_go_plan";
};

export { for_the_pay_as_you_go_plan };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const per_added_user = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.per_added_user(inputs);
  if (locale === "de") return de.per_added_user(inputs);
  return "per_added_user";
};

export { per_added_user };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const included = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.included(inputs);
  if (locale === "de") return de.included(inputs);
  return "included";
};

export { included };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const per_added_gb = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.per_added_gb(inputs);
  if (locale === "de") return de.per_added_gb(inputs);
  return "per_added_gb";
};

export { per_added_gb };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const updates = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.updates(inputs);
  if (locale === "de") return de.updates(inputs);
  return "updates";
};

export { updates };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const updates_explanation = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.updates_explanation(inputs);
  if (locale === "de") return de.updates_explanation(inputs);
  return "updates_explanation";
};

export { updates_explanation };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const plan_free_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.plan_free_desc(inputs);
  if (locale === "de") return de.plan_free_desc(inputs);
  return "plan_free_desc";
};

export { plan_free_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const plan_solo_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.plan_solo_desc(inputs);
  if (locale === "de") return de.plan_solo_desc(inputs);
  return "plan_solo_desc";
};

export { plan_solo_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const plan_maker_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.plan_maker_desc(inputs);
  if (locale === "de") return de.plan_maker_desc(inputs);
  return "plan_maker_desc";
};

export { plan_maker_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const plan_team_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.plan_team_desc(inputs);
  if (locale === "de") return de.plan_team_desc(inputs);
  return "plan_team_desc";
};

export { plan_team_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tutorial_on = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tutorial_on(inputs);
  if (locale === "de") return de.tutorial_on(inputs);
  return "tutorial_on";
};

export { tutorial_on };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const view_repo = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.view_repo(inputs);
  if (locale === "de") return de.view_repo(inputs);
  return "view_repo";
};

export { view_repo };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const view_npm = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.view_npm(inputs);
  if (locale === "de") return de.view_npm(inputs);
  return "view_npm";
};

export { view_npm };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const last_modified = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.last_modified(inputs);
  if (locale === "de") return de.last_modified(inputs);
  return "last_modified";
};

export { last_modified };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const aup_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.aup_intro(inputs);
  if (locale === "de") return de.aup_intro(inputs);
  return "aup_intro";
};

export { aup_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const aup_no_illegal_use = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.aup_no_illegal_use(inputs);
  if (locale === "de") return de.aup_no_illegal_use(inputs);
  return "aup_no_illegal_use";
};

export { aup_no_illegal_use };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const aup_no_illegal_use_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.aup_no_illegal_use_desc(inputs);
  if (locale === "de") return de.aup_no_illegal_use_desc(inputs);
  return "aup_no_illegal_use_desc";
};

export { aup_no_illegal_use_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const illegal_activities = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.illegal_activities(inputs);
  if (locale === "de") return de.illegal_activities(inputs);
  return "illegal_activities";
};

export { illegal_activities };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const infringing_content = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.infringing_content(inputs);
  if (locale === "de") return de.infringing_content(inputs);
  return "infringing_content";
};

export { infringing_content };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const offensive_content = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.offensive_content(inputs);
  if (locale === "de") return de.offensive_content(inputs);
  return "offensive_content";
};

export { offensive_content };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const harmful_content = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.harmful_content(inputs);
  if (locale === "de") return de.harmful_content(inputs);
  return "harmful_content";
};

export { harmful_content };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const platform_compliance = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.platform_compliance(inputs);
  if (locale === "de") return de.platform_compliance(inputs);
  return "platform_compliance";
};

export { platform_compliance };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const aup_no_security_violations = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.aup_no_security_violations(inputs);
  if (locale === "de") return de.aup_no_security_violations(inputs);
  return "aup_no_security_violations";
};

export { aup_no_security_violations };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const aup_no_security_violations_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.aup_no_security_violations_desc(inputs);
  if (locale === "de") return de.aup_no_security_violations_desc(inputs);
  return "aup_no_security_violations_desc";
};

export { aup_no_security_violations_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const unauthorized_access = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.unauthorized_access(inputs);
  if (locale === "de") return de.unauthorized_access(inputs);
  return "unauthorized_access";
};

export { unauthorized_access };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const interception = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.interception(inputs);
  if (locale === "de") return de.interception(inputs);
  return "interception";
};

export { interception };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const falsification_of_origin = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.falsification_of_origin(inputs);
  if (locale === "de") return de.falsification_of_origin(inputs);
  return "falsification_of_origin";
};

export { falsification_of_origin };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const aup_no_network_abuse = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.aup_no_network_abuse(inputs);
  if (locale === "de") return de.aup_no_network_abuse(inputs);
  return "aup_no_network_abuse";
};

export { aup_no_network_abuse };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const aup_no_network_abuse_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.aup_no_network_abuse_desc(inputs);
  if (locale === "de") return de.aup_no_network_abuse_desc(inputs);
  return "aup_no_network_abuse_desc";
};

export { aup_no_network_abuse_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const monitoring_crawling = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.monitoring_crawling(inputs);
  if (locale === "de") return de.monitoring_crawling(inputs);
  return "monitoring_crawling";
};

export { monitoring_crawling };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const denial_of_service = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.denial_of_service(inputs);
  if (locale === "de") return de.denial_of_service(inputs);
  return "denial_of_service";
};

export { denial_of_service };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const intentional_interference = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.intentional_interference(inputs);
  if (locale === "de") return de.intentional_interference(inputs);
  return "intentional_interference";
};

export { intentional_interference };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const operation_of_network_services = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.operation_of_network_services(inputs);
  if (locale === "de") return de.operation_of_network_services(inputs);
  return "operation_of_network_services";
};

export { operation_of_network_services };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const avoiding_system_restrictions = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.avoiding_system_restrictions(inputs);
  if (locale === "de") return de.avoiding_system_restrictions(inputs);
  return "avoiding_system_restrictions";
};

export { avoiding_system_restrictions };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const aup_no_email_abuse = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.aup_no_email_abuse(inputs);
  if (locale === "de") return de.aup_no_email_abuse(inputs);
  return "aup_no_email_abuse";
};

export { aup_no_email_abuse };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const aup_no_email_abuse_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.aup_no_email_abuse_desc(inputs);
  if (locale === "de") return de.aup_no_email_abuse_desc(inputs);
  return "aup_no_email_abuse_desc";
};

export { aup_no_email_abuse_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const aup_monitoring_enforcement = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.aup_monitoring_enforcement(inputs);
  if (locale === "de") return de.aup_monitoring_enforcement(inputs);
  return "aup_monitoring_enforcement";
};

export { aup_monitoring_enforcement };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const aup_monitoring_enforcement_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.aup_monitoring_enforcement_desc(inputs);
  if (locale === "de") return de.aup_monitoring_enforcement_desc(inputs);
  return "aup_monitoring_enforcement_desc";
};

export { aup_monitoring_enforcement_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const investigate_violations = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.investigate_violations(inputs);
  if (locale === "de") return de.investigate_violations(inputs);
  return "investigate_violations";
};

export { investigate_violations };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const remove_modify_content = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.remove_modify_content(inputs);
  if (locale === "de") return de.remove_modify_content(inputs);
  return "remove_modify_content";
};

export { remove_modify_content };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const aup_reporting_violations = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.aup_reporting_violations(inputs);
  if (locale === "de") return de.aup_reporting_violations(inputs);
  return "aup_reporting_violations";
};

export { aup_reporting_violations };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const aup_reporting_violations_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.aup_reporting_violations_desc(inputs);
  if (locale === "de") return de.aup_reporting_violations_desc(inputs);
  return "aup_reporting_violations_desc";
};

export { aup_reporting_violations_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const illegal_activities_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.illegal_activities_desc(inputs);
  if (locale === "de") return de.illegal_activities_desc(inputs);
  return "illegal_activities_desc";
};

export { illegal_activities_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const infringing_content_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.infringing_content_desc(inputs);
  if (locale === "de") return de.infringing_content_desc(inputs);
  return "infringing_content_desc";
};

export { infringing_content_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const offensive_content_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.offensive_content_desc(inputs);
  if (locale === "de") return de.offensive_content_desc(inputs);
  return "offensive_content_desc";
};

export { offensive_content_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const harmful_content_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.harmful_content_desc(inputs);
  if (locale === "de") return de.harmful_content_desc(inputs);
  return "harmful_content_desc";
};

export { harmful_content_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const platform_compliance_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.platform_compliance_desc(inputs);
  if (locale === "de") return de.platform_compliance_desc(inputs);
  return "platform_compliance_desc";
};

export { platform_compliance_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const unauthorized_access_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.unauthorized_access_desc(inputs);
  if (locale === "de") return de.unauthorized_access_desc(inputs);
  return "unauthorized_access_desc";
};

export { unauthorized_access_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const falsification_of_origin_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.falsification_of_origin_desc(inputs);
  if (locale === "de") return de.falsification_of_origin_desc(inputs);
  return "falsification_of_origin_desc";
};

export { falsification_of_origin_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const monitoring_crawling_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.monitoring_crawling_desc(inputs);
  if (locale === "de") return de.monitoring_crawling_desc(inputs);
  return "monitoring_crawling_desc";
};

export { monitoring_crawling_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const denial_of_service_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.denial_of_service_desc(inputs);
  if (locale === "de") return de.denial_of_service_desc(inputs);
  return "denial_of_service_desc";
};

export { denial_of_service_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const intentional_interference_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.intentional_interference_desc(inputs);
  if (locale === "de") return de.intentional_interference_desc(inputs);
  return "intentional_interference_desc";
};

export { intentional_interference_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const operation_of_network_services_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.operation_of_network_services_desc(inputs);
  if (locale === "de") return de.operation_of_network_services_desc(inputs);
  return "operation_of_network_services_desc";
};

export { operation_of_network_services_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const avoiding_system_restrictions_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.avoiding_system_restrictions_desc(inputs);
  if (locale === "de") return de.avoiding_system_restrictions_desc(inputs);
  return "avoiding_system_restrictions_desc";
};

export { avoiding_system_restrictions_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const report_violations_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.report_violations_desc(inputs);
  if (locale === "de") return de.report_violations_desc(inputs);
  return "report_violations_desc";
};

export { report_violations_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const report_violations_desc_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.report_violations_desc_2(inputs);
  if (locale === "de") return de.report_violations_desc_2(inputs);
  return "report_violations_desc_2";
};

export { report_violations_desc_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_policy_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_policy_title(inputs);
  if (locale === "de") return de.security_policy_title(inputs);
  return "security_policy_title";
};

export { security_policy_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const canonical = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.canonical(inputs);
  if (locale === "de") return de.canonical(inputs);
  return "canonical";
};

export { canonical };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_intro(inputs);
  if (locale === "de") return de.security_intro(inputs);
  return "security_intro";
};

export { security_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_discovery = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_discovery(inputs);
  if (locale === "de") return de.security_discovery(inputs);
  return "security_discovery";
};

export { security_discovery };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_out_of_scope_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_out_of_scope_title(inputs);
  if (locale === "de") return de.security_out_of_scope_title(inputs);
  return "security_out_of_scope_title";
};

export { security_out_of_scope_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_out_of_scope_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_out_of_scope_1(inputs);
  if (locale === "de") return de.security_out_of_scope_1(inputs);
  return "security_out_of_scope_1";
};

export { security_out_of_scope_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_out_of_scope_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_out_of_scope_2(inputs);
  if (locale === "de") return de.security_out_of_scope_2(inputs);
  return "security_out_of_scope_2";
};

export { security_out_of_scope_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_out_of_scope_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_out_of_scope_3(inputs);
  if (locale === "de") return de.security_out_of_scope_3(inputs);
  return "security_out_of_scope_3";
};

export { security_out_of_scope_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_out_of_scope_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_out_of_scope_4(inputs);
  if (locale === "de") return de.security_out_of_scope_4(inputs);
  return "security_out_of_scope_4";
};

export { security_out_of_scope_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_out_of_scope_5 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_out_of_scope_5(inputs);
  if (locale === "de") return de.security_out_of_scope_5(inputs);
  return "security_out_of_scope_5";
};

export { security_out_of_scope_5 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_out_of_scope_6 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_out_of_scope_6(inputs);
  if (locale === "de") return de.security_out_of_scope_6(inputs);
  return "security_out_of_scope_6";
};

export { security_out_of_scope_6 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_out_of_scope_7 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_out_of_scope_7(inputs);
  if (locale === "de") return de.security_out_of_scope_7(inputs);
  return "security_out_of_scope_7";
};

export { security_out_of_scope_7 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_out_of_scope_8 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_out_of_scope_8(inputs);
  if (locale === "de") return de.security_out_of_scope_8(inputs);
  return "security_out_of_scope_8";
};

export { security_out_of_scope_8 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_out_of_scope_9 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_out_of_scope_9(inputs);
  if (locale === "de") return de.security_out_of_scope_9(inputs);
  return "security_out_of_scope_9";
};

export { security_out_of_scope_9 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_out_of_scope_10 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_out_of_scope_10(inputs);
  if (locale === "de") return de.security_out_of_scope_10(inputs);
  return "security_out_of_scope_10";
};

export { security_out_of_scope_10 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_out_of_scope_11 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_out_of_scope_11(inputs);
  if (locale === "de") return de.security_out_of_scope_11(inputs);
  return "security_out_of_scope_11";
};

export { security_out_of_scope_11 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_testing_guidelines_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_testing_guidelines_title(inputs);
  if (locale === "de") return de.security_testing_guidelines_title(inputs);
  return "security_testing_guidelines_title";
};

export { security_testing_guidelines_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_testing_guidelines_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_testing_guidelines_1(inputs);
  if (locale === "de") return de.security_testing_guidelines_1(inputs);
  return "security_testing_guidelines_1";
};

export { security_testing_guidelines_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_testing_guidelines_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_testing_guidelines_2(inputs);
  if (locale === "de") return de.security_testing_guidelines_2(inputs);
  return "security_testing_guidelines_2";
};

export { security_testing_guidelines_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_reporting_guidelines_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_reporting_guidelines_title(inputs);
  if (locale === "de") return de.security_reporting_guidelines_title(inputs);
  return "security_reporting_guidelines_title";
};

export { security_reporting_guidelines_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_reporting_guidelines_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_reporting_guidelines_1(inputs);
  if (locale === "de") return de.security_reporting_guidelines_1(inputs);
  return "security_reporting_guidelines_1";
};

export { security_reporting_guidelines_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_reporting_guidelines_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_reporting_guidelines_2(inputs);
  if (locale === "de") return de.security_reporting_guidelines_2(inputs);
  return "security_reporting_guidelines_2";
};

export { security_reporting_guidelines_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_disclosure_guidelines_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_disclosure_guidelines_title(inputs);
  if (locale === "de") return de.security_disclosure_guidelines_title(inputs);
  return "security_disclosure_guidelines_title";
};

export { security_disclosure_guidelines_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_disclosure_guidelines_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_disclosure_guidelines_1(inputs);
  if (locale === "de") return de.security_disclosure_guidelines_1(inputs);
  return "security_disclosure_guidelines_1";
};

export { security_disclosure_guidelines_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_disclosure_guidelines_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_disclosure_guidelines_2(inputs);
  if (locale === "de") return de.security_disclosure_guidelines_2(inputs);
  return "security_disclosure_guidelines_2";
};

export { security_disclosure_guidelines_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_disclosure_guidelines_2_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_disclosure_guidelines_2_1(inputs);
  if (locale === "de") return de.security_disclosure_guidelines_2_1(inputs);
  return "security_disclosure_guidelines_2_1";
};

export { security_disclosure_guidelines_2_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_disclosure_guidelines_2_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_disclosure_guidelines_2_2(inputs);
  if (locale === "de") return de.security_disclosure_guidelines_2_2(inputs);
  return "security_disclosure_guidelines_2_2";
};

export { security_disclosure_guidelines_2_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_disclosure_guidelines_2_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_disclosure_guidelines_2_3(inputs);
  if (locale === "de") return de.security_disclosure_guidelines_2_3(inputs);
  return "security_disclosure_guidelines_2_3";
};

export { security_disclosure_guidelines_2_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_what_we_promise_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_what_we_promise_title(inputs);
  if (locale === "de") return de.security_what_we_promise_title(inputs);
  return "security_what_we_promise_title";
};

export { security_what_we_promise_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_what_we_promise_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_what_we_promise_1(inputs);
  if (locale === "de") return de.security_what_we_promise_1(inputs);
  return "security_what_we_promise_1";
};

export { security_what_we_promise_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_what_we_promise_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_what_we_promise_2(inputs);
  if (locale === "de") return de.security_what_we_promise_2(inputs);
  return "security_what_we_promise_2";
};

export { security_what_we_promise_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_what_we_promise_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_what_we_promise_3(inputs);
  if (locale === "de") return de.security_what_we_promise_3(inputs);
  return "security_what_we_promise_3";
};

export { security_what_we_promise_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_what_we_promise_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_what_we_promise_4(inputs);
  if (locale === "de") return de.security_what_we_promise_4(inputs);
  return "security_what_we_promise_4";
};

export { security_what_we_promise_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_what_we_promise_5 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_what_we_promise_5(inputs);
  if (locale === "de") return de.security_what_we_promise_5(inputs);
  return "security_what_we_promise_5";
};

export { security_what_we_promise_5 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const security_closing = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.security_closing(inputs);
  if (locale === "de") return de.security_closing(inputs);
  return "security_closing";
};

export { security_closing };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const sla_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.sla_title(inputs);
  if (locale === "de") return de.sla_title(inputs);
  return "sla_title";
};

export { sla_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const enterprise_platform_uptime_sla = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.enterprise_platform_uptime_sla(inputs);
  if (locale === "de") return de.enterprise_platform_uptime_sla(inputs);
  return "enterprise_platform_uptime_sla";
};

export { enterprise_platform_uptime_sla };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const sla_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.sla_intro(inputs);
  if (locale === "de") return de.sla_intro(inputs);
  return "sla_intro";
};

export { sla_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const uptime_commitment_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.uptime_commitment_title(inputs);
  if (locale === "de") return de.uptime_commitment_title(inputs);
  return "uptime_commitment_title";
};

export { uptime_commitment_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const uptime_commitment_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.uptime_commitment_desc(inputs);
  if (locale === "de") return de.uptime_commitment_desc(inputs);
  return "uptime_commitment_desc";
};

export { uptime_commitment_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const service_credits_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.service_credits_title(inputs);
  if (locale === "de") return de.service_credits_title(inputs);
  return "service_credits_title";
};

export { service_credits_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const service_credits_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.service_credits_desc(inputs);
  if (locale === "de") return de.service_credits_desc(inputs);
  return "service_credits_desc";
};

export { service_credits_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const actual_availability = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.actual_availability(inputs);
  if (locale === "de") return de.actual_availability(inputs);
  return "actual_availability";
};

export { actual_availability };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const credit_percentage = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.credit_percentage(inputs);
  if (locale === "de") return de.credit_percentage(inputs);
  return "credit_percentage";
};

export { credit_percentage };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const availability_99_98 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.availability_99_98(inputs);
  if (locale === "de") return de.availability_99_98(inputs);
  return "availability_99_98";
};

export { availability_99_98 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const credit_10_percent = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.credit_10_percent(inputs);
  if (locale === "de") return de.credit_10_percent(inputs);
  return "credit_10_percent";
};

export { credit_10_percent };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const availability_98_97 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.availability_98_97(inputs);
  if (locale === "de") return de.availability_98_97(inputs);
  return "availability_98_97";
};

export { availability_98_97 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const credit_15_percent = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.credit_15_percent(inputs);
  if (locale === "de") return de.credit_15_percent(inputs);
  return "credit_15_percent";
};

export { credit_15_percent };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const availability_97_95 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.availability_97_95(inputs);
  if (locale === "de") return de.availability_97_95(inputs);
  return "availability_97_95";
};

export { availability_97_95 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const credit_20_percent = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.credit_20_percent(inputs);
  if (locale === "de") return de.credit_20_percent(inputs);
  return "credit_20_percent";
};

export { credit_20_percent };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const availability_below_95 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.availability_below_95(inputs);
  if (locale === "de") return de.availability_below_95(inputs);
  return "availability_below_95";
};

export { availability_below_95 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const credit_30_percent = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.credit_30_percent(inputs);
  if (locale === "de") return de.credit_30_percent(inputs);
  return "credit_30_percent";
};

export { credit_30_percent };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const credit_requests_payment_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.credit_requests_payment_title(inputs);
  if (locale === "de") return de.credit_requests_payment_title(inputs);
  return "credit_requests_payment_title";
};

export { credit_requests_payment_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const credit_requests_payment_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.credit_requests_payment_desc(inputs);
  if (locale === "de") return de.credit_requests_payment_desc(inputs);
  return "credit_requests_payment_desc";
};

export { credit_requests_payment_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const four_definitions_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.four_definitions_title(inputs);
  if (locale === "de") return de.four_definitions_title(inputs);
  return "four_definitions_title";
};

export { four_definitions_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const definitions_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.definitions_desc(inputs);
  if (locale === "de") return de.definitions_desc(inputs);
  return "definitions_desc";
};

export { definitions_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const scheduled_availability_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.scheduled_availability_title(inputs);
  if (locale === "de") return de.scheduled_availability_title(inputs);
  return "scheduled_availability_title";
};

export { scheduled_availability_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const scheduled_availability_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.scheduled_availability_desc(inputs);
  if (locale === "de") return de.scheduled_availability_desc(inputs);
  return "scheduled_availability_desc";
};

export { scheduled_availability_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const unscheduled_downtime_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.unscheduled_downtime_title(inputs);
  if (locale === "de") return de.unscheduled_downtime_title(inputs);
  return "unscheduled_downtime_title";
};

export { unscheduled_downtime_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const unscheduled_downtime_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.unscheduled_downtime_desc(inputs);
  if (locale === "de") return de.unscheduled_downtime_desc(inputs);
  return "unscheduled_downtime_desc";
};

export { unscheduled_downtime_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const actual_availability_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.actual_availability_title(inputs);
  if (locale === "de") return de.actual_availability_title(inputs);
  return "actual_availability_title";
};

export { actual_availability_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const actual_availability_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.actual_availability_desc(inputs);
  if (locale === "de") return de.actual_availability_desc(inputs);
  return "actual_availability_desc";
};

export { actual_availability_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const production_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.production_title(inputs);
  if (locale === "de") return de.production_title(inputs);
  return "production_title";
};

export { production_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const production_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.production_desc(inputs);
  if (locale === "de") return de.production_desc(inputs);
  return "production_desc";
};

export { production_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const non_production_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.non_production_desc(inputs);
  if (locale === "de") return de.non_production_desc(inputs);
  return "non_production_desc";
};

export { non_production_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const sla_exclusions_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.sla_exclusions_title(inputs);
  if (locale === "de") return de.sla_exclusions_title(inputs);
  return "sla_exclusions_title";
};

export { sla_exclusions_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const general_service_exclusions_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.general_service_exclusions_title(inputs);
  if (locale === "de") return de.general_service_exclusions_title(inputs);
  return "general_service_exclusions_title";
};

export { general_service_exclusions_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const general_service_exclusion_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.general_service_exclusion_1(inputs);
  if (locale === "de") return de.general_service_exclusion_1(inputs);
  return "general_service_exclusion_1";
};

export { general_service_exclusion_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const general_service_exclusion_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.general_service_exclusion_2(inputs);
  if (locale === "de") return de.general_service_exclusion_2(inputs);
  return "general_service_exclusion_2";
};

export { general_service_exclusion_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const general_service_exclusion_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.general_service_exclusion_3(inputs);
  if (locale === "de") return de.general_service_exclusion_3(inputs);
  return "general_service_exclusion_3";
};

export { general_service_exclusion_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const general_service_exclusion_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.general_service_exclusion_4(inputs);
  if (locale === "de") return de.general_service_exclusion_4(inputs);
  return "general_service_exclusion_4";
};

export { general_service_exclusion_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const general_service_exclusion_5 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.general_service_exclusion_5(inputs);
  if (locale === "de") return de.general_service_exclusion_5(inputs);
  return "general_service_exclusion_5";
};

export { general_service_exclusion_5 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const general_service_exclusion_6 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.general_service_exclusion_6(inputs);
  if (locale === "de") return de.general_service_exclusion_6(inputs);
  return "general_service_exclusion_6";
};

export { general_service_exclusion_6 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const general_service_exclusion_7 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.general_service_exclusion_7(inputs);
  if (locale === "de") return de.general_service_exclusion_7(inputs);
  return "general_service_exclusion_7";
};

export { general_service_exclusion_7 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const live_update_sla_exclusions_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.live_update_sla_exclusions_title(inputs);
  if (locale === "de") return de.live_update_sla_exclusions_title(inputs);
  return "live_update_sla_exclusions_title";
};

export { live_update_sla_exclusions_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const live_update_exclusion_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.live_update_exclusion_1(inputs);
  if (locale === "de") return de.live_update_exclusion_1(inputs);
  return "live_update_exclusion_1";
};

export { live_update_exclusion_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const live_update_exclusion_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.live_update_exclusion_2(inputs);
  if (locale === "de") return de.live_update_exclusion_2(inputs);
  return "live_update_exclusion_2";
};

export { live_update_exclusion_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const live_update_exclusion_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.live_update_exclusion_3(inputs);
  if (locale === "de") return de.live_update_exclusion_3(inputs);
  return "live_update_exclusion_3";
};

export { live_update_exclusion_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const live_update_exclusion_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.live_update_exclusion_4(inputs);
  if (locale === "de") return de.live_update_exclusion_4(inputs);
  return "live_update_exclusion_4";
};

export { live_update_exclusion_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const live_update_exclusion_5 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.live_update_exclusion_5(inputs);
  if (locale === "de") return de.live_update_exclusion_5(inputs);
  return "live_update_exclusion_5";
};

export { live_update_exclusion_5 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_title(inputs);
  if (locale === "de") return de.support_title(inputs);
  return "support_title";
};

export { support_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_desc(inputs);
  if (locale === "de") return de.support_desc(inputs);
  return "support_desc";
};

export { support_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const urgent_support_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.urgent_support_title(inputs);
  if (locale === "de") return de.urgent_support_title(inputs);
  return "urgent_support_title";
};

export { urgent_support_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const urgent_support_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.urgent_support_subtitle(inputs);
  if (locale === "de") return de.urgent_support_subtitle(inputs);
  return "urgent_support_subtitle";
};

export { urgent_support_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const urgent_support_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.urgent_support_desc(inputs);
  if (locale === "de") return de.urgent_support_desc(inputs);
  return "urgent_support_desc";
};

export { urgent_support_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const high_support_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.high_support_title(inputs);
  if (locale === "de") return de.high_support_title(inputs);
  return "high_support_title";
};

export { high_support_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const high_support_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.high_support_subtitle(inputs);
  if (locale === "de") return de.high_support_subtitle(inputs);
  return "high_support_subtitle";
};

export { high_support_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const high_support_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.high_support_desc(inputs);
  if (locale === "de") return de.high_support_desc(inputs);
  return "high_support_desc";
};

export { high_support_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const normal_support_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.normal_support_title(inputs);
  if (locale === "de") return de.normal_support_title(inputs);
  return "normal_support_title";
};

export { normal_support_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const normal_support_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.normal_support_subtitle(inputs);
  if (locale === "de") return de.normal_support_subtitle(inputs);
  return "normal_support_subtitle";
};

export { normal_support_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const normal_support_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.normal_support_desc(inputs);
  if (locale === "de") return de.normal_support_desc(inputs);
  return "normal_support_desc";
};

export { normal_support_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const low_support_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.low_support_title(inputs);
  if (locale === "de") return de.low_support_title(inputs);
  return "low_support_title";
};

export { low_support_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const low_support_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.low_support_subtitle(inputs);
  if (locale === "de") return de.low_support_subtitle(inputs);
  return "low_support_subtitle";
};

export { low_support_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const low_support_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.low_support_desc(inputs);
  if (locale === "de") return de.low_support_desc(inputs);
  return "low_support_desc";
};

export { low_support_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const target_initial_response_times_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.target_initial_response_times_title(inputs);
  if (locale === "de") return de.target_initial_response_times_title(inputs);
  return "target_initial_response_times_title";
};

export { target_initial_response_times_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const severity_level = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.severity_level(inputs);
  if (locale === "de") return de.severity_level(inputs);
  return "severity_level";
};

export { severity_level };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const team_plan = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.team_plan(inputs);
  if (locale === "de") return de.team_plan(inputs);
  return "team_plan";
};

export { team_plan };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const pay_as_you_go_plan = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.pay_as_you_go_plan(inputs);
  if (locale === "de") return de.pay_as_you_go_plan(inputs);
  return "pay_as_you_go_plan";
};

export { pay_as_you_go_plan };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const priority_plus_plan = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.priority_plus_plan(inputs);
  if (locale === "de") return de.priority_plus_plan(inputs);
  return "priority_plus_plan";
};

export { priority_plus_plan };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const urgent_team_response = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.urgent_team_response(inputs);
  if (locale === "de") return de.urgent_team_response(inputs);
  return "urgent_team_response";
};

export { urgent_team_response };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const urgent_payg_response = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.urgent_payg_response(inputs);
  if (locale === "de") return de.urgent_payg_response(inputs);
  return "urgent_payg_response";
};

export { urgent_payg_response };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const urgent_priority_response = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.urgent_priority_response(inputs);
  if (locale === "de") return de.urgent_priority_response(inputs);
  return "urgent_priority_response";
};

export { urgent_priority_response };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const high_team_response = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.high_team_response(inputs);
  if (locale === "de") return de.high_team_response(inputs);
  return "high_team_response";
};

export { high_team_response };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const high_payg_response = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.high_payg_response(inputs);
  if (locale === "de") return de.high_payg_response(inputs);
  return "high_payg_response";
};

export { high_payg_response };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const high_priority_response = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.high_priority_response(inputs);
  if (locale === "de") return de.high_priority_response(inputs);
  return "high_priority_response";
};

export { high_priority_response };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const normal_team_response = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.normal_team_response(inputs);
  if (locale === "de") return de.normal_team_response(inputs);
  return "normal_team_response";
};

export { normal_team_response };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const normal_payg_response = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.normal_payg_response(inputs);
  if (locale === "de") return de.normal_payg_response(inputs);
  return "normal_payg_response";
};

export { normal_payg_response };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const normal_priority_response = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.normal_priority_response(inputs);
  if (locale === "de") return de.normal_priority_response(inputs);
  return "normal_priority_response";
};

export { normal_priority_response };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const low_team_response = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.low_team_response(inputs);
  if (locale === "de") return de.low_team_response(inputs);
  return "low_team_response";
};

export { low_team_response };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const low_payg_response = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.low_payg_response(inputs);
  if (locale === "de") return de.low_payg_response(inputs);
  return "low_payg_response";
};

export { low_payg_response };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const low_priority_response = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.low_priority_response(inputs);
  if (locale === "de") return de.low_priority_response(inputs);
  return "low_priority_response";
};

export { low_priority_response };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const business_hours_note = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.business_hours_note(inputs);
  if (locale === "de") return de.business_hours_note(inputs);
  return "business_hours_note";
};

export { business_hours_note };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_title(inputs);
  if (locale === "de") return de.support_policy_title(inputs);
  return "support_policy_title";
};

export { support_policy_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_intro(inputs);
  if (locale === "de") return de.support_policy_intro(inputs);
  return "support_policy_intro";
};

export { support_policy_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_scope_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_scope_title(inputs);
  if (locale === "de") return de.support_policy_scope_title(inputs);
  return "support_policy_scope_title";
};

export { support_policy_scope_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_scope_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_scope_intro(inputs);
  if (locale === "de") return de.support_policy_scope_intro(inputs);
  return "support_policy_scope_intro";
};

export { support_policy_scope_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_configuration_issues_title = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.support_policy_configuration_issues_title(inputs);
  if (locale === "de")
    return de.support_policy_configuration_issues_title(inputs);
  return "support_policy_configuration_issues_title";
};

export { support_policy_configuration_issues_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_configuration_issues_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_configuration_issues_1(inputs);
  if (locale === "de") return de.support_policy_configuration_issues_1(inputs);
  return "support_policy_configuration_issues_1";
};

export { support_policy_configuration_issues_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_configuration_issues_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_configuration_issues_2(inputs);
  if (locale === "de") return de.support_policy_configuration_issues_2(inputs);
  return "support_policy_configuration_issues_2";
};

export { support_policy_configuration_issues_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_configuration_issues_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_configuration_issues_3(inputs);
  if (locale === "de") return de.support_policy_configuration_issues_3(inputs);
  return "support_policy_configuration_issues_3";
};

export { support_policy_configuration_issues_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_troubleshooting_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_troubleshooting_title(inputs);
  if (locale === "de") return de.support_policy_troubleshooting_title(inputs);
  return "support_policy_troubleshooting_title";
};

export { support_policy_troubleshooting_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_troubleshooting_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_troubleshooting_1(inputs);
  if (locale === "de") return de.support_policy_troubleshooting_1(inputs);
  return "support_policy_troubleshooting_1";
};

export { support_policy_troubleshooting_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_troubleshooting_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_troubleshooting_2(inputs);
  if (locale === "de") return de.support_policy_troubleshooting_2(inputs);
  return "support_policy_troubleshooting_2";
};

export { support_policy_troubleshooting_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_troubleshooting_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_troubleshooting_3(inputs);
  if (locale === "de") return de.support_policy_troubleshooting_3(inputs);
  return "support_policy_troubleshooting_3";
};

export { support_policy_troubleshooting_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_not_covered_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_not_covered_title(inputs);
  if (locale === "de") return de.support_policy_not_covered_title(inputs);
  return "support_policy_not_covered_title";
};

export { support_policy_not_covered_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_not_covered_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_not_covered_intro(inputs);
  if (locale === "de") return de.support_policy_not_covered_intro(inputs);
  return "support_policy_not_covered_intro";
};

export { support_policy_not_covered_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_not_covered_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_not_covered_1(inputs);
  if (locale === "de") return de.support_policy_not_covered_1(inputs);
  return "support_policy_not_covered_1";
};

export { support_policy_not_covered_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_not_covered_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_not_covered_2(inputs);
  if (locale === "de") return de.support_policy_not_covered_2(inputs);
  return "support_policy_not_covered_2";
};

export { support_policy_not_covered_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_not_covered_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_not_covered_3(inputs);
  if (locale === "de") return de.support_policy_not_covered_3(inputs);
  return "support_policy_not_covered_3";
};

export { support_policy_not_covered_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_billing_support = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_billing_support(inputs);
  if (locale === "de") return de.support_policy_billing_support(inputs);
  return "support_policy_billing_support";
};

export { support_policy_billing_support };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_limited_support_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_limited_support_intro(inputs);
  if (locale === "de") return de.support_policy_limited_support_intro(inputs);
  return "support_policy_limited_support_intro";
};

export { support_policy_limited_support_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_limited_support_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_limited_support_1(inputs);
  if (locale === "de") return de.support_policy_limited_support_1(inputs);
  return "support_policy_limited_support_1";
};

export { support_policy_limited_support_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_limited_support_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_limited_support_2(inputs);
  if (locale === "de") return de.support_policy_limited_support_2(inputs);
  return "support_policy_limited_support_2";
};

export { support_policy_limited_support_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_limited_support_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_limited_support_3(inputs);
  if (locale === "de") return de.support_policy_limited_support_3(inputs);
  return "support_policy_limited_support_3";
};

export { support_policy_limited_support_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_official_channels_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_official_channels_title(inputs);
  if (locale === "de") return de.support_policy_official_channels_title(inputs);
  return "support_policy_official_channels_title";
};

export { support_policy_official_channels_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_official_channels_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_official_channels_1(inputs);
  if (locale === "de") return de.support_policy_official_channels_1(inputs);
  return "support_policy_official_channels_1";
};

export { support_policy_official_channels_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_official_channels_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_official_channels_2(inputs);
  if (locale === "de") return de.support_policy_official_channels_2(inputs);
  return "support_policy_official_channels_2";
};

export { support_policy_official_channels_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_official_channels_note = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_official_channels_note(inputs);
  if (locale === "de") return de.support_policy_official_channels_note(inputs);
  return "support_policy_official_channels_note";
};

export { support_policy_official_channels_note };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_code_debugging = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_code_debugging(inputs);
  if (locale === "de") return de.support_policy_code_debugging(inputs);
  return "support_policy_code_debugging";
};

export { support_policy_code_debugging };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_community_response = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_community_response(inputs);
  if (locale === "de") return de.support_policy_community_response(inputs);
  return "support_policy_community_response";
};

export { support_policy_community_response };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_team_participation = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_team_participation(inputs);
  if (locale === "de") return de.support_policy_team_participation(inputs);
  return "support_policy_team_participation";
};

export { support_policy_team_participation };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_sla_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_sla_title(inputs);
  if (locale === "de") return de.support_policy_sla_title(inputs);
  return "support_policy_sla_title";
};

export { support_policy_sla_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_sla_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_sla_desc(inputs);
  if (locale === "de") return de.support_policy_sla_desc(inputs);
  return "support_policy_sla_desc";
};

export { support_policy_sla_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_proactive_monitoring_title = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.support_policy_proactive_monitoring_title(inputs);
  if (locale === "de")
    return de.support_policy_proactive_monitoring_title(inputs);
  return "support_policy_proactive_monitoring_title";
};

export { support_policy_proactive_monitoring_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_proactive_monitoring_desc = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.support_policy_proactive_monitoring_desc(inputs);
  if (locale === "de")
    return de.support_policy_proactive_monitoring_desc(inputs);
  return "support_policy_proactive_monitoring_desc";
};

export { support_policy_proactive_monitoring_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_premium_support_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_premium_support_title(inputs);
  if (locale === "de") return de.support_policy_premium_support_title(inputs);
  return "support_policy_premium_support_title";
};

export { support_policy_premium_support_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const support_policy_premium_support_desc = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.support_policy_premium_support_desc(inputs);
  if (locale === "de") return de.support_policy_premium_support_desc(inputs);
  return "support_policy_premium_support_desc";
};

export { support_policy_premium_support_desc };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const disclaimer_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.disclaimer_title(inputs);
  if (locale === "de") return de.disclaimer_title(inputs);
  return "disclaimer_title";
};

export { disclaimer_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const disclaimer_last_updated = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.disclaimer_last_updated(inputs);
  if (locale === "de") return de.disclaimer_last_updated(inputs);
  return "disclaimer_last_updated";
};

export { disclaimer_last_updated };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const interpretation_and_definitions_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.interpretation_and_definitions_title(inputs);
  if (locale === "de") return de.interpretation_and_definitions_title(inputs);
  return "interpretation_and_definitions_title";
};

export { interpretation_and_definitions_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const interpretation_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.interpretation_title(inputs);
  if (locale === "de") return de.interpretation_title(inputs);
  return "interpretation_title";
};

export { interpretation_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const interpretation_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.interpretation_text(inputs);
  if (locale === "de") return de.interpretation_text(inputs);
  return "interpretation_text";
};

export { interpretation_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const definitions_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.definitions_title(inputs);
  if (locale === "de") return de.definitions_title(inputs);
  return "definitions_title";
};

export { definitions_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const definitions_purpose = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.definitions_purpose(inputs);
  if (locale === "de") return de.definitions_purpose(inputs);
  return "definitions_purpose";
};

export { definitions_purpose };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const company_definition = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.company_definition(inputs);
  if (locale === "de") return de.company_definition(inputs);
  return "company_definition";
};

export { company_definition };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const service_definition = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.service_definition(inputs);
  if (locale === "de") return de.service_definition(inputs);
  return "service_definition";
};

export { service_definition };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const you_definition = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.you_definition(inputs);
  if (locale === "de") return de.you_definition(inputs);
  return "you_definition";
};

export { you_definition };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{ { brand : NonNullable<unknown> }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const application_definition = (inputs, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.application_definition(inputs);
  if (locale === "de") return de.application_definition(inputs);
  return "application_definition";
};

export { application_definition };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const disclaimer_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.disclaimer_text(inputs);
  if (locale === "de") return de.disclaimer_text(inputs);
  return "disclaimer_text";
};

export { disclaimer_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const company_no_responsibility = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.company_no_responsibility(inputs);
  if (locale === "de") return de.company_no_responsibility(inputs);
  return "company_no_responsibility";
};

export { company_no_responsibility };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const company_no_liability = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.company_no_liability(inputs);
  if (locale === "de") return de.company_no_liability(inputs);
  return "company_no_liability";
};

export { company_no_liability };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const no_virus_warranty = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.no_virus_warranty(inputs);
  if (locale === "de") return de.no_virus_warranty(inputs);
  return "no_virus_warranty";
};

export { no_virus_warranty };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const external_links_disclaimer_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.external_links_disclaimer_title(inputs);
  if (locale === "de") return de.external_links_disclaimer_title(inputs);
  return "external_links_disclaimer_title";
};

export { external_links_disclaimer_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const external_links_disclaimer_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.external_links_disclaimer_text(inputs);
  if (locale === "de") return de.external_links_disclaimer_text(inputs);
  return "external_links_disclaimer_text";
};

export { external_links_disclaimer_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const external_links_no_guarantee = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.external_links_no_guarantee(inputs);
  if (locale === "de") return de.external_links_no_guarantee(inputs);
  return "external_links_no_guarantee";
};

export { external_links_no_guarantee };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const errors_and_omissions_disclaimer_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.errors_and_omissions_disclaimer_title(inputs);
  if (locale === "de") return de.errors_and_omissions_disclaimer_title(inputs);
  return "errors_and_omissions_disclaimer_title";
};

export { errors_and_omissions_disclaimer_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const errors_and_omissions_disclaimer_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.errors_and_omissions_disclaimer_text(inputs);
  if (locale === "de") return de.errors_and_omissions_disclaimer_text(inputs);
  return "errors_and_omissions_disclaimer_text";
};

export { errors_and_omissions_disclaimer_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const company_not_responsible = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.company_not_responsible(inputs);
  if (locale === "de") return de.company_not_responsible(inputs);
  return "company_not_responsible";
};

export { company_not_responsible };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const fair_use_disclaimer_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.fair_use_disclaimer_title(inputs);
  if (locale === "de") return de.fair_use_disclaimer_title(inputs);
  return "fair_use_disclaimer_title";
};

export { fair_use_disclaimer_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const fair_use_disclaimer_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.fair_use_disclaimer_text(inputs);
  if (locale === "de") return de.fair_use_disclaimer_text(inputs);
  return "fair_use_disclaimer_text";
};

export { fair_use_disclaimer_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const fair_use_belief = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.fair_use_belief(inputs);
  if (locale === "de") return de.fair_use_belief(inputs);
  return "fair_use_belief";
};

export { fair_use_belief };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const copyright_permission = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.copyright_permission(inputs);
  if (locale === "de") return de.copyright_permission(inputs);
  return "copyright_permission";
};

export { copyright_permission };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const views_expressed_disclaimer_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.views_expressed_disclaimer_title(inputs);
  if (locale === "de") return de.views_expressed_disclaimer_title(inputs);
  return "views_expressed_disclaimer_title";
};

export { views_expressed_disclaimer_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const views_expressed_disclaimer_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.views_expressed_disclaimer_text(inputs);
  if (locale === "de") return de.views_expressed_disclaimer_text(inputs);
  return "views_expressed_disclaimer_text";
};

export { views_expressed_disclaimer_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const user_comments_responsibility = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.user_comments_responsibility(inputs);
  if (locale === "de") return de.user_comments_responsibility(inputs);
  return "user_comments_responsibility";
};

export { user_comments_responsibility };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const no_responsibility_disclaimer_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.no_responsibility_disclaimer_title(inputs);
  if (locale === "de") return de.no_responsibility_disclaimer_title(inputs);
  return "no_responsibility_disclaimer_title";
};

export { no_responsibility_disclaimer_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const no_responsibility_disclaimer_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.no_responsibility_disclaimer_text(inputs);
  if (locale === "de") return de.no_responsibility_disclaimer_text(inputs);
  return "no_responsibility_disclaimer_text";
};

export { no_responsibility_disclaimer_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const company_no_liability_for_access = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.company_no_liability_for_access(inputs);
  if (locale === "de") return de.company_no_liability_for_access(inputs);
  return "company_no_liability_for_access";
};

export { company_no_liability_for_access };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const use_at_your_own_risk_disclaimer_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.use_at_your_own_risk_disclaimer_title(inputs);
  if (locale === "de") return de.use_at_your_own_risk_disclaimer_title(inputs);
  return "use_at_your_own_risk_disclaimer_title";
};

export { use_at_your_own_risk_disclaimer_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const use_at_your_own_risk_disclaimer_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.use_at_your_own_risk_disclaimer_text(inputs);
  if (locale === "de") return de.use_at_your_own_risk_disclaimer_text(inputs);
  return "use_at_your_own_risk_disclaimer_text";
};

export { use_at_your_own_risk_disclaimer_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const company_no_liability_for_decisions = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.company_no_liability_for_decisions(inputs);
  if (locale === "de") return de.company_no_liability_for_decisions(inputs);
  return "company_no_liability_for_decisions";
};

export { company_no_liability_for_decisions };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const contact_us_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.contact_us_title(inputs);
  if (locale === "de") return de.contact_us_title(inputs);
  return "contact_us_title";
};

export { contact_us_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const contact_us_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.contact_us_text(inputs);
  if (locale === "de") return de.contact_us_text(inputs);
  return "contact_us_text";
};

export { contact_us_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const contact_us_website = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.contact_us_website(inputs);
  if (locale === "de") return de.contact_us_website(inputs);
  return "contact_us_website";
};

export { contact_us_website };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_capgo_security = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_capgo_security(inputs);
  if (locale === "de") return de.trust_capgo_security(inputs);
  return "trust_capgo_security";
};

export { trust_capgo_security };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_move_forward_with_confidence = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_move_forward_with_confidence(inputs);
  if (locale === "de") return de.trust_move_forward_with_confidence(inputs);
  return "trust_move_forward_with_confidence";
};

export { trust_move_forward_with_confidence };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_product_security = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_product_security(inputs);
  if (locale === "de") return de.trust_product_security(inputs);
  return "trust_product_security";
};

export { trust_product_security };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_source_code_protection = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_source_code_protection(inputs);
  if (locale === "de") return de.trust_source_code_protection(inputs);
  return "trust_source_code_protection";
};

export { trust_source_code_protection };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_source_code_vulnerabilities = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_source_code_vulnerabilities(inputs);
  if (locale === "de") return de.trust_source_code_vulnerabilities(inputs);
  return "trust_source_code_vulnerabilities";
};

export { trust_source_code_vulnerabilities };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_data_security = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_data_security(inputs);
  if (locale === "de") return de.trust_data_security(inputs);
  return "trust_data_security";
};

export { trust_data_security };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_encryption_communication = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_encryption_communication(inputs);
  if (locale === "de") return de.trust_encryption_communication(inputs);
  return "trust_encryption_communication";
};

export { trust_encryption_communication };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_data_traffic_encrypted = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_data_traffic_encrypted(inputs);
  if (locale === "de") return de.trust_data_traffic_encrypted(inputs);
  return "trust_data_traffic_encrypted";
};

export { trust_data_traffic_encrypted };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_source_code_encryption = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_source_code_encryption(inputs);
  if (locale === "de") return de.trust_source_code_encryption(inputs);
  return "trust_source_code_encryption";
};

export { trust_source_code_encryption };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_source_code_encrypted_in_transit = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_source_code_encrypted_in_transit(inputs);
  if (locale === "de") return de.trust_source_code_encrypted_in_transit(inputs);
  return "trust_source_code_encrypted_in_transit";
};

export { trust_source_code_encrypted_in_transit };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_data_backup = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_data_backup(inputs);
  if (locale === "de") return de.trust_data_backup(inputs);
  return "trust_data_backup";
};

export { trust_data_backup };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_data_backup_policy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_data_backup_policy(inputs);
  if (locale === "de") return de.trust_data_backup_policy(inputs);
  return "trust_data_backup_policy";
};

export { trust_data_backup_policy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_network_security = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_network_security(inputs);
  if (locale === "de") return de.trust_network_security(inputs);
  return "trust_network_security";
};

export { trust_network_security };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_architecture = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_architecture(inputs);
  if (locale === "de") return de.trust_architecture(inputs);
  return "trust_architecture";
};

export { trust_architecture };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_architecture_layers = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_architecture_layers(inputs);
  if (locale === "de") return de.trust_architecture_layers(inputs);
  return "trust_architecture_layers";
};

export { trust_architecture_layers };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_application_security = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_application_security(inputs);
  if (locale === "de") return de.trust_application_security(inputs);
  return "trust_application_security";
};

export { trust_application_security };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_secure_coding = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_secure_coding(inputs);
  if (locale === "de") return de.trust_secure_coding(inputs);
  return "trust_secure_coding";
};

export { trust_secure_coding };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_code_review = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_code_review(inputs);
  if (locale === "de") return de.trust_code_review(inputs);
  return "trust_code_review";
};

export { trust_code_review };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_site_reliability = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_site_reliability(inputs);
  if (locale === "de") return de.trust_site_reliability(inputs);
  return "trust_site_reliability";
};

export { trust_site_reliability };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_serverless_infrastructure = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_serverless_infrastructure(inputs);
  if (locale === "de") return de.trust_serverless_infrastructure(inputs);
  return "trust_serverless_infrastructure";
};

export { trust_serverless_infrastructure };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_application_penetration_testing = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_application_penetration_testing(inputs);
  if (locale === "de") return de.trust_application_penetration_testing(inputs);
  return "trust_application_penetration_testing";
};

export { trust_application_penetration_testing };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_third_party_testing = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_third_party_testing(inputs);
  if (locale === "de") return de.trust_third_party_testing(inputs);
  return "trust_third_party_testing";
};

export { trust_third_party_testing };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_business_security = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_business_security(inputs);
  if (locale === "de") return de.trust_business_security(inputs);
  return "trust_business_security";
};

export { trust_business_security };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_background_checks = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_background_checks(inputs);
  if (locale === "de") return de.trust_background_checks(inputs);
  return "trust_background_checks";
};

export { trust_background_checks };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_access_to_production_database = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_access_to_production_database(inputs);
  if (locale === "de") return de.trust_access_to_production_database(inputs);
  return "trust_access_to_production_database";
};

export { trust_access_to_production_database };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_security_awareness = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_security_awareness(inputs);
  if (locale === "de") return de.trust_security_awareness(inputs);
  return "trust_security_awareness";
};

export { trust_security_awareness };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_security_training = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_security_training(inputs);
  if (locale === "de") return de.trust_security_training(inputs);
  return "trust_security_training";
};

export { trust_security_training };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_security_coding_education = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_security_coding_education(inputs);
  if (locale === "de") return de.trust_security_coding_education(inputs);
  return "trust_security_coding_education";
};

export { trust_security_coding_education };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_open_source_security = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_open_source_security(inputs);
  if (locale === "de") return de.trust_open_source_security(inputs);
  return "trust_open_source_security";
};

export { trust_open_source_security };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_partner_management = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_partner_management(inputs);
  if (locale === "de") return de.trust_partner_management(inputs);
  return "trust_partner_management";
};

export { trust_partner_management };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_soc2_certification = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_soc2_certification(inputs);
  if (locale === "de") return de.trust_soc2_certification(inputs);
  return "trust_soc2_certification";
};

export { trust_soc2_certification };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_incident_response = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_incident_response(inputs);
  if (locale === "de") return de.trust_incident_response(inputs);
  return "trust_incident_response";
};

export { trust_incident_response };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_dedicated_incident_response = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_dedicated_incident_response(inputs);
  if (locale === "de") return de.trust_dedicated_incident_response(inputs);
  return "trust_dedicated_incident_response";
};

export { trust_dedicated_incident_response };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_incident_response_policy_plan = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_incident_response_policy_plan(inputs);
  if (locale === "de") return de.trust_incident_response_policy_plan(inputs);
  return "trust_incident_response_policy_plan";
};

export { trust_incident_response_policy_plan };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_incident_response_policy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_incident_response_policy(inputs);
  if (locale === "de") return de.trust_incident_response_policy(inputs);
  return "trust_incident_response_policy";
};

export { trust_incident_response_policy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_communication = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_communication(inputs);
  if (locale === "de") return de.trust_communication(inputs);
  return "trust_communication";
};

export { trust_communication };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const trust_system_wide_issues_notification = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.trust_system_wide_issues_notification(inputs);
  if (locale === "de") return de.trust_system_wide_issues_notification(inputs);
  return "trust_system_wide_issues_notification";
};

export { trust_system_wide_issues_notification };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_title(inputs);
  if (locale === "de") return de.tos_title(inputs);
  return "tos_title";
};

export { tos_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_last_updated = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_last_updated(inputs);
  if (locale === "de") return de.tos_last_updated(inputs);
  return "tos_last_updated";
};

export { tos_last_updated };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_please_read = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_please_read(inputs);
  if (locale === "de") return de.tos_please_read(inputs);
  return "tos_please_read";
};

export { tos_please_read };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_interpretation_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_interpretation_title(inputs);
  if (locale === "de") return de.tos_interpretation_title(inputs);
  return "tos_interpretation_title";
};

export { tos_interpretation_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_interpretation_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_interpretation_subtitle(inputs);
  if (locale === "de") return de.tos_interpretation_subtitle(inputs);
  return "tos_interpretation_subtitle";
};

export { tos_interpretation_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_interpretation_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_interpretation_text(inputs);
  if (locale === "de") return de.tos_interpretation_text(inputs);
  return "tos_interpretation_text";
};

export { tos_interpretation_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_definitions_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_definitions_subtitle(inputs);
  if (locale === "de") return de.tos_definitions_subtitle(inputs);
  return "tos_definitions_subtitle";
};

export { tos_definitions_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_definitions_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_definitions_intro(inputs);
  if (locale === "de") return de.tos_definitions_intro(inputs);
  return "tos_definitions_intro";
};

export { tos_definitions_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_definition_application = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_definition_application(inputs);
  if (locale === "de") return de.tos_definition_application(inputs);
  return "tos_definition_application";
};

export { tos_definition_application };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_definition_application_store = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_definition_application_store(inputs);
  if (locale === "de") return de.tos_definition_application_store(inputs);
  return "tos_definition_application_store";
};

export { tos_definition_application_store };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_definition_affiliate = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_definition_affiliate(inputs);
  if (locale === "de") return de.tos_definition_affiliate(inputs);
  return "tos_definition_affiliate";
};

export { tos_definition_affiliate };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_definition_account = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_definition_account(inputs);
  if (locale === "de") return de.tos_definition_account(inputs);
  return "tos_definition_account";
};

export { tos_definition_account };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_definition_country = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_definition_country(inputs);
  if (locale === "de") return de.tos_definition_country(inputs);
  return "tos_definition_country";
};

export { tos_definition_country };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_definition_company = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_definition_company(inputs);
  if (locale === "de") return de.tos_definition_company(inputs);
  return "tos_definition_company";
};

export { tos_definition_company };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_definition_device = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_definition_device(inputs);
  if (locale === "de") return de.tos_definition_device(inputs);
  return "tos_definition_device";
};

export { tos_definition_device };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_definition_feedback = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_definition_feedback(inputs);
  if (locale === "de") return de.tos_definition_feedback(inputs);
  return "tos_definition_feedback";
};

export { tos_definition_feedback };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_definition_free_trial = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_definition_free_trial(inputs);
  if (locale === "de") return de.tos_definition_free_trial(inputs);
  return "tos_definition_free_trial";
};

export { tos_definition_free_trial };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_definition_in_app_purchase = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_definition_in_app_purchase(inputs);
  if (locale === "de") return de.tos_definition_in_app_purchase(inputs);
  return "tos_definition_in_app_purchase";
};

export { tos_definition_in_app_purchase };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_definition_service = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_definition_service(inputs);
  if (locale === "de") return de.tos_definition_service(inputs);
  return "tos_definition_service";
};

export { tos_definition_service };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_definition_subscriptions = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_definition_subscriptions(inputs);
  if (locale === "de") return de.tos_definition_subscriptions(inputs);
  return "tos_definition_subscriptions";
};

export { tos_definition_subscriptions };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_definition_terms = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_definition_terms(inputs);
  if (locale === "de") return de.tos_definition_terms(inputs);
  return "tos_definition_terms";
};

export { tos_definition_terms };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_definition_third_party_social_media = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.tos_definition_third_party_social_media(inputs);
  if (locale === "de")
    return de.tos_definition_third_party_social_media(inputs);
  return "tos_definition_third_party_social_media";
};

export { tos_definition_third_party_social_media };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_definition_you = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_definition_you(inputs);
  if (locale === "de") return de.tos_definition_you(inputs);
  return "tos_definition_you";
};

export { tos_definition_you };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_acknowledgment_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_acknowledgment_title(inputs);
  if (locale === "de") return de.tos_acknowledgment_title(inputs);
  return "tos_acknowledgment_title";
};

export { tos_acknowledgment_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_acknowledgment_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_acknowledgment_text_1(inputs);
  if (locale === "de") return de.tos_acknowledgment_text_1(inputs);
  return "tos_acknowledgment_text_1";
};

export { tos_acknowledgment_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_acknowledgment_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_acknowledgment_text_2(inputs);
  if (locale === "de") return de.tos_acknowledgment_text_2(inputs);
  return "tos_acknowledgment_text_2";
};

export { tos_acknowledgment_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_acknowledgment_text_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_acknowledgment_text_3(inputs);
  if (locale === "de") return de.tos_acknowledgment_text_3(inputs);
  return "tos_acknowledgment_text_3";
};

export { tos_acknowledgment_text_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_acknowledgment_text_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_acknowledgment_text_4(inputs);
  if (locale === "de") return de.tos_acknowledgment_text_4(inputs);
  return "tos_acknowledgment_text_4";
};

export { tos_acknowledgment_text_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_acknowledgment_text_5 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_acknowledgment_text_5(inputs);
  if (locale === "de") return de.tos_acknowledgment_text_5(inputs);
  return "tos_acknowledgment_text_5";
};

export { tos_acknowledgment_text_5 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_title(inputs);
  if (locale === "de") return de.tos_subscriptions_title(inputs);
  return "tos_subscriptions_title";
};

export { tos_subscriptions_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_period_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_period_subtitle(inputs);
  if (locale === "de") return de.tos_subscriptions_period_subtitle(inputs);
  return "tos_subscriptions_period_subtitle";
};

export { tos_subscriptions_period_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_period_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_period_text_1(inputs);
  if (locale === "de") return de.tos_subscriptions_period_text_1(inputs);
  return "tos_subscriptions_period_text_1";
};

export { tos_subscriptions_period_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_period_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_period_text_2(inputs);
  if (locale === "de") return de.tos_subscriptions_period_text_2(inputs);
  return "tos_subscriptions_period_text_2";
};

export { tos_subscriptions_period_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_cancellations_subtitle = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.tos_subscriptions_cancellations_subtitle(inputs);
  if (locale === "de")
    return de.tos_subscriptions_cancellations_subtitle(inputs);
  return "tos_subscriptions_cancellations_subtitle";
};

export { tos_subscriptions_cancellations_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_cancellations_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_cancellations_text_1(inputs);
  if (locale === "de") return de.tos_subscriptions_cancellations_text_1(inputs);
  return "tos_subscriptions_cancellations_text_1";
};

export { tos_subscriptions_cancellations_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_cancellations_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_cancellations_text_2(inputs);
  if (locale === "de") return de.tos_subscriptions_cancellations_text_2(inputs);
  return "tos_subscriptions_cancellations_text_2";
};

export { tos_subscriptions_cancellations_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_billing_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_billing_subtitle(inputs);
  if (locale === "de") return de.tos_subscriptions_billing_subtitle(inputs);
  return "tos_subscriptions_billing_subtitle";
};

export { tos_subscriptions_billing_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_billing_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_billing_text_1(inputs);
  if (locale === "de") return de.tos_subscriptions_billing_text_1(inputs);
  return "tos_subscriptions_billing_text_1";
};

export { tos_subscriptions_billing_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_billing_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_billing_text_2(inputs);
  if (locale === "de") return de.tos_subscriptions_billing_text_2(inputs);
  return "tos_subscriptions_billing_text_2";
};

export { tos_subscriptions_billing_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_billing_text_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_billing_text_3(inputs);
  if (locale === "de") return de.tos_subscriptions_billing_text_3(inputs);
  return "tos_subscriptions_billing_text_3";
};

export { tos_subscriptions_billing_text_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_fee_changes_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_fee_changes_subtitle(inputs);
  if (locale === "de") return de.tos_subscriptions_fee_changes_subtitle(inputs);
  return "tos_subscriptions_fee_changes_subtitle";
};

export { tos_subscriptions_fee_changes_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_fee_changes_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_fee_changes_text_1(inputs);
  if (locale === "de") return de.tos_subscriptions_fee_changes_text_1(inputs);
  return "tos_subscriptions_fee_changes_text_1";
};

export { tos_subscriptions_fee_changes_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_fee_changes_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_fee_changes_text_2(inputs);
  if (locale === "de") return de.tos_subscriptions_fee_changes_text_2(inputs);
  return "tos_subscriptions_fee_changes_text_2";
};

export { tos_subscriptions_fee_changes_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_fee_changes_text_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_fee_changes_text_3(inputs);
  if (locale === "de") return de.tos_subscriptions_fee_changes_text_3(inputs);
  return "tos_subscriptions_fee_changes_text_3";
};

export { tos_subscriptions_fee_changes_text_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_refunds_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_refunds_subtitle(inputs);
  if (locale === "de") return de.tos_subscriptions_refunds_subtitle(inputs);
  return "tos_subscriptions_refunds_subtitle";
};

export { tos_subscriptions_refunds_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_refunds_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_refunds_text_1(inputs);
  if (locale === "de") return de.tos_subscriptions_refunds_text_1(inputs);
  return "tos_subscriptions_refunds_text_1";
};

export { tos_subscriptions_refunds_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_refunds_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_refunds_text_2(inputs);
  if (locale === "de") return de.tos_subscriptions_refunds_text_2(inputs);
  return "tos_subscriptions_refunds_text_2";
};

export { tos_subscriptions_refunds_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_refunds_text_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_refunds_text_3(inputs);
  if (locale === "de") return de.tos_subscriptions_refunds_text_3(inputs);
  return "tos_subscriptions_refunds_text_3";
};

export { tos_subscriptions_refunds_text_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_free_trial_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_free_trial_subtitle(inputs);
  if (locale === "de") return de.tos_subscriptions_free_trial_subtitle(inputs);
  return "tos_subscriptions_free_trial_subtitle";
};

export { tos_subscriptions_free_trial_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_free_trial_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_free_trial_text_1(inputs);
  if (locale === "de") return de.tos_subscriptions_free_trial_text_1(inputs);
  return "tos_subscriptions_free_trial_text_1";
};

export { tos_subscriptions_free_trial_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_free_trial_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_free_trial_text_2(inputs);
  if (locale === "de") return de.tos_subscriptions_free_trial_text_2(inputs);
  return "tos_subscriptions_free_trial_text_2";
};

export { tos_subscriptions_free_trial_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_free_trial_text_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_free_trial_text_3(inputs);
  if (locale === "de") return de.tos_subscriptions_free_trial_text_3(inputs);
  return "tos_subscriptions_free_trial_text_3";
};

export { tos_subscriptions_free_trial_text_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_subscriptions_free_trial_text_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_subscriptions_free_trial_text_4(inputs);
  if (locale === "de") return de.tos_subscriptions_free_trial_text_4(inputs);
  return "tos_subscriptions_free_trial_text_4";
};

export { tos_subscriptions_free_trial_text_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_in_app_purchases_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_in_app_purchases_title(inputs);
  if (locale === "de") return de.tos_in_app_purchases_title(inputs);
  return "tos_in_app_purchases_title";
};

export { tos_in_app_purchases_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_in_app_purchases_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_in_app_purchases_text_1(inputs);
  if (locale === "de") return de.tos_in_app_purchases_text_1(inputs);
  return "tos_in_app_purchases_text_1";
};

export { tos_in_app_purchases_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_in_app_purchases_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_in_app_purchases_text_2(inputs);
  if (locale === "de") return de.tos_in_app_purchases_text_2(inputs);
  return "tos_in_app_purchases_text_2";
};

export { tos_in_app_purchases_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_in_app_purchases_text_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_in_app_purchases_text_3(inputs);
  if (locale === "de") return de.tos_in_app_purchases_text_3(inputs);
  return "tos_in_app_purchases_text_3";
};

export { tos_in_app_purchases_text_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_in_app_purchases_text_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_in_app_purchases_text_4(inputs);
  if (locale === "de") return de.tos_in_app_purchases_text_4(inputs);
  return "tos_in_app_purchases_text_4";
};

export { tos_in_app_purchases_text_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_in_app_purchases_text_5 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_in_app_purchases_text_5(inputs);
  if (locale === "de") return de.tos_in_app_purchases_text_5(inputs);
  return "tos_in_app_purchases_text_5";
};

export { tos_in_app_purchases_text_5 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_in_app_purchases_text_6 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_in_app_purchases_text_6(inputs);
  if (locale === "de") return de.tos_in_app_purchases_text_6(inputs);
  return "tos_in_app_purchases_text_6";
};

export { tos_in_app_purchases_text_6 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_user_accounts_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_user_accounts_title(inputs);
  if (locale === "de") return de.tos_user_accounts_title(inputs);
  return "tos_user_accounts_title";
};

export { tos_user_accounts_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_user_accounts_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_user_accounts_text_1(inputs);
  if (locale === "de") return de.tos_user_accounts_text_1(inputs);
  return "tos_user_accounts_text_1";
};

export { tos_user_accounts_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_user_accounts_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_user_accounts_text_2(inputs);
  if (locale === "de") return de.tos_user_accounts_text_2(inputs);
  return "tos_user_accounts_text_2";
};

export { tos_user_accounts_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_user_accounts_text_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_user_accounts_text_3(inputs);
  if (locale === "de") return de.tos_user_accounts_text_3(inputs);
  return "tos_user_accounts_text_3";
};

export { tos_user_accounts_text_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_user_accounts_text_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_user_accounts_text_4(inputs);
  if (locale === "de") return de.tos_user_accounts_text_4(inputs);
  return "tos_user_accounts_text_4";
};

export { tos_user_accounts_text_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_intellectual_property_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_intellectual_property_title(inputs);
  if (locale === "de") return de.tos_intellectual_property_title(inputs);
  return "tos_intellectual_property_title";
};

export { tos_intellectual_property_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_intellectual_property_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_intellectual_property_text_1(inputs);
  if (locale === "de") return de.tos_intellectual_property_text_1(inputs);
  return "tos_intellectual_property_text_1";
};

export { tos_intellectual_property_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_intellectual_property_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_intellectual_property_text_2(inputs);
  if (locale === "de") return de.tos_intellectual_property_text_2(inputs);
  return "tos_intellectual_property_text_2";
};

export { tos_intellectual_property_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_intellectual_property_text_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_intellectual_property_text_3(inputs);
  if (locale === "de") return de.tos_intellectual_property_text_3(inputs);
  return "tos_intellectual_property_text_3";
};

export { tos_intellectual_property_text_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_your_feedback_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_your_feedback_title(inputs);
  if (locale === "de") return de.tos_your_feedback_title(inputs);
  return "tos_your_feedback_title";
};

export { tos_your_feedback_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_your_feedback_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_your_feedback_text(inputs);
  if (locale === "de") return de.tos_your_feedback_text(inputs);
  return "tos_your_feedback_text";
};

export { tos_your_feedback_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_links_to_other_websites_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_links_to_other_websites_title(inputs);
  if (locale === "de") return de.tos_links_to_other_websites_title(inputs);
  return "tos_links_to_other_websites_title";
};

export { tos_links_to_other_websites_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_links_to_other_websites_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_links_to_other_websites_text_1(inputs);
  if (locale === "de") return de.tos_links_to_other_websites_text_1(inputs);
  return "tos_links_to_other_websites_text_1";
};

export { tos_links_to_other_websites_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_links_to_other_websites_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_links_to_other_websites_text_2(inputs);
  if (locale === "de") return de.tos_links_to_other_websites_text_2(inputs);
  return "tos_links_to_other_websites_text_2";
};

export { tos_links_to_other_websites_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_links_to_other_websites_text_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_links_to_other_websites_text_3(inputs);
  if (locale === "de") return de.tos_links_to_other_websites_text_3(inputs);
  return "tos_links_to_other_websites_text_3";
};

export { tos_links_to_other_websites_text_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_termination_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_termination_title(inputs);
  if (locale === "de") return de.tos_termination_title(inputs);
  return "tos_termination_title";
};

export { tos_termination_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_termination_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_termination_text_1(inputs);
  if (locale === "de") return de.tos_termination_text_1(inputs);
  return "tos_termination_text_1";
};

export { tos_termination_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_termination_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_termination_text_2(inputs);
  if (locale === "de") return de.tos_termination_text_2(inputs);
  return "tos_termination_text_2";
};

export { tos_termination_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_limitation_of_liability_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_limitation_of_liability_title(inputs);
  if (locale === "de") return de.tos_limitation_of_liability_title(inputs);
  return "tos_limitation_of_liability_title";
};

export { tos_limitation_of_liability_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_limitation_of_liability_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_limitation_of_liability_text_1(inputs);
  if (locale === "de") return de.tos_limitation_of_liability_text_1(inputs);
  return "tos_limitation_of_liability_text_1";
};

export { tos_limitation_of_liability_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_limitation_of_liability_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_limitation_of_liability_text_2(inputs);
  if (locale === "de") return de.tos_limitation_of_liability_text_2(inputs);
  return "tos_limitation_of_liability_text_2";
};

export { tos_limitation_of_liability_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_limitation_of_liability_text_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_limitation_of_liability_text_3(inputs);
  if (locale === "de") return de.tos_limitation_of_liability_text_3(inputs);
  return "tos_limitation_of_liability_text_3";
};

export { tos_limitation_of_liability_text_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_disclaimer_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_disclaimer_title(inputs);
  if (locale === "de") return de.tos_disclaimer_title(inputs);
  return "tos_disclaimer_title";
};

export { tos_disclaimer_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_disclaimer_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_disclaimer_text_1(inputs);
  if (locale === "de") return de.tos_disclaimer_text_1(inputs);
  return "tos_disclaimer_text_1";
};

export { tos_disclaimer_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_disclaimer_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_disclaimer_text_2(inputs);
  if (locale === "de") return de.tos_disclaimer_text_2(inputs);
  return "tos_disclaimer_text_2";
};

export { tos_disclaimer_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_disclaimer_text_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_disclaimer_text_3(inputs);
  if (locale === "de") return de.tos_disclaimer_text_3(inputs);
  return "tos_disclaimer_text_3";
};

export { tos_disclaimer_text_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_governing_law_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_governing_law_title(inputs);
  if (locale === "de") return de.tos_governing_law_title(inputs);
  return "tos_governing_law_title";
};

export { tos_governing_law_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_governing_law_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_governing_law_text(inputs);
  if (locale === "de") return de.tos_governing_law_text(inputs);
  return "tos_governing_law_text";
};

export { tos_governing_law_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_disputes_resolution_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_disputes_resolution_title(inputs);
  if (locale === "de") return de.tos_disputes_resolution_title(inputs);
  return "tos_disputes_resolution_title";
};

export { tos_disputes_resolution_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_disputes_resolution_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_disputes_resolution_text(inputs);
  if (locale === "de") return de.tos_disputes_resolution_text(inputs);
  return "tos_disputes_resolution_text";
};

export { tos_disputes_resolution_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_eu_users_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_eu_users_title(inputs);
  if (locale === "de") return de.tos_eu_users_title(inputs);
  return "tos_eu_users_title";
};

export { tos_eu_users_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_eu_users_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_eu_users_text(inputs);
  if (locale === "de") return de.tos_eu_users_text(inputs);
  return "tos_eu_users_text";
};

export { tos_eu_users_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_us_federal_government_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_us_federal_government_title(inputs);
  if (locale === "de") return de.tos_us_federal_government_title(inputs);
  return "tos_us_federal_government_title";
};

export { tos_us_federal_government_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_us_federal_government_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_us_federal_government_text(inputs);
  if (locale === "de") return de.tos_us_federal_government_text(inputs);
  return "tos_us_federal_government_text";
};

export { tos_us_federal_government_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_us_legal_compliance_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_us_legal_compliance_title(inputs);
  if (locale === "de") return de.tos_us_legal_compliance_title(inputs);
  return "tos_us_legal_compliance_title";
};

export { tos_us_legal_compliance_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_us_legal_compliance_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_us_legal_compliance_text(inputs);
  if (locale === "de") return de.tos_us_legal_compliance_text(inputs);
  return "tos_us_legal_compliance_text";
};

export { tos_us_legal_compliance_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_severability_waiver_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_severability_waiver_title(inputs);
  if (locale === "de") return de.tos_severability_waiver_title(inputs);
  return "tos_severability_waiver_title";
};

export { tos_severability_waiver_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_severability_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_severability_subtitle(inputs);
  if (locale === "de") return de.tos_severability_subtitle(inputs);
  return "tos_severability_subtitle";
};

export { tos_severability_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_severability_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_severability_text(inputs);
  if (locale === "de") return de.tos_severability_text(inputs);
  return "tos_severability_text";
};

export { tos_severability_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_waiver_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_waiver_subtitle(inputs);
  if (locale === "de") return de.tos_waiver_subtitle(inputs);
  return "tos_waiver_subtitle";
};

export { tos_waiver_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_waiver_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_waiver_text(inputs);
  if (locale === "de") return de.tos_waiver_text(inputs);
  return "tos_waiver_text";
};

export { tos_waiver_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_translation_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_translation_title(inputs);
  if (locale === "de") return de.tos_translation_title(inputs);
  return "tos_translation_title";
};

export { tos_translation_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_translation_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_translation_text(inputs);
  if (locale === "de") return de.tos_translation_text(inputs);
  return "tos_translation_text";
};

export { tos_translation_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_changes_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_changes_title(inputs);
  if (locale === "de") return de.tos_changes_title(inputs);
  return "tos_changes_title";
};

export { tos_changes_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_changes_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_changes_text_1(inputs);
  if (locale === "de") return de.tos_changes_text_1(inputs);
  return "tos_changes_text_1";
};

export { tos_changes_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_changes_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_changes_text_2(inputs);
  if (locale === "de") return de.tos_changes_text_2(inputs);
  return "tos_changes_text_2";
};

export { tos_changes_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_contact_us_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_contact_us_title(inputs);
  if (locale === "de") return de.tos_contact_us_title(inputs);
  return "tos_contact_us_title";
};

export { tos_contact_us_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_contact_us_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_contact_us_text(inputs);
  if (locale === "de") return de.tos_contact_us_text(inputs);
  return "tos_contact_us_text";
};

export { tos_contact_us_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const tos_contact_us_website = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.tos_contact_us_website(inputs);
  if (locale === "de") return de.tos_contact_us_website(inputs);
  return "tos_contact_us_website";
};

export { tos_contact_us_website };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const return_policy_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.return_policy_title(inputs);
  if (locale === "de") return de.return_policy_title(inputs);
  return "return_policy_title";
};

export { return_policy_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const last_updated = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.last_updated(inputs);
  if (locale === "de") return de.last_updated(inputs);
  return "last_updated";
};

export { last_updated };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const thank_you_for_shopping = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.thank_you_for_shopping(inputs);
  if (locale === "de") return de.thank_you_for_shopping(inputs);
  return "thank_you_for_shopping";
};

export { thank_you_for_shopping };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const not_satisfied_policy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.not_satisfied_policy(inputs);
  if (locale === "de") return de.not_satisfied_policy(inputs);
  return "not_satisfied_policy";
};

export { not_satisfied_policy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const policy_generator = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.policy_generator(inputs);
  if (locale === "de") return de.policy_generator(inputs);
  return "policy_generator";
};

export { policy_generator };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const terms_applicable = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.terms_applicable(inputs);
  if (locale === "de") return de.terms_applicable(inputs);
  return "terms_applicable";
};

export { terms_applicable };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const interpretation_and_definitions = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.interpretation_and_definitions(inputs);
  if (locale === "de") return de.interpretation_and_definitions(inputs);
  return "interpretation_and_definitions";
};

export { interpretation_and_definitions };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const interpretation = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.interpretation(inputs);
  if (locale === "de") return de.interpretation(inputs);
  return "interpretation";
};

export { interpretation };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const interpretation_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.interpretation_description(inputs);
  if (locale === "de") return de.interpretation_description(inputs);
  return "interpretation_description";
};

export { interpretation_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const definitions = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.definitions(inputs);
  if (locale === "de") return de.definitions(inputs);
  return "definitions";
};

export { definitions };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const definitions_purpose_refund = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.definitions_purpose_refund(inputs);
  if (locale === "de") return de.definitions_purpose_refund(inputs);
  return "definitions_purpose_refund";
};

export { definitions_purpose_refund };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const application_definition_refund = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.application_definition_refund(inputs);
  if (locale === "de") return de.application_definition_refund(inputs);
  return "application_definition_refund";
};

export { application_definition_refund };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const goods_definition = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.goods_definition(inputs);
  if (locale === "de") return de.goods_definition(inputs);
  return "goods_definition";
};

export { goods_definition };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const orders_definition = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.orders_definition(inputs);
  if (locale === "de") return de.orders_definition(inputs);
  return "orders_definition";
};

export { orders_definition };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const order_cancellation_rights = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.order_cancellation_rights(inputs);
  if (locale === "de") return de.order_cancellation_rights(inputs);
  return "order_cancellation_rights";
};

export { order_cancellation_rights };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const cancellation_period = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.cancellation_period(inputs);
  if (locale === "de") return de.cancellation_period(inputs);
  return "cancellation_period";
};

export { cancellation_period };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const cancellation_deadline = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.cancellation_deadline(inputs);
  if (locale === "de") return de.cancellation_deadline(inputs);
  return "cancellation_deadline";
};

export { cancellation_deadline };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const how_to_cancel = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.how_to_cancel(inputs);
  if (locale === "de") return de.how_to_cancel(inputs);
  return "how_to_cancel";
};

export { how_to_cancel };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const cancellation_link = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.cancellation_link(inputs);
  if (locale === "de") return de.cancellation_link(inputs);
  return "cancellation_link";
};

export { cancellation_link };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const reimbursement_policy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.reimbursement_policy(inputs);
  if (locale === "de") return de.reimbursement_policy(inputs);
  return "reimbursement_policy";
};

export { reimbursement_policy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const conditions_for_returns = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.conditions_for_returns(inputs);
  if (locale === "de") return de.conditions_for_returns(inputs);
  return "conditions_for_returns";
};

export { conditions_for_returns };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const return_eligibility = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.return_eligibility(inputs);
  if (locale === "de") return de.return_eligibility(inputs);
  return "return_eligibility";
};

export { return_eligibility };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const purchase_timeframe = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.purchase_timeframe(inputs);
  if (locale === "de") return de.purchase_timeframe(inputs);
  return "purchase_timeframe";
};

export { purchase_timeframe };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const non_returnable_goods = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.non_returnable_goods(inputs);
  if (locale === "de") return de.non_returnable_goods(inputs);
  return "non_returnable_goods";
};

export { non_returnable_goods };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const custom_goods = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.custom_goods(inputs);
  if (locale === "de") return de.custom_goods(inputs);
  return "custom_goods";
};

export { custom_goods };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const perishable_goods = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.perishable_goods(inputs);
  if (locale === "de") return de.perishable_goods(inputs);
  return "perishable_goods";
};

export { perishable_goods };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const unsealed_goods = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.unsealed_goods(inputs);
  if (locale === "de") return de.unsealed_goods(inputs);
  return "unsealed_goods";
};

export { unsealed_goods };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const inseparable_goods = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.inseparable_goods(inputs);
  if (locale === "de") return de.inseparable_goods(inputs);
  return "inseparable_goods";
};

export { inseparable_goods };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const right_to_refuse = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.right_to_refuse(inputs);
  if (locale === "de") return de.right_to_refuse(inputs);
  return "right_to_refuse";
};

export { right_to_refuse };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const sale_items_policy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.sale_items_policy(inputs);
  if (locale === "de") return de.sale_items_policy(inputs);
  return "sale_items_policy";
};

export { sale_items_policy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const returning_goods = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.returning_goods(inputs);
  if (locale === "de") return de.returning_goods(inputs);
  return "returning_goods";
};

export { returning_goods };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const return_responsibility = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.return_responsibility(inputs);
  if (locale === "de") return de.return_responsibility(inputs);
  return "return_responsibility";
};

export { return_responsibility };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const return_address = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.return_address(inputs);
  if (locale === "de") return de.return_address(inputs);
  return "return_address";
};

export { return_address };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const return_shipping_disclaimer = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.return_shipping_disclaimer(inputs);
  if (locale === "de") return de.return_shipping_disclaimer(inputs);
  return "return_shipping_disclaimer";
};

export { return_shipping_disclaimer };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const gifts = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.gifts(inputs);
  if (locale === "de") return de.gifts(inputs);
  return "gifts";
};

export { gifts };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const gift_return_policy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.gift_return_policy(inputs);
  if (locale === "de") return de.gift_return_policy(inputs);
  return "gift_return_policy";
};

export { gift_return_policy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const non_gift_return_policy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.non_gift_return_policy(inputs);
  if (locale === "de") return de.non_gift_return_policy(inputs);
  return "non_gift_return_policy";
};

export { non_gift_return_policy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const contact_us = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.contact_us(inputs);
  if (locale === "de") return de.contact_us(inputs);
  return "contact_us";
};

export { contact_us };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const questions_about_policy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.questions_about_policy(inputs);
  if (locale === "de") return de.questions_about_policy(inputs);
  return "questions_about_policy";
};

export { questions_about_policy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const contact_link = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.contact_link(inputs);
  if (locale === "de") return de.contact_link(inputs);
  return "contact_link";
};

export { contact_link };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const register_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.register_title(inputs);
  if (locale === "de") return de.register_title(inputs);
  return "register_title";
};

export { register_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const already_have_account = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.already_have_account(inputs);
  if (locale === "de") return de.already_have_account(inputs);
  return "already_have_account";
};

export { already_have_account };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const sign_in = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.sign_in(inputs);
  if (locale === "de") return de.sign_in(inputs);
  return "sign_in";
};

export { sign_in };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const email_label = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.email_label(inputs);
  if (locale === "de") return de.email_label(inputs);
  return "email_label";
};

export { email_label };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const email_placeholder = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.email_placeholder(inputs);
  if (locale === "de") return de.email_placeholder(inputs);
  return "email_placeholder";
};

export { email_placeholder };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const first_name_label = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.first_name_label(inputs);
  if (locale === "de") return de.first_name_label(inputs);
  return "first_name_label";
};

export { first_name_label };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const first_name_placeholder = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.first_name_placeholder(inputs);
  if (locale === "de") return de.first_name_placeholder(inputs);
  return "first_name_placeholder";
};

export { first_name_placeholder };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const last_name_label = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.last_name_label(inputs);
  if (locale === "de") return de.last_name_label(inputs);
  return "last_name_label";
};

export { last_name_label };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const last_name_placeholder = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.last_name_placeholder(inputs);
  if (locale === "de") return de.last_name_placeholder(inputs);
  return "last_name_placeholder";
};

export { last_name_placeholder };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const password_label = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.password_label(inputs);
  if (locale === "de") return de.password_label(inputs);
  return "password_label";
};

export { password_label };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const password_placeholder = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.password_placeholder(inputs);
  if (locale === "de") return de.password_placeholder(inputs);
  return "password_placeholder";
};

export { password_placeholder };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const sign_up_button = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.sign_up_button(inputs);
  if (locale === "de") return de.sign_up_button(inputs);
  return "sign_up_button";
};

export { sign_up_button };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const need_help = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.need_help(inputs);
  if (locale === "de") return de.need_help(inputs);
  return "need_help";
};

export { need_help };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const open_support = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.open_support(inputs);
  if (locale === "de") return de.open_support(inputs);
  return "open_support";
};

export { open_support };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const testimonial_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.testimonial_title(inputs);
  if (locale === "de") return de.testimonial_title(inputs);
  return "testimonial_title";
};

export { testimonial_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const testimonial_highlight = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.testimonial_highlight(inputs);
  if (locale === "de") return de.testimonial_highlight(inputs);
  return "testimonial_highlight";
};

export { testimonial_highlight };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const testimonial_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.testimonial_description(inputs);
  if (locale === "de") return de.testimonial_description(inputs);
  return "testimonial_description";
};

export { testimonial_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_title(inputs);
  if (locale === "de") return de.eula_title(inputs);
  return "eula_title";
};

export { eula_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_last_updated = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_last_updated(inputs);
  if (locale === "de") return de.eula_last_updated(inputs);
  return "eula_last_updated";
};

export { eula_last_updated };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_read_carefully = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_read_carefully(inputs);
  if (locale === "de") return de.eula_read_carefully(inputs);
  return "eula_read_carefully";
};

export { eula_read_carefully };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_interpretation_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_interpretation_title(inputs);
  if (locale === "de") return de.eula_interpretation_title(inputs);
  return "eula_interpretation_title";
};

export { eula_interpretation_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_interpretation_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_interpretation_subtitle(inputs);
  if (locale === "de") return de.eula_interpretation_subtitle(inputs);
  return "eula_interpretation_subtitle";
};

export { eula_interpretation_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_interpretation_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_interpretation_text(inputs);
  if (locale === "de") return de.eula_interpretation_text(inputs);
  return "eula_interpretation_text";
};

export { eula_interpretation_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_definitions_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_definitions_subtitle(inputs);
  if (locale === "de") return de.eula_definitions_subtitle(inputs);
  return "eula_definitions_subtitle";
};

export { eula_definitions_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_definitions_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_definitions_intro(inputs);
  if (locale === "de") return de.eula_definitions_intro(inputs);
  return "eula_definitions_intro";
};

export { eula_definitions_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_definition_agreement = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_definition_agreement(inputs);
  if (locale === "de") return de.eula_definition_agreement(inputs);
  return "eula_definition_agreement";
};

export { eula_definition_agreement };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_definition_application = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_definition_application(inputs);
  if (locale === "de") return de.eula_definition_application(inputs);
  return "eula_definition_application";
};

export { eula_definition_application };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_definition_application_store = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_definition_application_store(inputs);
  if (locale === "de") return de.eula_definition_application_store(inputs);
  return "eula_definition_application_store";
};

export { eula_definition_application_store };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_definition_company = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_definition_company(inputs);
  if (locale === "de") return de.eula_definition_company(inputs);
  return "eula_definition_company";
};

export { eula_definition_company };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_definition_content = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_definition_content(inputs);
  if (locale === "de") return de.eula_definition_content(inputs);
  return "eula_definition_content";
};

export { eula_definition_content };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_definition_country = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_definition_country(inputs);
  if (locale === "de") return de.eula_definition_country(inputs);
  return "eula_definition_country";
};

export { eula_definition_country };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_definition_device = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_definition_device(inputs);
  if (locale === "de") return de.eula_definition_device(inputs);
  return "eula_definition_device";
};

export { eula_definition_device };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_definition_family_sharing = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_definition_family_sharing(inputs);
  if (locale === "de") return de.eula_definition_family_sharing(inputs);
  return "eula_definition_family_sharing";
};

export { eula_definition_family_sharing };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_definition_third_party_services = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_definition_third_party_services(inputs);
  if (locale === "de") return de.eula_definition_third_party_services(inputs);
  return "eula_definition_third_party_services";
};

export { eula_definition_third_party_services };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_definition_you = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_definition_you(inputs);
  if (locale === "de") return de.eula_definition_you(inputs);
  return "eula_definition_you";
};

export { eula_definition_you };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_acknowledgment_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_acknowledgment_title(inputs);
  if (locale === "de") return de.eula_acknowledgment_title(inputs);
  return "eula_acknowledgment_title";
};

export { eula_acknowledgment_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_acknowledgment_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_acknowledgment_text_1(inputs);
  if (locale === "de") return de.eula_acknowledgment_text_1(inputs);
  return "eula_acknowledgment_text_1";
};

export { eula_acknowledgment_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_acknowledgment_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_acknowledgment_text_2(inputs);
  if (locale === "de") return de.eula_acknowledgment_text_2(inputs);
  return "eula_acknowledgment_text_2";
};

export { eula_acknowledgment_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_acknowledgment_text_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_acknowledgment_text_3(inputs);
  if (locale === "de") return de.eula_acknowledgment_text_3(inputs);
  return "eula_acknowledgment_text_3";
};

export { eula_acknowledgment_text_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_acknowledgment_text_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_acknowledgment_text_4(inputs);
  if (locale === "de") return de.eula_acknowledgment_text_4(inputs);
  return "eula_acknowledgment_text_4";
};

export { eula_acknowledgment_text_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_acknowledgment_text_5 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_acknowledgment_text_5(inputs);
  if (locale === "de") return de.eula_acknowledgment_text_5(inputs);
  return "eula_acknowledgment_text_5";
};

export { eula_acknowledgment_text_5 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_license_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_license_title(inputs);
  if (locale === "de") return de.eula_license_title(inputs);
  return "eula_license_title";
};

export { eula_license_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_license_scope_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_license_scope_subtitle(inputs);
  if (locale === "de") return de.eula_license_scope_subtitle(inputs);
  return "eula_license_scope_subtitle";
};

export { eula_license_scope_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_license_scope_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_license_scope_text_1(inputs);
  if (locale === "de") return de.eula_license_scope_text_1(inputs);
  return "eula_license_scope_text_1";
};

export { eula_license_scope_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_license_scope_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_license_scope_text_2(inputs);
  if (locale === "de") return de.eula_license_scope_text_2(inputs);
  return "eula_license_scope_text_2";
};

export { eula_license_scope_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_license_scope_text_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_license_scope_text_3(inputs);
  if (locale === "de") return de.eula_license_scope_text_3(inputs);
  return "eula_license_scope_text_3";
};

export { eula_license_scope_text_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_license_restrictions_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_license_restrictions_subtitle(inputs);
  if (locale === "de") return de.eula_license_restrictions_subtitle(inputs);
  return "eula_license_restrictions_subtitle";
};

export { eula_license_restrictions_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_license_restrictions_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_license_restrictions_intro(inputs);
  if (locale === "de") return de.eula_license_restrictions_intro(inputs);
  return "eula_license_restrictions_intro";
};

export { eula_license_restrictions_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_license_restrictions_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_license_restrictions_1(inputs);
  if (locale === "de") return de.eula_license_restrictions_1(inputs);
  return "eula_license_restrictions_1";
};

export { eula_license_restrictions_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_license_restrictions_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_license_restrictions_2(inputs);
  if (locale === "de") return de.eula_license_restrictions_2(inputs);
  return "eula_license_restrictions_2";
};

export { eula_license_restrictions_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_license_restrictions_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_license_restrictions_3(inputs);
  if (locale === "de") return de.eula_license_restrictions_3(inputs);
  return "eula_license_restrictions_3";
};

export { eula_license_restrictions_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_license_restrictions_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_license_restrictions_4(inputs);
  if (locale === "de") return de.eula_license_restrictions_4(inputs);
  return "eula_license_restrictions_4";
};

export { eula_license_restrictions_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_intellectual_property_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_intellectual_property_title(inputs);
  if (locale === "de") return de.eula_intellectual_property_title(inputs);
  return "eula_intellectual_property_title";
};

export { eula_intellectual_property_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_intellectual_property_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_intellectual_property_text_1(inputs);
  if (locale === "de") return de.eula_intellectual_property_text_1(inputs);
  return "eula_intellectual_property_text_1";
};

export { eula_intellectual_property_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_intellectual_property_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_intellectual_property_text_2(inputs);
  if (locale === "de") return de.eula_intellectual_property_text_2(inputs);
  return "eula_intellectual_property_text_2";
};

export { eula_intellectual_property_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_your_suggestions_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_your_suggestions_title(inputs);
  if (locale === "de") return de.eula_your_suggestions_title(inputs);
  return "eula_your_suggestions_title";
};

export { eula_your_suggestions_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_your_suggestions_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_your_suggestions_text_1(inputs);
  if (locale === "de") return de.eula_your_suggestions_text_1(inputs);
  return "eula_your_suggestions_text_1";
};

export { eula_your_suggestions_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_your_suggestions_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_your_suggestions_text_2(inputs);
  if (locale === "de") return de.eula_your_suggestions_text_2(inputs);
  return "eula_your_suggestions_text_2";
};

export { eula_your_suggestions_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_modifications_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_modifications_title(inputs);
  if (locale === "de") return de.eula_modifications_title(inputs);
  return "eula_modifications_title";
};

export { eula_modifications_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_modifications_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_modifications_text(inputs);
  if (locale === "de") return de.eula_modifications_text(inputs);
  return "eula_modifications_text";
};

export { eula_modifications_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_updates_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_updates_subtitle(inputs);
  if (locale === "de") return de.eula_updates_subtitle(inputs);
  return "eula_updates_subtitle";
};

export { eula_updates_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_updates_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_updates_text_1(inputs);
  if (locale === "de") return de.eula_updates_text_1(inputs);
  return "eula_updates_text_1";
};

export { eula_updates_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_updates_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_updates_text_2(inputs);
  if (locale === "de") return de.eula_updates_text_2(inputs);
  return "eula_updates_text_2";
};

export { eula_updates_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_updates_text_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_updates_text_3(inputs);
  if (locale === "de") return de.eula_updates_text_3(inputs);
  return "eula_updates_text_3";
};

export { eula_updates_text_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_maintenance_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_maintenance_subtitle(inputs);
  if (locale === "de") return de.eula_maintenance_subtitle(inputs);
  return "eula_maintenance_subtitle";
};

export { eula_maintenance_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_maintenance_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_maintenance_text(inputs);
  if (locale === "de") return de.eula_maintenance_text(inputs);
  return "eula_maintenance_text";
};

export { eula_maintenance_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_third_party_services_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_third_party_services_title(inputs);
  if (locale === "de") return de.eula_third_party_services_title(inputs);
  return "eula_third_party_services_title";
};

export { eula_third_party_services_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_third_party_services_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_third_party_services_text_1(inputs);
  if (locale === "de") return de.eula_third_party_services_text_1(inputs);
  return "eula_third_party_services_text_1";
};

export { eula_third_party_services_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_third_party_services_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_third_party_services_text_2(inputs);
  if (locale === "de") return de.eula_third_party_services_text_2(inputs);
  return "eula_third_party_services_text_2";
};

export { eula_third_party_services_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_third_party_services_text_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_third_party_services_text_3(inputs);
  if (locale === "de") return de.eula_third_party_services_text_3(inputs);
  return "eula_third_party_services_text_3";
};

export { eula_third_party_services_text_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_term_and_termination_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_term_and_termination_title(inputs);
  if (locale === "de") return de.eula_term_and_termination_title(inputs);
  return "eula_term_and_termination_title";
};

export { eula_term_and_termination_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_term_and_termination_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_term_and_termination_text_1(inputs);
  if (locale === "de") return de.eula_term_and_termination_text_1(inputs);
  return "eula_term_and_termination_text_1";
};

export { eula_term_and_termination_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_term_and_termination_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_term_and_termination_text_2(inputs);
  if (locale === "de") return de.eula_term_and_termination_text_2(inputs);
  return "eula_term_and_termination_text_2";
};

export { eula_term_and_termination_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_term_and_termination_text_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_term_and_termination_text_3(inputs);
  if (locale === "de") return de.eula_term_and_termination_text_3(inputs);
  return "eula_term_and_termination_text_3";
};

export { eula_term_and_termination_text_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_term_and_termination_text_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_term_and_termination_text_4(inputs);
  if (locale === "de") return de.eula_term_and_termination_text_4(inputs);
  return "eula_term_and_termination_text_4";
};

export { eula_term_and_termination_text_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_indemnification_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_indemnification_title(inputs);
  if (locale === "de") return de.eula_indemnification_title(inputs);
  return "eula_indemnification_title";
};

export { eula_indemnification_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_indemnification_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_indemnification_text(inputs);
  if (locale === "de") return de.eula_indemnification_text(inputs);
  return "eula_indemnification_text";
};

export { eula_indemnification_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_no_warranties_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_no_warranties_title(inputs);
  if (locale === "de") return de.eula_no_warranties_title(inputs);
  return "eula_no_warranties_title";
};

export { eula_no_warranties_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_no_warranties_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_no_warranties_text_1(inputs);
  if (locale === "de") return de.eula_no_warranties_text_1(inputs);
  return "eula_no_warranties_text_1";
};

export { eula_no_warranties_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_no_warranties_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_no_warranties_text_2(inputs);
  if (locale === "de") return de.eula_no_warranties_text_2(inputs);
  return "eula_no_warranties_text_2";
};

export { eula_no_warranties_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_no_warranties_text_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_no_warranties_text_3(inputs);
  if (locale === "de") return de.eula_no_warranties_text_3(inputs);
  return "eula_no_warranties_text_3";
};

export { eula_no_warranties_text_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_limitation_of_liability_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_limitation_of_liability_title(inputs);
  if (locale === "de") return de.eula_limitation_of_liability_title(inputs);
  return "eula_limitation_of_liability_title";
};

export { eula_limitation_of_liability_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_limitation_of_liability_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_limitation_of_liability_text_1(inputs);
  if (locale === "de") return de.eula_limitation_of_liability_text_1(inputs);
  return "eula_limitation_of_liability_text_1";
};

export { eula_limitation_of_liability_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_limitation_of_liability_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_limitation_of_liability_text_2(inputs);
  if (locale === "de") return de.eula_limitation_of_liability_text_2(inputs);
  return "eula_limitation_of_liability_text_2";
};

export { eula_limitation_of_liability_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_limitation_of_liability_text_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_limitation_of_liability_text_3(inputs);
  if (locale === "de") return de.eula_limitation_of_liability_text_3(inputs);
  return "eula_limitation_of_liability_text_3";
};

export { eula_limitation_of_liability_text_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_limitation_of_liability_text_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_limitation_of_liability_text_4(inputs);
  if (locale === "de") return de.eula_limitation_of_liability_text_4(inputs);
  return "eula_limitation_of_liability_text_4";
};

export { eula_limitation_of_liability_text_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_severability_and_waiver_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_severability_and_waiver_title(inputs);
  if (locale === "de") return de.eula_severability_and_waiver_title(inputs);
  return "eula_severability_and_waiver_title";
};

export { eula_severability_and_waiver_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_severability_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_severability_subtitle(inputs);
  if (locale === "de") return de.eula_severability_subtitle(inputs);
  return "eula_severability_subtitle";
};

export { eula_severability_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_severability_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_severability_text(inputs);
  if (locale === "de") return de.eula_severability_text(inputs);
  return "eula_severability_text";
};

export { eula_severability_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_waiver_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_waiver_subtitle(inputs);
  if (locale === "de") return de.eula_waiver_subtitle(inputs);
  return "eula_waiver_subtitle";
};

export { eula_waiver_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_waiver_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_waiver_text(inputs);
  if (locale === "de") return de.eula_waiver_text(inputs);
  return "eula_waiver_text";
};

export { eula_waiver_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_product_claims_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_product_claims_title(inputs);
  if (locale === "de") return de.eula_product_claims_title(inputs);
  return "eula_product_claims_title";
};

export { eula_product_claims_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_product_claims_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_product_claims_text(inputs);
  if (locale === "de") return de.eula_product_claims_text(inputs);
  return "eula_product_claims_text";
};

export { eula_product_claims_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_us_legal_compliance_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_us_legal_compliance_title(inputs);
  if (locale === "de") return de.eula_us_legal_compliance_title(inputs);
  return "eula_us_legal_compliance_title";
};

export { eula_us_legal_compliance_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_us_legal_compliance_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_us_legal_compliance_text(inputs);
  if (locale === "de") return de.eula_us_legal_compliance_text(inputs);
  return "eula_us_legal_compliance_text";
};

export { eula_us_legal_compliance_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_changes_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_changes_title(inputs);
  if (locale === "de") return de.eula_changes_title(inputs);
  return "eula_changes_title";
};

export { eula_changes_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_changes_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_changes_text_1(inputs);
  if (locale === "de") return de.eula_changes_text_1(inputs);
  return "eula_changes_text_1";
};

export { eula_changes_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_changes_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_changes_text_2(inputs);
  if (locale === "de") return de.eula_changes_text_2(inputs);
  return "eula_changes_text_2";
};

export { eula_changes_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_governing_law_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_governing_law_title(inputs);
  if (locale === "de") return de.eula_governing_law_title(inputs);
  return "eula_governing_law_title";
};

export { eula_governing_law_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_governing_law_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_governing_law_text(inputs);
  if (locale === "de") return de.eula_governing_law_text(inputs);
  return "eula_governing_law_text";
};

export { eula_governing_law_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_entire_agreement_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_entire_agreement_title(inputs);
  if (locale === "de") return de.eula_entire_agreement_title(inputs);
  return "eula_entire_agreement_title";
};

export { eula_entire_agreement_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_entire_agreement_text_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_entire_agreement_text_1(inputs);
  if (locale === "de") return de.eula_entire_agreement_text_1(inputs);
  return "eula_entire_agreement_text_1";
};

export { eula_entire_agreement_text_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_entire_agreement_text_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_entire_agreement_text_2(inputs);
  if (locale === "de") return de.eula_entire_agreement_text_2(inputs);
  return "eula_entire_agreement_text_2";
};

export { eula_entire_agreement_text_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_contact_us_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_contact_us_title(inputs);
  if (locale === "de") return de.eula_contact_us_title(inputs);
  return "eula_contact_us_title";
};

export { eula_contact_us_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_contact_us_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_contact_us_text(inputs);
  if (locale === "de") return de.eula_contact_us_text(inputs);
  return "eula_contact_us_text";
};

export { eula_contact_us_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const eula_contact_us_link = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.eula_contact_us_link(inputs);
  if (locale === "de") return de.eula_contact_us_link(inputs);
  return "eula_contact_us_link";
};

export { eula_contact_us_link };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_title(inputs);
  if (locale === "de") return de.dpa_title(inputs);
  return "dpa_title";
};

export { dpa_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_last_updated = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_last_updated(inputs);
  if (locale === "de") return de.dpa_last_updated(inputs);
  return "dpa_last_updated";
};

export { dpa_last_updated };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_definitions_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_definitions_title(inputs);
  if (locale === "de") return de.dpa_definitions_title(inputs);
  return "dpa_definitions_title";
};

export { dpa_definitions_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_definitions_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_definitions_1(inputs);
  if (locale === "de") return de.dpa_definitions_1(inputs);
  return "dpa_definitions_1";
};

export { dpa_definitions_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_definitions_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_definitions_2(inputs);
  if (locale === "de") return de.dpa_definitions_2(inputs);
  return "dpa_definitions_2";
};

export { dpa_definitions_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_definitions_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_definitions_3(inputs);
  if (locale === "de") return de.dpa_definitions_3(inputs);
  return "dpa_definitions_3";
};

export { dpa_definitions_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_definitions_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_definitions_4(inputs);
  if (locale === "de") return de.dpa_definitions_4(inputs);
  return "dpa_definitions_4";
};

export { dpa_definitions_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_privacy_security_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_privacy_security_title(inputs);
  if (locale === "de") return de.dpa_privacy_security_title(inputs);
  return "dpa_privacy_security_title";
};

export { dpa_privacy_security_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_privacy_security_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_privacy_security_1(inputs);
  if (locale === "de") return de.dpa_privacy_security_1(inputs);
  return "dpa_privacy_security_1";
};

export { dpa_privacy_security_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_privacy_security_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_privacy_security_2(inputs);
  if (locale === "de") return de.dpa_privacy_security_2(inputs);
  return "dpa_privacy_security_2";
};

export { dpa_privacy_security_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_privacy_security_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_privacy_security_3(inputs);
  if (locale === "de") return de.dpa_privacy_security_3(inputs);
  return "dpa_privacy_security_3";
};

export { dpa_privacy_security_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_privacy_security_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_privacy_security_4(inputs);
  if (locale === "de") return de.dpa_privacy_security_4(inputs);
  return "dpa_privacy_security_4";
};

export { dpa_privacy_security_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_privacy_security_5 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_privacy_security_5(inputs);
  if (locale === "de") return de.dpa_privacy_security_5(inputs);
  return "dpa_privacy_security_5";
};

export { dpa_privacy_security_5 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_privacy_security_6 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_privacy_security_6(inputs);
  if (locale === "de") return de.dpa_privacy_security_6(inputs);
  return "dpa_privacy_security_6";
};

export { dpa_privacy_security_6 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_privacy_security_7 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_privacy_security_7(inputs);
  if (locale === "de") return de.dpa_privacy_security_7(inputs);
  return "dpa_privacy_security_7";
};

export { dpa_privacy_security_7 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_privacy_security_8 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_privacy_security_8(inputs);
  if (locale === "de") return de.dpa_privacy_security_8(inputs);
  return "dpa_privacy_security_8";
};

export { dpa_privacy_security_8 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_security_measures_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_security_measures_title(inputs);
  if (locale === "de") return de.dpa_security_measures_title(inputs);
  return "dpa_security_measures_title";
};

export { dpa_security_measures_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_security_measures_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_security_measures_1(inputs);
  if (locale === "de") return de.dpa_security_measures_1(inputs);
  return "dpa_security_measures_1";
};

export { dpa_security_measures_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_security_measures_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_security_measures_2(inputs);
  if (locale === "de") return de.dpa_security_measures_2(inputs);
  return "dpa_security_measures_2";
};

export { dpa_security_measures_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_security_measures_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_security_measures_3(inputs);
  if (locale === "de") return de.dpa_security_measures_3(inputs);
  return "dpa_security_measures_3";
};

export { dpa_security_measures_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_processor_obligations_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_processor_obligations_title(inputs);
  if (locale === "de") return de.dpa_processor_obligations_title(inputs);
  return "dpa_processor_obligations_title";
};

export { dpa_processor_obligations_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_processor_obligations_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_processor_obligations_1(inputs);
  if (locale === "de") return de.dpa_processor_obligations_1(inputs);
  return "dpa_processor_obligations_1";
};

export { dpa_processor_obligations_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_processor_obligations_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_processor_obligations_2(inputs);
  if (locale === "de") return de.dpa_processor_obligations_2(inputs);
  return "dpa_processor_obligations_2";
};

export { dpa_processor_obligations_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_processor_obligations_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_processor_obligations_3(inputs);
  if (locale === "de") return de.dpa_processor_obligations_3(inputs);
  return "dpa_processor_obligations_3";
};

export { dpa_processor_obligations_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_processor_obligations_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_processor_obligations_4(inputs);
  if (locale === "de") return de.dpa_processor_obligations_4(inputs);
  return "dpa_processor_obligations_4";
};

export { dpa_processor_obligations_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_processor_obligations_5 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_processor_obligations_5(inputs);
  if (locale === "de") return de.dpa_processor_obligations_5(inputs);
  return "dpa_processor_obligations_5";
};

export { dpa_processor_obligations_5 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_processor_obligations_6 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_processor_obligations_6(inputs);
  if (locale === "de") return de.dpa_processor_obligations_6(inputs);
  return "dpa_processor_obligations_6";
};

export { dpa_processor_obligations_6 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_processor_obligations_7 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_processor_obligations_7(inputs);
  if (locale === "de") return de.dpa_processor_obligations_7(inputs);
  return "dpa_processor_obligations_7";
};

export { dpa_processor_obligations_7 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_processor_obligations_8 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_processor_obligations_8(inputs);
  if (locale === "de") return de.dpa_processor_obligations_8(inputs);
  return "dpa_processor_obligations_8";
};

export { dpa_processor_obligations_8 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_processor_obligations_9 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_processor_obligations_9(inputs);
  if (locale === "de") return de.dpa_processor_obligations_9(inputs);
  return "dpa_processor_obligations_9";
};

export { dpa_processor_obligations_9 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_customer_undertakings_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_customer_undertakings_title(inputs);
  if (locale === "de") return de.dpa_customer_undertakings_title(inputs);
  return "dpa_customer_undertakings_title";
};

export { dpa_customer_undertakings_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_customer_undertakings_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_customer_undertakings_1(inputs);
  if (locale === "de") return de.dpa_customer_undertakings_1(inputs);
  return "dpa_customer_undertakings_1";
};

export { dpa_customer_undertakings_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_customer_undertakings_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_customer_undertakings_2(inputs);
  if (locale === "de") return de.dpa_customer_undertakings_2(inputs);
  return "dpa_customer_undertakings_2";
};

export { dpa_customer_undertakings_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_customer_undertakings_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_customer_undertakings_3(inputs);
  if (locale === "de") return de.dpa_customer_undertakings_3(inputs);
  return "dpa_customer_undertakings_3";
};

export { dpa_customer_undertakings_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_customer_undertakings_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_customer_undertakings_4(inputs);
  if (locale === "de") return de.dpa_customer_undertakings_4(inputs);
  return "dpa_customer_undertakings_4";
};

export { dpa_customer_undertakings_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_customer_undertakings_5 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_customer_undertakings_5(inputs);
  if (locale === "de") return de.dpa_customer_undertakings_5(inputs);
  return "dpa_customer_undertakings_5";
};

export { dpa_customer_undertakings_5 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_customer_undertakings_6 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_customer_undertakings_6(inputs);
  if (locale === "de") return de.dpa_customer_undertakings_6(inputs);
  return "dpa_customer_undertakings_6";
};

export { dpa_customer_undertakings_6 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_customer_undertakings_7 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_customer_undertakings_7(inputs);
  if (locale === "de") return de.dpa_customer_undertakings_7(inputs);
  return "dpa_customer_undertakings_7";
};

export { dpa_customer_undertakings_7 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_liability_indemnity_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_liability_indemnity_title(inputs);
  if (locale === "de") return de.dpa_liability_indemnity_title(inputs);
  return "dpa_liability_indemnity_title";
};

export { dpa_liability_indemnity_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_liability_indemnity_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_liability_indemnity_1(inputs);
  if (locale === "de") return de.dpa_liability_indemnity_1(inputs);
  return "dpa_liability_indemnity_1";
};

export { dpa_liability_indemnity_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_signing_required_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_signing_required_title(inputs);
  if (locale === "de") return de.dpa_signing_required_title(inputs);
  return "dpa_signing_required_title";
};

export { dpa_signing_required_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_signing_required_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_signing_required_1(inputs);
  if (locale === "de") return de.dpa_signing_required_1(inputs);
  return "dpa_signing_required_1";
};

export { dpa_signing_required_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_sharing_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_sharing_title(inputs);
  if (locale === "de") return de.dpa_sharing_title(inputs);
  return "dpa_sharing_title";
};

export { dpa_sharing_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_sharing_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_sharing_1(inputs);
  if (locale === "de") return de.dpa_sharing_1(inputs);
  return "dpa_sharing_1";
};

export { dpa_sharing_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_notification_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_notification_title(inputs);
  if (locale === "de") return de.dpa_notification_title(inputs);
  return "dpa_notification_title";
};

export { dpa_notification_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_notification_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_notification_1(inputs);
  if (locale === "de") return de.dpa_notification_1(inputs);
  return "dpa_notification_1";
};

export { dpa_notification_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_contact_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_contact_title(inputs);
  if (locale === "de") return de.dpa_contact_title(inputs);
  return "dpa_contact_title";
};

export { dpa_contact_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_contact_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_contact_1(inputs);
  if (locale === "de") return de.dpa_contact_1(inputs);
  return "dpa_contact_1";
};

export { dpa_contact_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const dpa_contact_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.dpa_contact_2(inputs);
  if (locale === "de") return de.dpa_contact_2(inputs);
  return "dpa_contact_2";
};

export { dpa_contact_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_title(inputs);
  if (locale === "de") return de.data_policy_title(inputs);
  return "data_policy_title";
};

export { data_policy_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_last_updated = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_last_updated(inputs);
  if (locale === "de") return de.data_policy_last_updated(inputs);
  return "data_policy_last_updated";
};

export { data_policy_last_updated };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_intro(inputs);
  if (locale === "de") return de.data_policy_intro(inputs);
  return "data_policy_intro";
};

export { data_policy_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_what_we_collect_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_what_we_collect_title(inputs);
  if (locale === "de") return de.data_policy_what_we_collect_title(inputs);
  return "data_policy_what_we_collect_title";
};

export { data_policy_what_we_collect_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_no_tracking = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_no_tracking(inputs);
  if (locale === "de") return de.data_policy_no_tracking(inputs);
  return "data_policy_no_tracking";
};

export { data_policy_no_tracking };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_goal = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_goal(inputs);
  if (locale === "de") return de.data_policy_goal(inputs);
  return "data_policy_goal";
};

export { data_policy_goal };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_anonymous_measurement = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_anonymous_measurement(inputs);
  if (locale === "de") return de.data_policy_anonymous_measurement(inputs);
  return "data_policy_anonymous_measurement";
};

export { data_policy_anonymous_measurement };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_unique_users_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_unique_users_title(inputs);
  if (locale === "de") return de.data_policy_unique_users_title(inputs);
  return "data_policy_unique_users_title";
};

export { data_policy_unique_users_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_unique_users_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_unique_users_intro(inputs);
  if (locale === "de") return de.data_policy_unique_users_intro(inputs);
  return "data_policy_unique_users_intro";
};

export { data_policy_unique_users_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_no_persistent_identifier = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_no_persistent_identifier(inputs);
  if (locale === "de") return de.data_policy_no_persistent_identifier(inputs);
  return "data_policy_no_persistent_identifier";
};

export { data_policy_no_persistent_identifier };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ip_user_agent = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ip_user_agent(inputs);
  if (locale === "de") return de.data_policy_ip_user_agent(inputs);
  return "data_policy_ip_user_agent";
};

export { data_policy_ip_user_agent };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ip_accuracy = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ip_accuracy(inputs);
  if (locale === "de") return de.data_policy_ip_accuracy(inputs);
  return "data_policy_ip_accuracy";
};

export { data_policy_ip_accuracy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_compliance_info = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_compliance_info(inputs);
  if (locale === "de") return de.data_policy_compliance_info(inputs);
  return "data_policy_compliance_info";
};

export { data_policy_compliance_info };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ownership_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ownership_title(inputs);
  if (locale === "de") return de.data_policy_ownership_title(inputs);
  return "data_policy_ownership_title";
};

export { data_policy_ownership_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ownership_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ownership_intro(inputs);
  if (locale === "de") return de.data_policy_ownership_intro(inputs);
  return "data_policy_ownership_intro";
};

export { data_policy_ownership_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ownership_statement = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ownership_statement(inputs);
  if (locale === "de") return de.data_policy_ownership_statement(inputs);
  return "data_policy_ownership_statement";
};

export { data_policy_ownership_statement };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ownership_rights = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ownership_rights(inputs);
  if (locale === "de") return de.data_policy_ownership_rights(inputs);
  return "data_policy_ownership_rights";
};

export { data_policy_ownership_rights };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_data_protection_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_data_protection_1(inputs);
  if (locale === "de") return de.data_policy_data_protection_1(inputs);
  return "data_policy_data_protection_1";
};

export { data_policy_data_protection_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_data_protection_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_data_protection_2(inputs);
  if (locale === "de") return de.data_policy_data_protection_2(inputs);
  return "data_policy_data_protection_2";
};

export { data_policy_data_protection_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_data_protection_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_data_protection_3(inputs);
  if (locale === "de") return de.data_policy_data_protection_3(inputs);
  return "data_policy_data_protection_3";
};

export { data_policy_data_protection_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_data_protection_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_data_protection_4(inputs);
  if (locale === "de") return de.data_policy_data_protection_4(inputs);
  return "data_policy_data_protection_4";
};

export { data_policy_data_protection_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_account_deletion = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_account_deletion(inputs);
  if (locale === "de") return de.data_policy_account_deletion(inputs);
  return "data_policy_account_deletion";
};

export { data_policy_account_deletion };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_permanent_deletion = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_permanent_deletion(inputs);
  if (locale === "de") return de.data_policy_permanent_deletion(inputs);
  return "data_policy_permanent_deletion";
};

export { data_policy_permanent_deletion };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_trust_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_trust_title(inputs);
  if (locale === "de") return de.data_policy_trust_title(inputs);
  return "data_policy_trust_title";
};

export { data_policy_trust_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_trust_open_source = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_trust_open_source(inputs);
  if (locale === "de") return de.data_policy_trust_open_source(inputs);
  return "data_policy_trust_open_source";
};

export { data_policy_trust_open_source };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_trust_transparency = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_trust_transparency(inputs);
  if (locale === "de") return de.data_policy_trust_transparency(inputs);
  return "data_policy_trust_transparency";
};

export { data_policy_trust_transparency };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_trust_importance = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_trust_importance(inputs);
  if (locale === "de") return de.data_policy_trust_importance(inputs);
  return "data_policy_trust_importance";
};

export { data_policy_trust_importance };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_gdpr_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_gdpr_title(inputs);
  if (locale === "de") return de.data_policy_gdpr_title(inputs);
  return "data_policy_gdpr_title";
};

export { data_policy_gdpr_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_legal_basis_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_legal_basis_title(inputs);
  if (locale === "de") return de.data_policy_legal_basis_title(inputs);
  return "data_policy_legal_basis_title";
};

export { data_policy_legal_basis_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_legal_basis_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_legal_basis_intro(inputs);
  if (locale === "de") return de.data_policy_legal_basis_intro(inputs);
  return "data_policy_legal_basis_intro";
};

export { data_policy_legal_basis_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_legal_basis_consent = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_legal_basis_consent(inputs);
  if (locale === "de") return de.data_policy_legal_basis_consent(inputs);
  return "data_policy_legal_basis_consent";
};

export { data_policy_legal_basis_consent };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_legal_basis_contract = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_legal_basis_contract(inputs);
  if (locale === "de") return de.data_policy_legal_basis_contract(inputs);
  return "data_policy_legal_basis_contract";
};

export { data_policy_legal_basis_contract };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_legal_basis_legal_obligations = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_legal_basis_legal_obligations(inputs);
  if (locale === "de")
    return de.data_policy_legal_basis_legal_obligations(inputs);
  return "data_policy_legal_basis_legal_obligations";
};

export { data_policy_legal_basis_legal_obligations };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_legal_basis_vital_interests = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_legal_basis_vital_interests(inputs);
  if (locale === "de")
    return de.data_policy_legal_basis_vital_interests(inputs);
  return "data_policy_legal_basis_vital_interests";
};

export { data_policy_legal_basis_vital_interests };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_legal_basis_public_interests = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_legal_basis_public_interests(inputs);
  if (locale === "de")
    return de.data_policy_legal_basis_public_interests(inputs);
  return "data_policy_legal_basis_public_interests";
};

export { data_policy_legal_basis_public_interests };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_legal_basis_legitimate_interests = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_legal_basis_legitimate_interests(inputs);
  if (locale === "de")
    return de.data_policy_legal_basis_legitimate_interests(inputs);
  return "data_policy_legal_basis_legitimate_interests";
};

export { data_policy_legal_basis_legitimate_interests };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_legal_basis_clarification = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_legal_basis_clarification(inputs);
  if (locale === "de") return de.data_policy_legal_basis_clarification(inputs);
  return "data_policy_legal_basis_clarification";
};

export { data_policy_legal_basis_clarification };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_gdpr_rights_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_gdpr_rights_title(inputs);
  if (locale === "de") return de.data_policy_gdpr_rights_title(inputs);
  return "data_policy_gdpr_rights_title";
};

export { data_policy_gdpr_rights_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_gdpr_rights_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_gdpr_rights_intro(inputs);
  if (locale === "de") return de.data_policy_gdpr_rights_intro(inputs);
  return "data_policy_gdpr_rights_intro";
};

export { data_policy_gdpr_rights_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_gdpr_rights_list_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_gdpr_rights_list_intro(inputs);
  if (locale === "de") return de.data_policy_gdpr_rights_list_intro(inputs);
  return "data_policy_gdpr_rights_list_intro";
};

export { data_policy_gdpr_rights_list_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_gdpr_right_access = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_gdpr_right_access(inputs);
  if (locale === "de") return de.data_policy_gdpr_right_access(inputs);
  return "data_policy_gdpr_right_access";
};

export { data_policy_gdpr_right_access };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_gdpr_right_correction = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_gdpr_right_correction(inputs);
  if (locale === "de") return de.data_policy_gdpr_right_correction(inputs);
  return "data_policy_gdpr_right_correction";
};

export { data_policy_gdpr_right_correction };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_gdpr_right_object = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_gdpr_right_object(inputs);
  if (locale === "de") return de.data_policy_gdpr_right_object(inputs);
  return "data_policy_gdpr_right_object";
};

export { data_policy_gdpr_right_object };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_gdpr_right_erasure = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_gdpr_right_erasure(inputs);
  if (locale === "de") return de.data_policy_gdpr_right_erasure(inputs);
  return "data_policy_gdpr_right_erasure";
};

export { data_policy_gdpr_right_erasure };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_gdpr_right_transfer = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_gdpr_right_transfer(inputs);
  if (locale === "de") return de.data_policy_gdpr_right_transfer(inputs);
  return "data_policy_gdpr_right_transfer";
};

export { data_policy_gdpr_right_transfer };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_gdpr_right_withdraw_consent = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_gdpr_right_withdraw_consent(inputs);
  if (locale === "de")
    return de.data_policy_gdpr_right_withdraw_consent(inputs);
  return "data_policy_gdpr_right_withdraw_consent";
};

export { data_policy_gdpr_right_withdraw_consent };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_gdpr_exercising_rights_title = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_gdpr_exercising_rights_title(inputs);
  if (locale === "de")
    return de.data_policy_gdpr_exercising_rights_title(inputs);
  return "data_policy_gdpr_exercising_rights_title";
};

export { data_policy_gdpr_exercising_rights_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_gdpr_exercising_rights_contact = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_gdpr_exercising_rights_contact(inputs);
  if (locale === "de")
    return de.data_policy_gdpr_exercising_rights_contact(inputs);
  return "data_policy_gdpr_exercising_rights_contact";
};

export { data_policy_gdpr_exercising_rights_contact };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_gdpr_complaint_right = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_gdpr_complaint_right(inputs);
  if (locale === "de") return de.data_policy_gdpr_complaint_right(inputs);
  return "data_policy_gdpr_complaint_right";
};

export { data_policy_gdpr_complaint_right };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_title(inputs);
  if (locale === "de") return de.data_policy_ccpa_title(inputs);
  return "data_policy_ccpa_title";
};

export { data_policy_ccpa_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_intro(inputs);
  if (locale === "de") return de.data_policy_ccpa_intro(inputs);
  return "data_policy_ccpa_intro";
};

export { data_policy_ccpa_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_categories_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_categories_title(inputs);
  if (locale === "de") return de.data_policy_ccpa_categories_title(inputs);
  return "data_policy_ccpa_categories_title";
};

export { data_policy_ccpa_categories_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_categories_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_categories_intro(inputs);
  if (locale === "de") return de.data_policy_ccpa_categories_intro(inputs);
  return "data_policy_ccpa_categories_intro";
};

export { data_policy_ccpa_categories_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_categories_note = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_categories_note(inputs);
  if (locale === "de") return de.data_policy_ccpa_categories_note(inputs);
  return "data_policy_ccpa_categories_note";
};

export { data_policy_ccpa_categories_note };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_a = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_a(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_a(inputs);
  return "data_policy_ccpa_category_a";
};

export { data_policy_ccpa_category_a };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_a_examples = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_a_examples(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_a_examples(inputs);
  return "data_policy_ccpa_category_a_examples";
};

export { data_policy_ccpa_category_a_examples };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_a_collected = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_a_collected(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_a_collected(inputs);
  return "data_policy_ccpa_category_a_collected";
};

export { data_policy_ccpa_category_a_collected };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_b = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_b(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_b(inputs);
  return "data_policy_ccpa_category_b";
};

export { data_policy_ccpa_category_b };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_b_examples = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_b_examples(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_b_examples(inputs);
  return "data_policy_ccpa_category_b_examples";
};

export { data_policy_ccpa_category_b_examples };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_b_collected = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_b_collected(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_b_collected(inputs);
  return "data_policy_ccpa_category_b_collected";
};

export { data_policy_ccpa_category_b_collected };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_c = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_c(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_c(inputs);
  return "data_policy_ccpa_category_c";
};

export { data_policy_ccpa_category_c };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_c_examples = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_c_examples(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_c_examples(inputs);
  return "data_policy_ccpa_category_c_examples";
};

export { data_policy_ccpa_category_c_examples };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_c_collected = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_c_collected(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_c_collected(inputs);
  return "data_policy_ccpa_category_c_collected";
};

export { data_policy_ccpa_category_c_collected };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_d = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_d(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_d(inputs);
  return "data_policy_ccpa_category_d";
};

export { data_policy_ccpa_category_d };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_d_examples = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_d_examples(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_d_examples(inputs);
  return "data_policy_ccpa_category_d_examples";
};

export { data_policy_ccpa_category_d_examples };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_d_collected = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_d_collected(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_d_collected(inputs);
  return "data_policy_ccpa_category_d_collected";
};

export { data_policy_ccpa_category_d_collected };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_e = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_e(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_e(inputs);
  return "data_policy_ccpa_category_e";
};

export { data_policy_ccpa_category_e };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_e_examples = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_e_examples(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_e_examples(inputs);
  return "data_policy_ccpa_category_e_examples";
};

export { data_policy_ccpa_category_e_examples };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_e_collected = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_e_collected(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_e_collected(inputs);
  return "data_policy_ccpa_category_e_collected";
};

export { data_policy_ccpa_category_e_collected };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_f = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_f(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_f(inputs);
  return "data_policy_ccpa_category_f";
};

export { data_policy_ccpa_category_f };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_f_examples = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_f_examples(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_f_examples(inputs);
  return "data_policy_ccpa_category_f_examples";
};

export { data_policy_ccpa_category_f_examples };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_f_collected = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_f_collected(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_f_collected(inputs);
  return "data_policy_ccpa_category_f_collected";
};

export { data_policy_ccpa_category_f_collected };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_g = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_g(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_g(inputs);
  return "data_policy_ccpa_category_g";
};

export { data_policy_ccpa_category_g };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_g_examples = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_g_examples(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_g_examples(inputs);
  return "data_policy_ccpa_category_g_examples";
};

export { data_policy_ccpa_category_g_examples };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_g_collected = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_g_collected(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_g_collected(inputs);
  return "data_policy_ccpa_category_g_collected";
};

export { data_policy_ccpa_category_g_collected };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_h = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_h(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_h(inputs);
  return "data_policy_ccpa_category_h";
};

export { data_policy_ccpa_category_h };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_h_examples = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_h_examples(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_h_examples(inputs);
  return "data_policy_ccpa_category_h_examples";
};

export { data_policy_ccpa_category_h_examples };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_h_collected = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_h_collected(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_h_collected(inputs);
  return "data_policy_ccpa_category_h_collected";
};

export { data_policy_ccpa_category_h_collected };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_i = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_i(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_i(inputs);
  return "data_policy_ccpa_category_i";
};

export { data_policy_ccpa_category_i };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_i_examples = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_i_examples(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_i_examples(inputs);
  return "data_policy_ccpa_category_i_examples";
};

export { data_policy_ccpa_category_i_examples };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_i_collected = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_i_collected(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_i_collected(inputs);
  return "data_policy_ccpa_category_i_collected";
};

export { data_policy_ccpa_category_i_collected };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_j = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_j(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_j(inputs);
  return "data_policy_ccpa_category_j";
};

export { data_policy_ccpa_category_j };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_j_examples = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_j_examples(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_j_examples(inputs);
  return "data_policy_ccpa_category_j_examples";
};

export { data_policy_ccpa_category_j_examples };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_j_collected = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_j_collected(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_j_collected(inputs);
  return "data_policy_ccpa_category_j_collected";
};

export { data_policy_ccpa_category_j_collected };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_k = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_k(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_k(inputs);
  return "data_policy_ccpa_category_k";
};

export { data_policy_ccpa_category_k };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_k_examples = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_k_examples(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_k_examples(inputs);
  return "data_policy_ccpa_category_k_examples";
};

export { data_policy_ccpa_category_k_examples };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_category_k_collected = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_category_k_collected(inputs);
  if (locale === "de") return de.data_policy_ccpa_category_k_collected(inputs);
  return "data_policy_ccpa_category_k_collected";
};

export { data_policy_ccpa_category_k_collected };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_info_sources_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_info_sources_title(inputs);
  if (locale === "de") return de.data_policy_ccpa_info_sources_title(inputs);
  return "data_policy_ccpa_info_sources_title";
};

export { data_policy_ccpa_info_sources_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_info_sources_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_info_sources_intro(inputs);
  if (locale === "de") return de.data_policy_ccpa_info_sources_intro(inputs);
  return "data_policy_ccpa_info_sources_intro";
};

export { data_policy_ccpa_info_sources_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_info_source_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_info_source_1(inputs);
  if (locale === "de") return de.data_policy_ccpa_info_source_1(inputs);
  return "data_policy_ccpa_info_source_1";
};

export { data_policy_ccpa_info_source_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_info_source_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_info_source_2(inputs);
  if (locale === "de") return de.data_policy_ccpa_info_source_2(inputs);
  return "data_policy_ccpa_info_source_2";
};

export { data_policy_ccpa_info_source_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_info_source_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_info_source_3(inputs);
  if (locale === "de") return de.data_policy_ccpa_info_source_3(inputs);
  return "data_policy_ccpa_info_source_3";
};

export { data_policy_ccpa_info_source_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_info_source_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_info_source_4(inputs);
  if (locale === "de") return de.data_policy_ccpa_info_source_4(inputs);
  return "data_policy_ccpa_info_source_4";
};

export { data_policy_ccpa_info_source_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_use_of_info_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_use_of_info_title(inputs);
  if (locale === "de") return de.data_policy_ccpa_use_of_info_title(inputs);
  return "data_policy_ccpa_use_of_info_title";
};

export { data_policy_ccpa_use_of_info_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_use_of_info_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_use_of_info_intro(inputs);
  if (locale === "de") return de.data_policy_ccpa_use_of_info_intro(inputs);
  return "data_policy_ccpa_use_of_info_intro";
};

export { data_policy_ccpa_use_of_info_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_use_of_info_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_use_of_info_1(inputs);
  if (locale === "de") return de.data_policy_ccpa_use_of_info_1(inputs);
  return "data_policy_ccpa_use_of_info_1";
};

export { data_policy_ccpa_use_of_info_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_use_of_info_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_use_of_info_2(inputs);
  if (locale === "de") return de.data_policy_ccpa_use_of_info_2(inputs);
  return "data_policy_ccpa_use_of_info_2";
};

export { data_policy_ccpa_use_of_info_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_use_of_info_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_use_of_info_3(inputs);
  if (locale === "de") return de.data_policy_ccpa_use_of_info_3(inputs);
  return "data_policy_ccpa_use_of_info_3";
};

export { data_policy_ccpa_use_of_info_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_use_of_info_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_use_of_info_4(inputs);
  if (locale === "de") return de.data_policy_ccpa_use_of_info_4(inputs);
  return "data_policy_ccpa_use_of_info_4";
};

export { data_policy_ccpa_use_of_info_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_use_of_info_5 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_use_of_info_5(inputs);
  if (locale === "de") return de.data_policy_ccpa_use_of_info_5(inputs);
  return "data_policy_ccpa_use_of_info_5";
};

export { data_policy_ccpa_use_of_info_5 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_use_of_info_6 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_use_of_info_6(inputs);
  if (locale === "de") return de.data_policy_ccpa_use_of_info_6(inputs);
  return "data_policy_ccpa_use_of_info_6";
};

export { data_policy_ccpa_use_of_info_6 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_use_of_info_7 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_use_of_info_7(inputs);
  if (locale === "de") return de.data_policy_ccpa_use_of_info_7(inputs);
  return "data_policy_ccpa_use_of_info_7";
};

export { data_policy_ccpa_use_of_info_7 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_info_sharing_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_info_sharing_title(inputs);
  if (locale === "de") return de.data_policy_ccpa_info_sharing_title(inputs);
  return "data_policy_ccpa_info_sharing_title";
};

export { data_policy_ccpa_info_sharing_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_info_sharing_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_info_sharing_intro(inputs);
  if (locale === "de") return de.data_policy_ccpa_info_sharing_intro(inputs);
  return "data_policy_ccpa_info_sharing_intro";
};

export { data_policy_ccpa_info_sharing_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_info_sharing_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_info_sharing_1(inputs);
  if (locale === "de") return de.data_policy_ccpa_info_sharing_1(inputs);
  return "data_policy_ccpa_info_sharing_1";
};

export { data_policy_ccpa_info_sharing_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_info_sharing_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_info_sharing_2(inputs);
  if (locale === "de") return de.data_policy_ccpa_info_sharing_2(inputs);
  return "data_policy_ccpa_info_sharing_2";
};

export { data_policy_ccpa_info_sharing_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_info_sharing_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_info_sharing_3(inputs);
  if (locale === "de") return de.data_policy_ccpa_info_sharing_3(inputs);
  return "data_policy_ccpa_info_sharing_3";
};

export { data_policy_ccpa_info_sharing_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_info_sharing_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_info_sharing_4(inputs);
  if (locale === "de") return de.data_policy_ccpa_info_sharing_4(inputs);
  return "data_policy_ccpa_info_sharing_4";
};

export { data_policy_ccpa_info_sharing_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_info_sharing_5 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_info_sharing_5(inputs);
  if (locale === "de") return de.data_policy_ccpa_info_sharing_5(inputs);
  return "data_policy_ccpa_info_sharing_5";
};

export { data_policy_ccpa_info_sharing_5 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_sale_of_info_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_sale_of_info_title(inputs);
  if (locale === "de") return de.data_policy_ccpa_sale_of_info_title(inputs);
  return "data_policy_ccpa_sale_of_info_title";
};

export { data_policy_ccpa_sale_of_info_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_sale_of_info_definition = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_sale_of_info_definition(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_sale_of_info_definition(inputs);
  return "data_policy_ccpa_sale_of_info_definition";
};

export { data_policy_ccpa_sale_of_info_definition };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_sale_of_info_note = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_sale_of_info_note(inputs);
  if (locale === "de") return de.data_policy_ccpa_sale_of_info_note(inputs);
  return "data_policy_ccpa_sale_of_info_note";
};

export { data_policy_ccpa_sale_of_info_note };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_sale_of_info_statement = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_sale_of_info_statement(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_sale_of_info_statement(inputs);
  return "data_policy_ccpa_sale_of_info_statement";
};

export { data_policy_ccpa_sale_of_info_statement };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_sale_of_info_categories = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_sale_of_info_categories(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_sale_of_info_categories(inputs);
  return "data_policy_ccpa_sale_of_info_categories";
};

export { data_policy_ccpa_sale_of_info_categories };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_share_of_info_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_share_of_info_title(inputs);
  if (locale === "de") return de.data_policy_ccpa_share_of_info_title(inputs);
  return "data_policy_ccpa_share_of_info_title";
};

export { data_policy_ccpa_share_of_info_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_share_of_info_statement = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_share_of_info_statement(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_share_of_info_statement(inputs);
  return "data_policy_ccpa_share_of_info_statement";
};

export { data_policy_ccpa_share_of_info_statement };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_share_of_info_categories = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_share_of_info_categories(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_share_of_info_categories(inputs);
  return "data_policy_ccpa_share_of_info_categories";
};

export { data_policy_ccpa_share_of_info_categories };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_sale_of_minors_info_title = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_sale_of_minors_info_title(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_sale_of_minors_info_title(inputs);
  return "data_policy_ccpa_sale_of_minors_info_title";
};

export { data_policy_ccpa_sale_of_minors_info_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_sale_of_minors_info_statement = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_sale_of_minors_info_statement(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_sale_of_minors_info_statement(inputs);
  return "data_policy_ccpa_sale_of_minors_info_statement";
};

export { data_policy_ccpa_sale_of_minors_info_statement };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_sale_of_minors_info_policy = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_sale_of_minors_info_policy(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_sale_of_minors_info_policy(inputs);
  return "data_policy_ccpa_sale_of_minors_info_policy";
};

export { data_policy_ccpa_sale_of_minors_info_policy };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_sale_of_minors_info_request = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_sale_of_minors_info_request(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_sale_of_minors_info_request(inputs);
  return "data_policy_ccpa_sale_of_minors_info_request";
};

export { data_policy_ccpa_sale_of_minors_info_request };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_your_rights_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_your_rights_title(inputs);
  if (locale === "de") return de.data_policy_ccpa_your_rights_title(inputs);
  return "data_policy_ccpa_your_rights_title";
};

export { data_policy_ccpa_your_rights_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_your_rights_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_your_rights_intro(inputs);
  if (locale === "de") return de.data_policy_ccpa_your_rights_intro(inputs);
  return "data_policy_ccpa_your_rights_intro";
};

export { data_policy_ccpa_your_rights_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_notice = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_notice(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_notice(inputs);
  return "data_policy_ccpa_right_to_notice";
};

export { data_policy_ccpa_right_to_notice };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_request = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_request(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_request(inputs);
  return "data_policy_ccpa_right_to_request";
};

export { data_policy_ccpa_right_to_request };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_request_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_request_1(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_request_1(inputs);
  return "data_policy_ccpa_right_to_request_1";
};

export { data_policy_ccpa_right_to_request_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_request_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_request_2(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_request_2(inputs);
  return "data_policy_ccpa_right_to_request_2";
};

export { data_policy_ccpa_right_to_request_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_request_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_request_3(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_request_3(inputs);
  return "data_policy_ccpa_right_to_request_3";
};

export { data_policy_ccpa_right_to_request_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_request_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_request_4(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_request_4(inputs);
  return "data_policy_ccpa_right_to_request_4";
};

export { data_policy_ccpa_right_to_request_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_request_5 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_request_5(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_request_5(inputs);
  return "data_policy_ccpa_right_to_request_5";
};

export { data_policy_ccpa_right_to_request_5 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_request_6 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_request_6(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_request_6(inputs);
  return "data_policy_ccpa_right_to_request_6";
};

export { data_policy_ccpa_right_to_request_6 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_request_6_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_request_6_1(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_request_6_1(inputs);
  return "data_policy_ccpa_right_to_request_6_1";
};

export { data_policy_ccpa_right_to_request_6_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_request_6_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_request_6_2(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_request_6_2(inputs);
  return "data_policy_ccpa_right_to_request_6_2";
};

export { data_policy_ccpa_right_to_request_6_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_opt_out = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_opt_out(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_opt_out(inputs);
  return "data_policy_ccpa_right_to_opt_out";
};

export { data_policy_ccpa_right_to_opt_out };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_delete = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_delete(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_delete(inputs);
  return "data_policy_ccpa_right_to_delete";
};

export { data_policy_ccpa_right_to_delete };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_delete_1 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_delete_1(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_delete_1(inputs);
  return "data_policy_ccpa_right_to_delete_1";
};

export { data_policy_ccpa_right_to_delete_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_delete_2 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_delete_2(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_delete_2(inputs);
  return "data_policy_ccpa_right_to_delete_2";
};

export { data_policy_ccpa_right_to_delete_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_delete_3 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_delete_3(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_delete_3(inputs);
  return "data_policy_ccpa_right_to_delete_3";
};

export { data_policy_ccpa_right_to_delete_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_delete_4 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_delete_4(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_delete_4(inputs);
  return "data_policy_ccpa_right_to_delete_4";
};

export { data_policy_ccpa_right_to_delete_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_delete_5 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_delete_5(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_delete_5(inputs);
  return "data_policy_ccpa_right_to_delete_5";
};

export { data_policy_ccpa_right_to_delete_5 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_delete_6 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_delete_6(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_delete_6(inputs);
  return "data_policy_ccpa_right_to_delete_6";
};

export { data_policy_ccpa_right_to_delete_6 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_delete_7 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_delete_7(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_delete_7(inputs);
  return "data_policy_ccpa_right_to_delete_7";
};

export { data_policy_ccpa_right_to_delete_7 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_delete_8 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_delete_8(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_delete_8(inputs);
  return "data_policy_ccpa_right_to_delete_8";
};

export { data_policy_ccpa_right_to_delete_8 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_delete_9 = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.data_policy_ccpa_right_to_delete_9(inputs);
  if (locale === "de") return de.data_policy_ccpa_right_to_delete_9(inputs);
  return "data_policy_ccpa_right_to_delete_9";
};

export { data_policy_ccpa_right_to_delete_9 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_non_discrimination = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_right_to_non_discrimination(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_right_to_non_discrimination(inputs);
  return "data_policy_ccpa_right_to_non_discrimination";
};

export { data_policy_ccpa_right_to_non_discrimination };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_non_discrimination_1 = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_right_to_non_discrimination_1(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_right_to_non_discrimination_1(inputs);
  return "data_policy_ccpa_right_to_non_discrimination_1";
};

export { data_policy_ccpa_right_to_non_discrimination_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_non_discrimination_2 = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_right_to_non_discrimination_2(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_right_to_non_discrimination_2(inputs);
  return "data_policy_ccpa_right_to_non_discrimination_2";
};

export { data_policy_ccpa_right_to_non_discrimination_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_non_discrimination_3 = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_right_to_non_discrimination_3(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_right_to_non_discrimination_3(inputs);
  return "data_policy_ccpa_right_to_non_discrimination_3";
};

export { data_policy_ccpa_right_to_non_discrimination_3 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_right_to_non_discrimination_4 = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_right_to_non_discrimination_4(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_right_to_non_discrimination_4(inputs);
  return "data_policy_ccpa_right_to_non_discrimination_4";
};

export { data_policy_ccpa_right_to_non_discrimination_4 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_exercising_rights_title = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_exercising_rights_title(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_exercising_rights_title(inputs);
  return "data_policy_ccpa_exercising_rights_title";
};

export { data_policy_ccpa_exercising_rights_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_exercising_rights_contact = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_exercising_rights_contact(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_exercising_rights_contact(inputs);
  return "data_policy_ccpa_exercising_rights_contact";
};

export { data_policy_ccpa_exercising_rights_contact };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_exercising_rights_website = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_exercising_rights_website(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_exercising_rights_website(inputs);
  return "data_policy_ccpa_exercising_rights_website";
};

export { data_policy_ccpa_exercising_rights_website };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_exercising_rights_authorized_agent = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_exercising_rights_authorized_agent(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_exercising_rights_authorized_agent(inputs);
  return "data_policy_ccpa_exercising_rights_authorized_agent";
};

export { data_policy_ccpa_exercising_rights_authorized_agent };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_exercising_rights_request_must = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_exercising_rights_request_must(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_exercising_rights_request_must(inputs);
  return "data_policy_ccpa_exercising_rights_request_must";
};

export { data_policy_ccpa_exercising_rights_request_must };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_exercising_rights_request_must_1 = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_exercising_rights_request_must_1(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_exercising_rights_request_must_1(inputs);
  return "data_policy_ccpa_exercising_rights_request_must_1";
};

export { data_policy_ccpa_exercising_rights_request_must_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_exercising_rights_request_must_2 = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_exercising_rights_request_must_2(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_exercising_rights_request_must_2(inputs);
  return "data_policy_ccpa_exercising_rights_request_must_2";
};

export { data_policy_ccpa_exercising_rights_request_must_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_exercising_rights_cannot_respond = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_exercising_rights_cannot_respond(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_exercising_rights_cannot_respond(inputs);
  return "data_policy_ccpa_exercising_rights_cannot_respond";
};

export { data_policy_ccpa_exercising_rights_cannot_respond };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_exercising_rights_cannot_respond_1 = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_exercising_rights_cannot_respond_1(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_exercising_rights_cannot_respond_1(inputs);
  return "data_policy_ccpa_exercising_rights_cannot_respond_1";
};

export { data_policy_ccpa_exercising_rights_cannot_respond_1 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_exercising_rights_cannot_respond_2 = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_exercising_rights_cannot_respond_2(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_exercising_rights_cannot_respond_2(inputs);
  return "data_policy_ccpa_exercising_rights_cannot_respond_2";
};

export { data_policy_ccpa_exercising_rights_cannot_respond_2 };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_exercising_rights_disclosure = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_exercising_rights_disclosure(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_exercising_rights_disclosure(inputs);
  return "data_policy_ccpa_exercising_rights_disclosure";
};

export { data_policy_ccpa_exercising_rights_disclosure };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_exercising_rights_disclosure_period = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_exercising_rights_disclosure_period(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_exercising_rights_disclosure_period(inputs);
  return "data_policy_ccpa_exercising_rights_disclosure_period";
};

export { data_policy_ccpa_exercising_rights_disclosure_period };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const data_policy_ccpa_exercising_rights_data_portability = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.data_policy_ccpa_exercising_rights_data_portability(inputs);
  if (locale === "de")
    return de.data_policy_ccpa_exercising_rights_data_portability(inputs);
  return "data_policy_ccpa_exercising_rights_data_portability";
};

export { data_policy_ccpa_exercising_rights_data_portability };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_title(inputs);
  if (locale === "de") return de.privacy_title(inputs);
  return "privacy_title";
};

export { privacy_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_last_updated = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_last_updated(inputs);
  if (locale === "de") return de.privacy_last_updated(inputs);
  return "privacy_last_updated";
};

export { privacy_last_updated };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_description(inputs);
  if (locale === "de") return de.privacy_description(inputs);
  return "privacy_description";
};

export { privacy_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_agreement = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_agreement(inputs);
  if (locale === "de") return de.privacy_agreement(inputs);
  return "privacy_agreement";
};

export { privacy_agreement };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_interpretation_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_interpretation_title(inputs);
  if (locale === "de") return de.privacy_interpretation_title(inputs);
  return "privacy_interpretation_title";
};

export { privacy_interpretation_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_interpretation_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_interpretation_subtitle(inputs);
  if (locale === "de") return de.privacy_interpretation_subtitle(inputs);
  return "privacy_interpretation_subtitle";
};

export { privacy_interpretation_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_interpretation_text = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_interpretation_text(inputs);
  if (locale === "de") return de.privacy_interpretation_text(inputs);
  return "privacy_interpretation_text";
};

export { privacy_interpretation_text };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definitions_subtitle = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definitions_subtitle(inputs);
  if (locale === "de") return de.privacy_definitions_subtitle(inputs);
  return "privacy_definitions_subtitle";
};

export { privacy_definitions_subtitle };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definitions_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definitions_intro(inputs);
  if (locale === "de") return de.privacy_definitions_intro(inputs);
  return "privacy_definitions_intro";
};

export { privacy_definitions_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_account = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_account(inputs);
  if (locale === "de") return de.privacy_definition_account(inputs);
  return "privacy_definition_account";
};

export { privacy_definition_account };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_affiliate = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_affiliate(inputs);
  if (locale === "de") return de.privacy_definition_affiliate(inputs);
  return "privacy_definition_affiliate";
};

export { privacy_definition_affiliate };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_application = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_application(inputs);
  if (locale === "de") return de.privacy_definition_application(inputs);
  return "privacy_definition_application";
};

export { privacy_definition_application };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_business = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_business(inputs);
  if (locale === "de") return de.privacy_definition_business(inputs);
  return "privacy_definition_business";
};

export { privacy_definition_business };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_company = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_company(inputs);
  if (locale === "de") return de.privacy_definition_company(inputs);
  return "privacy_definition_company";
};

export { privacy_definition_company };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_company_gdpr = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_company_gdpr(inputs);
  if (locale === "de") return de.privacy_definition_company_gdpr(inputs);
  return "privacy_definition_company_gdpr";
};

export { privacy_definition_company_gdpr };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_consumer = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_consumer(inputs);
  if (locale === "de") return de.privacy_definition_consumer(inputs);
  return "privacy_definition_consumer";
};

export { privacy_definition_consumer };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_country = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_country(inputs);
  if (locale === "de") return de.privacy_definition_country(inputs);
  return "privacy_definition_country";
};

export { privacy_definition_country };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_data_controller = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_data_controller(inputs);
  if (locale === "de") return de.privacy_definition_data_controller(inputs);
  return "privacy_definition_data_controller";
};

export { privacy_definition_data_controller };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_device = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_device(inputs);
  if (locale === "de") return de.privacy_definition_device(inputs);
  return "privacy_definition_device";
};

export { privacy_definition_device };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_do_not_track = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_do_not_track(inputs);
  if (locale === "de") return de.privacy_definition_do_not_track(inputs);
  return "privacy_definition_do_not_track";
};

export { privacy_definition_do_not_track };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_personal_data = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_personal_data(inputs);
  if (locale === "de") return de.privacy_definition_personal_data(inputs);
  return "privacy_definition_personal_data";
};

export { privacy_definition_personal_data };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_personal_data_gdpr = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_personal_data_gdpr(inputs);
  if (locale === "de") return de.privacy_definition_personal_data_gdpr(inputs);
  return "privacy_definition_personal_data_gdpr";
};

export { privacy_definition_personal_data_gdpr };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_personal_data_ccpa = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_personal_data_ccpa(inputs);
  if (locale === "de") return de.privacy_definition_personal_data_ccpa(inputs);
  return "privacy_definition_personal_data_ccpa";
};

export { privacy_definition_personal_data_ccpa };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_sale = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_sale(inputs);
  if (locale === "de") return de.privacy_definition_sale(inputs);
  return "privacy_definition_sale";
};

export { privacy_definition_sale };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_service = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_service(inputs);
  if (locale === "de") return de.privacy_definition_service(inputs);
  return "privacy_definition_service";
};

export { privacy_definition_service };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_service_provider = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_service_provider(inputs);
  if (locale === "de") return de.privacy_definition_service_provider(inputs);
  return "privacy_definition_service_provider";
};

export { privacy_definition_service_provider };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_usage_data = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_usage_data(inputs);
  if (locale === "de") return de.privacy_definition_usage_data(inputs);
  return "privacy_definition_usage_data";
};

export { privacy_definition_usage_data };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_you = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_you(inputs);
  if (locale === "de") return de.privacy_definition_you(inputs);
  return "privacy_definition_you";
};

export { privacy_definition_you };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_definition_you_gdpr = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_definition_you_gdpr(inputs);
  if (locale === "de") return de.privacy_definition_you_gdpr(inputs);
  return "privacy_definition_you_gdpr";
};

export { privacy_definition_you_gdpr };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_collecting_data_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_collecting_data_title(inputs);
  if (locale === "de") return de.privacy_collecting_data_title(inputs);
  return "privacy_collecting_data_title";
};

export { privacy_collecting_data_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_types_of_data_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_types_of_data_title(inputs);
  if (locale === "de") return de.privacy_types_of_data_title(inputs);
  return "privacy_types_of_data_title";
};

export { privacy_types_of_data_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_personal_data_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_personal_data_title(inputs);
  if (locale === "de") return de.privacy_personal_data_title(inputs);
  return "privacy_personal_data_title";
};

export { privacy_personal_data_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_personal_data_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_personal_data_description(inputs);
  if (locale === "de") return de.privacy_personal_data_description(inputs);
  return "privacy_personal_data_description";
};

export { privacy_personal_data_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_personal_data_usage = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_personal_data_usage(inputs);
  if (locale === "de") return de.privacy_personal_data_usage(inputs);
  return "privacy_personal_data_usage";
};

export { privacy_personal_data_usage };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_usage_data_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_usage_data_title(inputs);
  if (locale === "de") return de.privacy_usage_data_title(inputs);
  return "privacy_usage_data_title";
};

export { privacy_usage_data_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_usage_data_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_usage_data_description(inputs);
  if (locale === "de") return de.privacy_usage_data_description(inputs);
  return "privacy_usage_data_description";
};

export { privacy_usage_data_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_usage_data_details = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_usage_data_details(inputs);
  if (locale === "de") return de.privacy_usage_data_details(inputs);
  return "privacy_usage_data_details";
};

export { privacy_usage_data_details };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_usage_data_mobile = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_usage_data_mobile(inputs);
  if (locale === "de") return de.privacy_usage_data_mobile(inputs);
  return "privacy_usage_data_mobile";
};

export { privacy_usage_data_mobile };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_usage_data_browser = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_usage_data_browser(inputs);
  if (locale === "de") return de.privacy_usage_data_browser(inputs);
  return "privacy_usage_data_browser";
};

export { privacy_usage_data_browser };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_use_of_data_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_use_of_data_title(inputs);
  if (locale === "de") return de.privacy_use_of_data_title(inputs);
  return "privacy_use_of_data_title";
};

export { privacy_use_of_data_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_use_of_data_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_use_of_data_intro(inputs);
  if (locale === "de") return de.privacy_use_of_data_intro(inputs);
  return "privacy_use_of_data_intro";
};

export { privacy_use_of_data_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_use_of_data_provide_service = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_use_of_data_provide_service(inputs);
  if (locale === "de") return de.privacy_use_of_data_provide_service(inputs);
  return "privacy_use_of_data_provide_service";
};

export { privacy_use_of_data_provide_service };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_use_of_data_manage_account = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_use_of_data_manage_account(inputs);
  if (locale === "de") return de.privacy_use_of_data_manage_account(inputs);
  return "privacy_use_of_data_manage_account";
};

export { privacy_use_of_data_manage_account };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_use_of_data_performance = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_use_of_data_performance(inputs);
  if (locale === "de") return de.privacy_use_of_data_performance(inputs);
  return "privacy_use_of_data_performance";
};

export { privacy_use_of_data_performance };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_use_of_data_contact = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_use_of_data_contact(inputs);
  if (locale === "de") return de.privacy_use_of_data_contact(inputs);
  return "privacy_use_of_data_contact";
};

export { privacy_use_of_data_contact };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_use_of_data_offers = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_use_of_data_offers(inputs);
  if (locale === "de") return de.privacy_use_of_data_offers(inputs);
  return "privacy_use_of_data_offers";
};

export { privacy_use_of_data_offers };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_use_of_data_requests = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_use_of_data_requests(inputs);
  if (locale === "de") return de.privacy_use_of_data_requests(inputs);
  return "privacy_use_of_data_requests";
};

export { privacy_use_of_data_requests };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_use_of_data_business_transfers = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_use_of_data_business_transfers(inputs);
  if (locale === "de") return de.privacy_use_of_data_business_transfers(inputs);
  return "privacy_use_of_data_business_transfers";
};

export { privacy_use_of_data_business_transfers };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_use_of_data_other_purposes = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_use_of_data_other_purposes(inputs);
  if (locale === "de") return de.privacy_use_of_data_other_purposes(inputs);
  return "privacy_use_of_data_other_purposes";
};

export { privacy_use_of_data_other_purposes };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_share_of_data_intro = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_share_of_data_intro(inputs);
  if (locale === "de") return de.privacy_share_of_data_intro(inputs);
  return "privacy_share_of_data_intro";
};

export { privacy_share_of_data_intro };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_share_of_data_service_providers = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.privacy_share_of_data_service_providers(inputs);
  if (locale === "de")
    return de.privacy_share_of_data_service_providers(inputs);
  return "privacy_share_of_data_service_providers";
};

export { privacy_share_of_data_service_providers };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_share_of_data_business_transfers = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.privacy_share_of_data_business_transfers(inputs);
  if (locale === "de")
    return de.privacy_share_of_data_business_transfers(inputs);
  return "privacy_share_of_data_business_transfers";
};

export { privacy_share_of_data_business_transfers };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_share_of_data_affiliates = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_share_of_data_affiliates(inputs);
  if (locale === "de") return de.privacy_share_of_data_affiliates(inputs);
  return "privacy_share_of_data_affiliates";
};

export { privacy_share_of_data_affiliates };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_share_of_data_business_partners = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.privacy_share_of_data_business_partners(inputs);
  if (locale === "de")
    return de.privacy_share_of_data_business_partners(inputs);
  return "privacy_share_of_data_business_partners";
};

export { privacy_share_of_data_business_partners };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_share_of_data_other_users = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_share_of_data_other_users(inputs);
  if (locale === "de") return de.privacy_share_of_data_other_users(inputs);
  return "privacy_share_of_data_other_users";
};

export { privacy_share_of_data_other_users };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_share_of_data_consent = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_share_of_data_consent(inputs);
  if (locale === "de") return de.privacy_share_of_data_consent(inputs);
  return "privacy_share_of_data_consent";
};

export { privacy_share_of_data_consent };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_retention_of_data_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_retention_of_data_title(inputs);
  if (locale === "de") return de.privacy_retention_of_data_title(inputs);
  return "privacy_retention_of_data_title";
};

export { privacy_retention_of_data_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_retention_of_data_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_retention_of_data_description(inputs);
  if (locale === "de") return de.privacy_retention_of_data_description(inputs);
  return "privacy_retention_of_data_description";
};

export { privacy_retention_of_data_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_retention_of_usage_data = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_retention_of_usage_data(inputs);
  if (locale === "de") return de.privacy_retention_of_usage_data(inputs);
  return "privacy_retention_of_usage_data";
};

export { privacy_retention_of_usage_data };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_transfer_of_data_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_transfer_of_data_title(inputs);
  if (locale === "de") return de.privacy_transfer_of_data_title(inputs);
  return "privacy_transfer_of_data_title";
};

export { privacy_transfer_of_data_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_transfer_of_data_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_transfer_of_data_description(inputs);
  if (locale === "de") return de.privacy_transfer_of_data_description(inputs);
  return "privacy_transfer_of_data_description";
};

export { privacy_transfer_of_data_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_transfer_of_data_consent = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_transfer_of_data_consent(inputs);
  if (locale === "de") return de.privacy_transfer_of_data_consent(inputs);
  return "privacy_transfer_of_data_consent";
};

export { privacy_transfer_of_data_consent };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_transfer_of_data_safeguards = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_transfer_of_data_safeguards(inputs);
  if (locale === "de") return de.privacy_transfer_of_data_safeguards(inputs);
  return "privacy_transfer_of_data_safeguards";
};

export { privacy_transfer_of_data_safeguards };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_disclosure_of_data_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_disclosure_of_data_title(inputs);
  if (locale === "de") return de.privacy_disclosure_of_data_title(inputs);
  return "privacy_disclosure_of_data_title";
};

export { privacy_disclosure_of_data_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_disclosure_business_transactions_title = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.privacy_disclosure_business_transactions_title(inputs);
  if (locale === "de")
    return de.privacy_disclosure_business_transactions_title(inputs);
  return "privacy_disclosure_business_transactions_title";
};

export { privacy_disclosure_business_transactions_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_disclosure_business_transactions_description = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.privacy_disclosure_business_transactions_description(inputs);
  if (locale === "de")
    return de.privacy_disclosure_business_transactions_description(inputs);
  return "privacy_disclosure_business_transactions_description";
};

export { privacy_disclosure_business_transactions_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_disclosure_law_enforcement_title = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.privacy_disclosure_law_enforcement_title(inputs);
  if (locale === "de")
    return de.privacy_disclosure_law_enforcement_title(inputs);
  return "privacy_disclosure_law_enforcement_title";
};

export { privacy_disclosure_law_enforcement_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_disclosure_law_enforcement_description = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.privacy_disclosure_law_enforcement_description(inputs);
  if (locale === "de")
    return de.privacy_disclosure_law_enforcement_description(inputs);
  return "privacy_disclosure_law_enforcement_description";
};

export { privacy_disclosure_law_enforcement_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_disclosure_other_legal_requirements_title = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.privacy_disclosure_other_legal_requirements_title(inputs);
  if (locale === "de")
    return de.privacy_disclosure_other_legal_requirements_title(inputs);
  return "privacy_disclosure_other_legal_requirements_title";
};

export { privacy_disclosure_other_legal_requirements_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_disclosure_other_legal_requirements_description = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.privacy_disclosure_other_legal_requirements_description(inputs);
  if (locale === "de")
    return de.privacy_disclosure_other_legal_requirements_description(inputs);
  return "privacy_disclosure_other_legal_requirements_description";
};

export { privacy_disclosure_other_legal_requirements_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_disclosure_other_legal_requirements_comply = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.privacy_disclosure_other_legal_requirements_comply(inputs);
  if (locale === "de")
    return de.privacy_disclosure_other_legal_requirements_comply(inputs);
  return "privacy_disclosure_other_legal_requirements_comply";
};

export { privacy_disclosure_other_legal_requirements_comply };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_disclosure_other_legal_requirements_protect = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.privacy_disclosure_other_legal_requirements_protect(inputs);
  if (locale === "de")
    return de.privacy_disclosure_other_legal_requirements_protect(inputs);
  return "privacy_disclosure_other_legal_requirements_protect";
};

export { privacy_disclosure_other_legal_requirements_protect };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_disclosure_other_legal_requirements_prevent = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.privacy_disclosure_other_legal_requirements_prevent(inputs);
  if (locale === "de")
    return de.privacy_disclosure_other_legal_requirements_prevent(inputs);
  return "privacy_disclosure_other_legal_requirements_prevent";
};

export { privacy_disclosure_other_legal_requirements_prevent };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_disclosure_other_legal_requirements_protect_personal = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.privacy_disclosure_other_legal_requirements_protect_personal(
      inputs
    );
  if (locale === "de")
    return de.privacy_disclosure_other_legal_requirements_protect_personal(
      inputs
    );
  return "privacy_disclosure_other_legal_requirements_protect_personal";
};

export { privacy_disclosure_other_legal_requirements_protect_personal };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_disclosure_other_legal_requirements_protect_legal = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.privacy_disclosure_other_legal_requirements_protect_legal(inputs);
  if (locale === "de")
    return de.privacy_disclosure_other_legal_requirements_protect_legal(inputs);
  return "privacy_disclosure_other_legal_requirements_protect_legal";
};

export { privacy_disclosure_other_legal_requirements_protect_legal };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_security_of_data_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_security_of_data_title(inputs);
  if (locale === "de") return de.privacy_security_of_data_title(inputs);
  return "privacy_security_of_data_title";
};

export { privacy_security_of_data_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_security_of_data_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_security_of_data_description(inputs);
  if (locale === "de") return de.privacy_security_of_data_description(inputs);
  return "privacy_security_of_data_description";
};

export { privacy_security_of_data_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_children_privacy_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_children_privacy_title(inputs);
  if (locale === "de") return de.privacy_children_privacy_title(inputs);
  return "privacy_children_privacy_title";
};

export { privacy_children_privacy_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_children_privacy_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_children_privacy_description(inputs);
  if (locale === "de") return de.privacy_children_privacy_description(inputs);
  return "privacy_children_privacy_description";
};

export { privacy_children_privacy_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_children_privacy_consent = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_children_privacy_consent(inputs);
  if (locale === "de") return de.privacy_children_privacy_consent(inputs);
  return "privacy_children_privacy_consent";
};

export { privacy_children_privacy_consent };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_links_to_other_websites_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_links_to_other_websites_title(inputs);
  if (locale === "de") return de.privacy_links_to_other_websites_title(inputs);
  return "privacy_links_to_other_websites_title";
};

export { privacy_links_to_other_websites_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_links_to_other_websites_description = (
  inputs = {},
  options = {}
) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.privacy_links_to_other_websites_description(inputs);
  if (locale === "de")
    return de.privacy_links_to_other_websites_description(inputs);
  return "privacy_links_to_other_websites_description";
};

export { privacy_links_to_other_websites_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_links_to_other_websites_control = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en")
    return en.privacy_links_to_other_websites_control(inputs);
  if (locale === "de")
    return de.privacy_links_to_other_websites_control(inputs);
  return "privacy_links_to_other_websites_control";
};

export { privacy_links_to_other_websites_control };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_changes_to_policy_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_changes_to_policy_title(inputs);
  if (locale === "de") return de.privacy_changes_to_policy_title(inputs);
  return "privacy_changes_to_policy_title";
};

export { privacy_changes_to_policy_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_changes_to_policy_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_changes_to_policy_description(inputs);
  if (locale === "de") return de.privacy_changes_to_policy_description(inputs);
  return "privacy_changes_to_policy_description";
};

export { privacy_changes_to_policy_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_changes_to_policy_notification = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_changes_to_policy_notification(inputs);
  if (locale === "de") return de.privacy_changes_to_policy_notification(inputs);
  return "privacy_changes_to_policy_notification";
};

export { privacy_changes_to_policy_notification };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_changes_to_policy_review = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_changes_to_policy_review(inputs);
  if (locale === "de") return de.privacy_changes_to_policy_review(inputs);
  return "privacy_changes_to_policy_review";
};

export { privacy_changes_to_policy_review };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_contact_us_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_contact_us_title(inputs);
  if (locale === "de") return de.privacy_contact_us_title(inputs);
  return "privacy_contact_us_title";
};

export { privacy_contact_us_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_contact_us_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_contact_us_description(inputs);
  if (locale === "de") return de.privacy_contact_us_description(inputs);
  return "privacy_contact_us_description";
};

export { privacy_contact_us_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const privacy_contact_us_website = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.privacy_contact_us_website(inputs);
  if (locale === "de") return de.privacy_contact_us_website(inputs);
  return "privacy_contact_us_website";
};

export { privacy_contact_us_website };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const website_title = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.website_title(inputs);
  if (locale === "de") return de.website_title(inputs);
  return "website_title";
};

export { website_title };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const website_description = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.website_description(inputs);
  if (locale === "de") return de.website_description(inputs);
  return "website_description";
};

export { website_description };
/**
* This function has been compiled by [Paraglide JS](https://inlang.com/m/gerre34r).
*
* - Changing this function will be over-written by the next build.
*
* - If you want to change the translations, you can either edit the source files e.g. `en.json`, or
* use another inlang app like [Fink](https://inlang.com/m/tdozzpar) or the [VSCode extension Sherlock](https://inlang.com/m/r7kp499g).
* 
* @param {{  }} inputs
* @param {{ locale?: "en" | "de" }} options
* @returns {string}

*/
/* @__NO_SIDE_EFFECTS__ */
const website_keywords = (inputs = {}, options = {}) => {
  const locale = options.locale ?? getLocale();
  if (locale === "en") return en.website_keywords(inputs);
  if (locale === "de") return de.website_keywords(inputs);
  return "website_keywords";
};

export { website_keywords };
